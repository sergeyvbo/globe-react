# Development overrides for Docker Compose
# This file is automatically loaded when running docker-compose up
version: '3.8'

services:
  # Development database configuration
  database:
    ports:
      - "5432:5432"  # Expose database port for development tools
    environment:
      POSTGRES_DB: ${DB_NAME:-geoquiz_dev}
      POSTGRES_USER: ${DB_USER:-dev_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro

  # Development backend configuration
  backend:
    build:
      target: runtime
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Development}
      ConnectionStrings__DefaultConnection: "Host=database;Port=5432;Database=${DB_NAME:-geoquiz_dev};Username=${DB_USER:-dev_user};Password=${DB_PASSWORD:-dev_password}"
      JwtSettings__SecretKey: ${JWT_SECRET_KEY:-development-secret-key-change-in-production-this-must-be-at-least-32-characters-long}
      JwtSettings__ExpirationMinutes: ${JWT_EXPIRATION_MINUTES:-1440}  # 24 hours for development
      CorsSettings__AllowedOrigins__0: ${FRONTEND_URL:-http://localhost:3000}
      CorsSettings__AllowedOrigins__1: "http://localhost:3001"
      SecuritySettings__EnforceHttps: ${ENFORCE_HTTPS:-false}
      Serilog__MinimumLevel__Default: ${LOG_LEVEL:-Debug}
      SwaggerSettings__Enabled: ${ENABLE_SWAGGER:-true}
      CorsSettings__AllowAllOrigins: ${ENABLE_CORS_ALL_ORIGINS:-true}
      ErrorHandling__ShowDetailedErrors: ${ENABLE_DETAILED_ERRORS:-true}
      # Development service discovery
      ServiceDiscovery__DatabaseHost: database
      ServiceDiscovery__DatabasePort: 5432
      DOCKER_ENVIRONMENT: Development
      SERVICE_NAME: backend
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    volumes:
      # Mount source code for hot reload (if using dotnet watch)
      - ../../backend/GeoQuizApi:/app/source:ro
      - backend_dev_logs:/app/logs
      - backend_dev_data:/app/data
    command: ["dotnet", "GeoQuizApi.dll"]

  # Development frontend configuration
  frontend:
    build:
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5000/api}
        NODE_ENV: ${NODE_ENV:-development}
    environment:
      NGINX_HOST: ${NGINX_HOST:-localhost}
      # Development service discovery
      BACKEND_SERVICE_NAME: backend
      BACKEND_SERVICE_PORT: 5000
      SERVICE_NAME: frontend
      DOCKER_ENVIRONMENT: Development
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    volumes:
      # For development with live updates (uncomment if needed)
      # - ../../src:/app/src:ro
      # - ../../public:/app/public:ro
      - frontend_dev_cache:/tmp/nginx

# Development volumes
volumes:
  postgres_dev_data:
    driver: local
    name: ${DOCKER_NAMESPACE:-geoquiz}_postgres_dev_data
    labels:
      - "com.geoquiz.volume=database-dev"
      - "com.geoquiz.environment=development"
  backend_dev_logs:
    driver: local
    name: ${DOCKER_NAMESPACE:-geoquiz}_backend_dev_logs
    labels:
      - "com.geoquiz.volume=backend-logs-dev"
      - "com.geoquiz.environment=development"
  backend_dev_data:
    driver: local
    name: ${DOCKER_NAMESPACE:-geoquiz}_backend_dev_data
    labels:
      - "com.geoquiz.volume=backend-data-dev"
      - "com.geoquiz.environment=development"
  frontend_dev_cache:
    driver: local
    name: ${DOCKER_NAMESPACE:-geoquiz}_frontend_dev_cache
    labels:
      - "com.geoquiz.volume=frontend-cache-dev"
      - "com.geoquiz.environment=development"