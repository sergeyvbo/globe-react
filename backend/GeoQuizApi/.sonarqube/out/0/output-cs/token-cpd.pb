«û
:/usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public

 
class

 
LeaderboardService

 
:

  !
ILeaderboardService

" 5
{ 
private 
readonly 
GeoQuizDbContext %
_context& .
;. /
private 
readonly 
IMemoryCache !
_cache" (
;( )
private 
readonly 
ILogger 
< 
LeaderboardService /
>/ 0
_logger1 8
;8 9
private 
const 
int "
CacheExpirationMinutes ,
=- .
$num/ 0
;0 1
private 
const 
string 
CacheKeyPrefix '
=( )
$str* 7
;7 8
public 

LeaderboardService 
( 
GeoQuizDbContext .
context/ 6
,6 7
IMemoryCache8 D
cacheE J
,J K
ILoggerL S
<S T
LeaderboardServiceT f
>f g
loggerh n
)n o
{ 
_context 
= 
context 
; 
_cache 
= 
cache 
; 
_logger 
= 
logger 
; 
} 
public 

async 
Task 
< 
LeaderboardResponse )
>) *%
GetGlobalLeaderboardAsync+ D
(D E
intE H
pageI M
=N O
$numP Q
,Q R
intS V
pageSizeW _
=` a
$numb d
,d e
Guidf j
?j k
currentUserIdl y
=z {
null	| Ä
)
Ä Å
{ 
return 
await '
GetFilteredLeaderboardAsync 0
(0 1
null1 5
,5 6
null7 ;
,; <
page= A
,A B
pageSizeC K
,K L
currentUserIdM Z
)Z [
;[ \
} 
public 

async 
Task 
< 
LeaderboardResponse )
>) *)
GetLeaderboardByGameTypeAsync+ H
(H I
stringI O
gameTypeP X
,X Y
intZ ]
page^ b
=c d
$nume f
,f g
inth k
pageSizel t
=u v
$numw y
,y z
Guid{ 
?	 Ä
currentUserId
Å é
=
è ê
null
ë ï
)
ï ñ
{   
if!! 

(!! 
string!! 
.!! 
IsNullOrWhiteSpace!! %
(!!% &
gameType!!& .
)!!. /
)!!/ 0
{"" 	
throw## 
new## 
ArgumentException## '
(##' (
$str##( ?
,##? @
nameof##A G
(##G H
gameType##H P
)##P Q
)##Q R
;##R S
}$$ 	
if&& 

(&& 
!&& 

GeoQuizApi&& 
.&& 
Models&& 
.&& 
	GameTypes&& (
.&&( )
ValidGameTypes&&) 7
.&&7 8
Contains&&8 @
(&&@ A
gameType&&A I
.&&I J
ToLowerInvariant&&J Z
(&&Z [
)&&[ \
)&&\ ]
)&&] ^
{'' 	
throw(( 
new(( 
ArgumentException(( '
(((' (
$"((( *
$str((* J
{((J K
string((K Q
.((Q R
Join((R V
(((V W
$str((W [
,(([ \

GeoQuizApi((] g
.((g h
Models((h n
.((n o
	GameTypes((o x
.((x y
ValidGameTypes	((y á
)
((á à
}
((à â
"
((â ä
,
((ä ã
nameof
((å í
(
((í ì
gameType
((ì õ
)
((õ ú
)
((ú ù
;
((ù û
})) 	
return++ 
await++ '
GetFilteredLeaderboardAsync++ 0
(++0 1
gameType++1 9
.++9 :
ToLowerInvariant++: J
(++J K
)++K L
,++L M
null++N R
,++R S
page++T X
,++X Y
pageSize++Z b
,++b c
currentUserId++d q
)++q r
;++r s
},, 
public.. 

async.. 
Task.. 
<.. 
LeaderboardResponse.. )
>..) *'
GetLeaderboardByPeriodAsync..+ F
(..F G
string..G M
period..N T
,..T U
int..V Y
page..Z ^
=.._ `
$num..a b
,..b c
int..d g
pageSize..h p
=..q r
$num..s u
,..u v
Guid..w {
?..{ |
currentUserId	..} ä
=
..ã å
null
..ç ë
)
..ë í
{// 
if00 

(00 
string00 
.00 
IsNullOrWhiteSpace00 %
(00% &
period00& ,
)00, -
)00- .
{11 	
throw22 
new22 
ArgumentException22 '
(22' (
$str22( <
,22< =
nameof22> D
(22D E
period22E K
)22K L
)22L M
;22M N
}33 	
if55 

(55 
!55 

GeoQuizApi55 
.55 
Models55 
.55 
LeaderboardPeriods55 1
.551 2
ValidPeriods552 >
.55> ?
Contains55? G
(55G H
period55H N
.55N O
ToLowerInvariant55O _
(55_ `
)55` a
)55a b
)55b c
{66 	
throw77 
new77 
ArgumentException77 '
(77' (
$"77( *
$str77* I
{77I J
string77J P
.77P Q
Join77Q U
(77U V
$str77V Z
,77Z [

GeoQuizApi77\ f
.77f g
Models77g m
.77m n
LeaderboardPeriods	77n Ä
.
77Ä Å
ValidPeriods
77Å ç
)
77ç é
}
77é è
"
77è ê
,
77ê ë
nameof
77í ò
(
77ò ô
period
77ô ü
)
77ü †
)
77† °
;
77° ¢
}88 	
return:: 
await:: '
GetFilteredLeaderboardAsync:: 0
(::0 1
null::1 5
,::5 6
period::7 =
.::= >
ToLowerInvariant::> N
(::N O
)::O P
,::P Q
page::R V
,::V W
pageSize::X `
,::` a
currentUserId::b o
)::o p
;::p q
};; 
public== 

async== 
Task== 
<== 
LeaderboardResponse== )
>==) *'
GetFilteredLeaderboardAsync==+ F
(==F G
string==G M
?==M N
gameType==O W
===X Y
null==Z ^
,==^ _
string==` f
?==f g
period==h n
===o p
null==q u
,==u v
int==w z
page=={ 
=
==Ä Å
$num
==Ç É
,
==É Ñ
int
==Ö à
pageSize
==â ë
=
==í ì
$num
==î ñ
,
==ñ ó
Guid
==ò ú
?
==ú ù
currentUserId
==û ´
=
==¨ ≠
null
==Æ ≤
)
==≤ ≥
{>> 
if@@ 

(@@ 
page@@ 
<@@ 
$num@@ 
)@@ 
page@@ 
=@@ 
$num@@ 
;@@ 
ifAA 

(AA 
pageSizeAA 
<AA 
$numAA 
||AA 
pageSizeAA $
>AA% &
$numAA' *
)AA* +
pageSizeAA, 4
=AA5 6
$numAA7 9
;AA9 :
varDD 
cacheKeyDD 
=DD 
GenerateCacheKeyDD '
(DD' (
gameTypeDD( 0
,DD0 1
periodDD2 8
,DD8 9
pageDD: >
,DD> ?
pageSizeDD@ H
)DDH I
;DDI J
ifGG 

(GG 
_cacheGG 
.GG 
TryGetValueGG 
(GG 
cacheKeyGG '
,GG' (
outGG) ,
LeaderboardResponseGG- @
?GG@ A
cachedResultGGB N
)GGN O
&&GGP R
cachedResultGGS _
!=GG` b
nullGGc g
)GGg h
{HH 	
_loggerII 
.II 
LogDebugII 
(II 
$strII O
,IIO P
cacheKeyIIQ Y
)IIY Z
;IIZ [
ifLL 
(LL 
currentUserIdLL 
.LL 
HasValueLL &
&&LL' )
cachedResultLL* 6
.LL6 7
CurrentUserEntryLL7 G
==LLH J
nullLLK O
)LLO P
{MM 
cachedResultNN 
.NN 
CurrentUserEntryNN -
=NN. /
awaitNN0 5$
GetCurrentUserEntryAsyncNN6 N
(NNN O
currentUserIdNNO \
.NN\ ]
ValueNN] b
,NNb c
gameTypeNNd l
,NNl m
periodNNn t
)NNt u
;NNu v
}OO 
returnQQ 
cachedResultQQ 
;QQ  
}RR 	
DateTimeUU 
?UU 
fromDateUU 
=UU  
GetFromDateForPeriodUU 1
(UU1 2
periodUU2 8
)UU8 9
;UU9 :
varXX 
leaderboardDataXX 
=XX 
awaitXX ##
GetLeaderboardDataAsyncXX$ ;
(XX; <
gameTypeXX< D
,XXD E
fromDateXXF N
)XXN O
;XXO P
var[[ 
totalPlayers[[ 
=[[ 
leaderboardData[[ *
.[[* +
Count[[+ 0
;[[0 1
var\\ 

totalPages\\ 
=\\ 
(\\ 
int\\ 
)\\ 
Math\\ "
.\\" #
Ceiling\\# *
(\\* +
(\\+ ,
double\\, 2
)\\2 3
totalPlayers\\3 ?
/\\@ A
pageSize\\B J
)\\J K
;\\K L
var__ 
pagedEntries__ 
=__ 
leaderboardData__ *
.`` 
Skip`` 
(`` 
(`` 
page`` 
-`` 
$num`` 
)`` 
*`` 
pageSize`` '
)``' (
.aa 
Takeaa 
(aa 
pageSizeaa 
)aa 
.bb 
ToListbb 
(bb 
)bb 
;bb 
varee 
responseee 
=ee 
newee 
LeaderboardResponseee .
{ff 	
Entriesgg 
=gg 
pagedEntriesgg "
,gg" #
TotalPlayershh 
=hh 
totalPlayershh '
,hh' (
Pageii 
=ii 
pageii 
,ii 
PageSizejj 
=jj 
pageSizejj 
,jj  

TotalPageskk 
=kk 

totalPageskk #
}ll 	
;ll	 

ifoo 

(oo 
currentUserIdoo 
.oo 
HasValueoo "
)oo" #
{pp 	
responseqq 
.qq 
CurrentUserEntryqq %
=qq& '
awaitqq( -$
GetCurrentUserEntryAsyncqq. F
(qqF G
currentUserIdqqG T
.qqT U
ValueqqU Z
,qqZ [
gameTypeqq\ d
,qqd e
periodqqf l
)qql m
;qqm n
}rr 	
varuu 
cacheOptionsuu 
=uu 
newuu #
MemoryCacheEntryOptionsuu 6
{vv 	+
AbsoluteExpirationRelativeToNowww +
=ww, -
TimeSpanww. 6
.ww6 7
FromMinutesww7 B
(wwB C"
CacheExpirationMinuteswwC Y
)wwY Z
,wwZ [
SlidingExpirationxx 
=xx 
TimeSpanxx  (
.xx( )
FromMinutesxx) 4
(xx4 5
$numxx5 6
)xx6 7
}yy 	
;yy	 

var{{ 
cacheableResponse{{ 
={{ 
new{{  #
LeaderboardResponse{{$ 7
{|| 	
Entries}} 
=}} 
response}} 
.}} 
Entries}} &
,}}& '
TotalPlayers~~ 
=~~ 
response~~ #
.~~# $
TotalPlayers~~$ 0
,~~0 1
Page 
= 
response 
. 
Page  
,  !
PageSize
ÄÄ 
=
ÄÄ 
response
ÄÄ 
.
ÄÄ  
PageSize
ÄÄ  (
,
ÄÄ( )

TotalPages
ÅÅ 
=
ÅÅ 
response
ÅÅ !
.
ÅÅ! "

TotalPages
ÅÅ" ,
}
ÉÉ 	
;
ÉÉ	 

_cache
ÖÖ 
.
ÖÖ 
Set
ÖÖ 
(
ÖÖ 
cacheKey
ÖÖ 
,
ÖÖ 
cacheableResponse
ÖÖ .
,
ÖÖ. /
cacheOptions
ÖÖ0 <
)
ÖÖ< =
;
ÖÖ= >
_logger
ÜÜ 
.
ÜÜ 
LogDebug
ÜÜ 
(
ÜÜ 
$str
ÜÜ A
,
ÜÜA B
cacheKey
ÜÜC K
)
ÜÜK L
;
ÜÜL M
return
àà 
response
àà 
;
àà 
}
ââ 
public
ãã 

void
ãã 

ClearCache
ãã 
(
ãã 
)
ãã 
{
åå 
_logger
êê 
.
êê 
LogInformation
êê 
(
êê 
$str
êê s
)
êês t
;
êêt u
}
ëë 
private
ìì 
async
ìì 
Task
ìì 
<
ìì 
List
ìì 
<
ìì 
LeaderboardEntry
ìì ,
>
ìì, -
>
ìì- .%
GetLeaderboardDataAsync
ìì/ F
(
ììF G
string
ììG M
?
ììM N
gameType
ììO W
,
ììW X
DateTime
ììY a
?
ììa b
fromDate
ììc k
)
ììk l
{
îî 
var
ññ 
query
ññ 
=
ññ 
_context
ññ 
.
ññ 
GameSessions
ññ )
.
óó 
Include
óó 
(
óó 
gs
óó 
=>
óó 
gs
óó 
.
óó 
User
óó "
)
óó" #
.
òò 
AsQueryable
òò 
(
òò 
)
òò 
;
òò 
if
õõ 

(
õõ 
!
õõ 
string
õõ 
.
õõ  
IsNullOrWhiteSpace
õõ &
(
õõ& '
gameType
õõ' /
)
õõ/ 0
)
õõ0 1
{
úú 	
query
ùù 
=
ùù 
query
ùù 
.
ùù 
Where
ùù 
(
ùù  
gs
ùù  "
=>
ùù# %
gs
ùù& (
.
ùù( )
GameType
ùù) 1
==
ùù2 4
gameType
ùù5 =
)
ùù= >
;
ùù> ?
}
ûû 	
if
°° 

(
°° 
fromDate
°° 
.
°° 
HasValue
°° 
)
°° 
{
¢¢ 	
query
££ 
=
££ 
query
££ 
.
££ 
Where
££ 
(
££  
gs
££  "
=>
££# %
gs
££& (
.
££( )
SessionStartTime
££) 9
>=
££: <
fromDate
££= E
.
££E F
Value
££F K
)
££K L
;
££L M
}
§§ 	
var
ßß 
	userStats
ßß 
=
ßß 
await
ßß 
query
ßß #
.
®® 
GroupBy
®® 
(
®® 
gs
®® 
=>
®® 
new
®® 
{
®®  
gs
®®! #
.
®®# $
UserId
®®$ *
,
®®* +
gs
®®, .
.
®®. /
User
®®/ 3
.
®®3 4
Name
®®4 8
,
®®8 9
gs
®®: <
.
®®< =
User
®®= A
.
®®A B
Email
®®B G
}
®®H I
)
®®I J
.
©© 
Select
©© 
(
©© 
g
©© 
=>
©© 
new
©© 
{
™™ 
UserId
´´ 
=
´´ 
g
´´ 
.
´´ 
Key
´´ 
.
´´ 
UserId
´´ %
,
´´% &
Name
¨¨ 
=
¨¨ 
g
¨¨ 
.
¨¨ 
Key
¨¨ 
.
¨¨ 
Name
¨¨ !
,
¨¨! "
Email
≠≠ 
=
≠≠ 
g
≠≠ 
.
≠≠ 
Key
≠≠ 
.
≠≠ 
Email
≠≠ #
,
≠≠# $

TotalGames
ÆÆ 
=
ÆÆ 
g
ÆÆ 
.
ÆÆ 
Count
ÆÆ $
(
ÆÆ$ %
)
ÆÆ% &
,
ÆÆ& '!
TotalCorrectAnswers
ØØ #
=
ØØ$ %
g
ØØ& '
.
ØØ' (
Sum
ØØ( +
(
ØØ+ ,
gs
ØØ, .
=>
ØØ/ 1
gs
ØØ2 4
.
ØØ4 5
CorrectAnswers
ØØ5 C
)
ØØC D
,
ØØD E
TotalWrongAnswers
∞∞ !
=
∞∞" #
g
∞∞$ %
.
∞∞% &
Sum
∞∞& )
(
∞∞) *
gs
∞∞* ,
=>
∞∞- /
gs
∞∞0 2
.
∞∞2 3
WrongAnswers
∞∞3 ?
)
∞∞? @
,
∞∞@ A
LastPlayedAt
±± 
=
±± 
g
±±  
.
±±  !
Max
±±! $
(
±±$ %
gs
±±% '
=>
±±( *
gs
±±+ -
.
±±- .
SessionStartTime
±±. >
)
±±> ?
,
±±? @
Sessions
≤≤ 
=
≤≤ 
g
≤≤ 
.
≤≤ 
OrderBy
≤≤ $
(
≤≤$ %
gs
≤≤% '
=>
≤≤( *
gs
≤≤+ -
.
≤≤- .
SessionStartTime
≤≤. >
)
≤≤> ?
.
≤≤? @
ToList
≤≤@ F
(
≤≤F G
)
≤≤G H
}
≥≥ 
)
≥≥ 
.
¥¥ 
ToListAsync
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
var
∑∑  
leaderboardEntries
∑∑ 
=
∑∑  
new
∑∑! $
List
∑∑% )
<
∑∑) *
LeaderboardEntry
∑∑* :
>
∑∑: ;
(
∑∑; <
)
∑∑< =
;
∑∑= >
foreach
ππ 
(
ππ 
var
ππ 
userStat
ππ 
in
ππ  
	userStats
ππ! *
)
ππ* +
{
∫∫ 	
var
ªª 
totalAnswers
ªª 
=
ªª 
userStat
ªª '
.
ªª' (!
TotalCorrectAnswers
ªª( ;
+
ªª< =
userStat
ªª> F
.
ªªF G
TotalWrongAnswers
ªªG X
;
ªªX Y
var
ºº 
accuracy
ºº 
=
ºº 
totalAnswers
ºº '
>
ºº( )
$num
ºº* +
?
ºº, -
Math
ºº. 2
.
ºº2 3
Round
ºº3 8
(
ºº8 9
(
ºº9 :
double
ºº: @
)
ºº@ A
userStat
ººA I
.
ººI J!
TotalCorrectAnswers
ººJ ]
/
ºº^ _
totalAnswers
ºº` l
*
ººm n
$num
ººo r
,
ººr s
$num
ººt u
)
ººu v
:
ººw x
$num
ººy z
;
ººz {
var
øø 

bestStreak
øø 
=
øø !
CalculateBestStreak
øø 0
(
øø0 1
userStat
øø1 9
.
øø9 :
Sessions
øø: B
)
øøB C
;
øøC D
var
¬¬ 

totalScore
¬¬ 
=
¬¬ !
CalculateTotalScore
¬¬ 0
(
¬¬0 1
userStat
¬¬1 9
.
¬¬9 :!
TotalCorrectAnswers
¬¬: M
,
¬¬M N
accuracy
¬¬O W
,
¬¬W X

bestStreak
¬¬Y c
)
¬¬c d
;
¬¬d e
var
ƒƒ 
displayName
ƒƒ 
=
ƒƒ 
!
ƒƒ 
string
ƒƒ %
.
ƒƒ% & 
IsNullOrWhiteSpace
ƒƒ& 8
(
ƒƒ8 9
userStat
ƒƒ9 A
.
ƒƒA B
Name
ƒƒB F
)
ƒƒF G
?
≈≈ 
userStat
≈≈ 
.
≈≈ 
Name
≈≈ 
:
∆∆ 
userStat
∆∆ 
.
∆∆ 
Email
∆∆  
.
∆∆  !
Split
∆∆! &
(
∆∆& '
$char
∆∆' *
)
∆∆* +
[
∆∆+ ,
$num
∆∆, -
]
∆∆- .
;
∆∆. / 
leaderboardEntries
»» 
.
»» 
Add
»» "
(
»»" #
new
»»# &
LeaderboardEntry
»»' 7
{
…… 
UserId
   
=
   
userStat
   !
.
  ! "
UserId
  " (
.
  ( )
ToString
  ) 1
(
  1 2
)
  2 3
,
  3 4
DisplayName
ÀÀ 
=
ÀÀ 
displayName
ÀÀ )
,
ÀÀ) *

TotalScore
ÃÃ 
=
ÃÃ 

totalScore
ÃÃ '
,
ÃÃ' (

TotalGames
ÕÕ 
=
ÕÕ 
userStat
ÕÕ %
.
ÕÕ% &

TotalGames
ÕÕ& 0
,
ÕÕ0 1
Accuracy
ŒŒ 
=
ŒŒ 
accuracy
ŒŒ #
,
ŒŒ# $

BestStreak
œœ 
=
œœ 

bestStreak
œœ '
,
œœ' (
LastPlayedAt
–– 
=
–– 
userStat
–– '
.
––' (
LastPlayedAt
––( 4
}
—— 
)
—— 
;
—— 
}
““ 	
var
’’ 
sortedEntries
’’ 
=
’’  
leaderboardEntries
’’ .
.
÷÷ 
OrderByDescending
÷÷ 
(
÷÷ 
e
÷÷  
=>
÷÷! #
e
÷÷$ %
.
÷÷% &

TotalScore
÷÷& 0
)
÷÷0 1
.
◊◊ 
ThenByDescending
◊◊ 
(
◊◊ 
e
◊◊ 
=>
◊◊  "
e
◊◊# $
.
◊◊$ %
Accuracy
◊◊% -
)
◊◊- .
.
ÿÿ 
ThenByDescending
ÿÿ 
(
ÿÿ 
e
ÿÿ 
=>
ÿÿ  "
e
ÿÿ# $
.
ÿÿ$ %

BestStreak
ÿÿ% /
)
ÿÿ/ 0
.
ŸŸ 
ThenByDescending
ŸŸ 
(
ŸŸ 
e
ŸŸ 
=>
ŸŸ  "
e
ŸŸ# $
.
ŸŸ$ %
LastPlayedAt
ŸŸ% 1
)
ŸŸ1 2
.
⁄⁄ 
ToList
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
for
›› 
(
›› 
int
›› 
i
›› 
=
›› 
$num
›› 
;
›› 
i
›› 
<
›› 
sortedEntries
›› )
.
››) *
Count
››* /
;
››/ 0
i
››1 2
++
››2 4
)
››4 5
{
ﬁﬁ 	
sortedEntries
ﬂﬂ 
[
ﬂﬂ 
i
ﬂﬂ 
]
ﬂﬂ 
.
ﬂﬂ 
Rank
ﬂﬂ !
=
ﬂﬂ" #
i
ﬂﬂ$ %
+
ﬂﬂ& '
$num
ﬂﬂ( )
;
ﬂﬂ) *
}
‡‡ 	
return
‚‚ 
sortedEntries
‚‚ 
;
‚‚ 
}
„„ 
private
ÂÂ 
async
ÂÂ 
Task
ÂÂ 
<
ÂÂ 
LeaderboardEntry
ÂÂ '
?
ÂÂ' (
>
ÂÂ( )&
GetCurrentUserEntryAsync
ÂÂ* B
(
ÂÂB C
Guid
ÂÂC G
userId
ÂÂH N
,
ÂÂN O
string
ÂÂP V
?
ÂÂV W
gameType
ÂÂX `
,
ÂÂ` a
string
ÂÂb h
?
ÂÂh i
period
ÂÂj p
)
ÂÂp q
{
ÊÊ 
DateTime
ÁÁ 
?
ÁÁ 
fromDate
ÁÁ 
=
ÁÁ "
GetFromDateForPeriod
ÁÁ 1
(
ÁÁ1 2
period
ÁÁ2 8
)
ÁÁ8 9
;
ÁÁ9 :
var
ÈÈ 
query
ÈÈ 
=
ÈÈ 
_context
ÈÈ 
.
ÈÈ 
GameSessions
ÈÈ )
.
ÍÍ 
Include
ÍÍ 
(
ÍÍ 
gs
ÍÍ 
=>
ÍÍ 
gs
ÍÍ 
.
ÍÍ 
User
ÍÍ "
)
ÍÍ" #
.
ÎÎ 
Where
ÎÎ 
(
ÎÎ 
gs
ÎÎ 
=>
ÎÎ 
gs
ÎÎ 
.
ÎÎ 
UserId
ÎÎ "
==
ÎÎ# %
userId
ÎÎ& ,
)
ÎÎ, -
;
ÎÎ- .
if
ÌÌ 

(
ÌÌ 
!
ÌÌ 
string
ÌÌ 
.
ÌÌ  
IsNullOrWhiteSpace
ÌÌ &
(
ÌÌ& '
gameType
ÌÌ' /
)
ÌÌ/ 0
)
ÌÌ0 1
{
ÓÓ 	
query
ÔÔ 
=
ÔÔ 
query
ÔÔ 
.
ÔÔ 
Where
ÔÔ 
(
ÔÔ  
gs
ÔÔ  "
=>
ÔÔ# %
gs
ÔÔ& (
.
ÔÔ( )
GameType
ÔÔ) 1
==
ÔÔ2 4
gameType
ÔÔ5 =
)
ÔÔ= >
;
ÔÔ> ?
}
 	
if
ÚÚ 

(
ÚÚ 
fromDate
ÚÚ 
.
ÚÚ 
HasValue
ÚÚ 
)
ÚÚ 
{
ÛÛ 	
query
ÙÙ 
=
ÙÙ 
query
ÙÙ 
.
ÙÙ 
Where
ÙÙ 
(
ÙÙ  
gs
ÙÙ  "
=>
ÙÙ# %
gs
ÙÙ& (
.
ÙÙ( )
SessionStartTime
ÙÙ) 9
>=
ÙÙ: <
fromDate
ÙÙ= E
.
ÙÙE F
Value
ÙÙF K
)
ÙÙK L
;
ÙÙL M
}
ıı 	
var
˜˜ 
userSessions
˜˜ 
=
˜˜ 
await
˜˜  
query
˜˜! &
.
˜˜& '
OrderBy
˜˜' .
(
˜˜. /
gs
˜˜/ 1
=>
˜˜2 4
gs
˜˜5 7
.
˜˜7 8
SessionStartTime
˜˜8 H
)
˜˜H I
.
˜˜I J
ToListAsync
˜˜J U
(
˜˜U V
)
˜˜V W
;
˜˜W X
if
˘˘ 

(
˘˘ 
!
˘˘ 
userSessions
˘˘ 
.
˘˘ 
Any
˘˘ 
(
˘˘ 
)
˘˘ 
)
˘˘  
{
˙˙ 	
return
˚˚ 
null
˚˚ 
;
˚˚ 
}
¸¸ 	
var
˛˛ 
user
˛˛ 
=
˛˛ 
userSessions
˛˛ 
.
˛˛  
First
˛˛  %
(
˛˛% &
)
˛˛& '
.
˛˛' (
User
˛˛( ,
;
˛˛, -
var
ˇˇ 
totalCorrect
ˇˇ 
=
ˇˇ 
userSessions
ˇˇ '
.
ˇˇ' (
Sum
ˇˇ( +
(
ˇˇ+ ,
s
ˇˇ, -
=>
ˇˇ. 0
s
ˇˇ1 2
.
ˇˇ2 3
CorrectAnswers
ˇˇ3 A
)
ˇˇA B
;
ˇˇB C
var
ÄÄ 

totalWrong
ÄÄ 
=
ÄÄ 
userSessions
ÄÄ %
.
ÄÄ% &
Sum
ÄÄ& )
(
ÄÄ) *
s
ÄÄ* +
=>
ÄÄ, .
s
ÄÄ/ 0
.
ÄÄ0 1
WrongAnswers
ÄÄ1 =
)
ÄÄ= >
;
ÄÄ> ?
var
ÅÅ 
totalAnswers
ÅÅ 
=
ÅÅ 
totalCorrect
ÅÅ '
+
ÅÅ( )

totalWrong
ÅÅ* 4
;
ÅÅ4 5
var
ÇÇ 
accuracy
ÇÇ 
=
ÇÇ 
totalAnswers
ÇÇ #
>
ÇÇ$ %
$num
ÇÇ& '
?
ÇÇ( )
Math
ÇÇ* .
.
ÇÇ. /
Round
ÇÇ/ 4
(
ÇÇ4 5
(
ÇÇ5 6
double
ÇÇ6 <
)
ÇÇ< =
totalCorrect
ÇÇ= I
/
ÇÇJ K
totalAnswers
ÇÇL X
*
ÇÇY Z
$num
ÇÇ[ ^
,
ÇÇ^ _
$num
ÇÇ` a
)
ÇÇa b
:
ÇÇc d
$num
ÇÇe f
;
ÇÇf g
var
ÉÉ 

bestStreak
ÉÉ 
=
ÉÉ !
CalculateBestStreak
ÉÉ ,
(
ÉÉ, -
userSessions
ÉÉ- 9
)
ÉÉ9 :
;
ÉÉ: ;
var
ÑÑ 

totalScore
ÑÑ 
=
ÑÑ !
CalculateTotalScore
ÑÑ ,
(
ÑÑ, -
totalCorrect
ÑÑ- 9
,
ÑÑ9 :
accuracy
ÑÑ; C
,
ÑÑC D

bestStreak
ÑÑE O
)
ÑÑO P
;
ÑÑP Q
var
áá 
allUserStats
áá 
=
áá 
await
áá  %
GetLeaderboardDataAsync
áá! 8
(
áá8 9
gameType
áá9 A
,
ááA B
fromDate
ááC K
)
ááK L
;
ááL M
var
àà 
userRank
àà 
=
àà 
allUserStats
àà #
.
àà# $
	FindIndex
àà$ -
(
àà- .
e
àà. /
=>
àà0 2
e
àà3 4
.
àà4 5
UserId
àà5 ;
==
àà< >
userId
àà? E
.
ààE F
ToString
ààF N
(
ààN O
)
ààO P
)
ààP Q
+
ààR S
$num
ààT U
;
ààU V
return
ää 
new
ää 
LeaderboardEntry
ää #
{
ãã 	
UserId
åå 
=
åå 
userId
åå 
.
åå 
ToString
åå $
(
åå$ %
)
åå% &
,
åå& '
DisplayName
çç 
=
çç 
!
çç 
string
çç !
.
çç! " 
IsNullOrWhiteSpace
çç" 4
(
çç4 5
user
çç5 9
.
çç9 :
Name
çç: >
)
çç> ?
?
çç@ A
user
ççB F
.
ççF G
Name
ççG K
:
ççL M
user
ççN R
.
ççR S
Email
ççS X
.
ççX Y
Split
ççY ^
(
çç^ _
$char
çç_ b
)
ççb c
[
ççc d
$num
ççd e
]
ççe f
,
ççf g

TotalScore
éé 
=
éé 

totalScore
éé #
,
éé# $

TotalGames
èè 
=
èè 
userSessions
èè %
.
èè% &
Count
èè& +
,
èè+ ,
Accuracy
êê 
=
êê 
accuracy
êê 
,
êê  

BestStreak
ëë 
=
ëë 

bestStreak
ëë #
,
ëë# $
LastPlayedAt
íí 
=
íí 
userSessions
íí '
.
íí' (
Max
íí( +
(
íí+ ,
s
íí, -
=>
íí. 0
s
íí1 2
.
íí2 3
SessionStartTime
íí3 C
)
ííC D
,
ííD E
Rank
ìì 
=
ìì 
userRank
ìì 
>
ìì 
$num
ìì 
?
ìì  !
userRank
ìì" *
:
ìì+ ,
allUserStats
ìì- 9
.
ìì9 :
Count
ìì: ?
+
ìì@ A
$num
ììB C
}
îî 	
;
îî	 

}
ïï 
private
óó 
int
óó !
CalculateBestStreak
óó #
(
óó# $
List
óó$ (
<
óó( )
GameSession
óó) 4
>
óó4 5
sessions
óó6 >
)
óó> ?
{
òò 
if
ôô 

(
ôô 
!
ôô 
sessions
ôô 
.
ôô 
Any
ôô 
(
ôô 
)
ôô 
)
ôô 
{
öö 	
return
õõ 
$num
õõ 
;
õõ 
}
úú 	
int
ûû 
currentStreak
ûû 
=
ûû 
$num
ûû 
;
ûû 
int
üü 

bestStreak
üü 
=
üü 
$num
üü 
;
üü 
foreach
°° 
(
°° 
var
°° 
session
°° 
in
°° 
sessions
°°  (
.
°°( )
OrderBy
°°) 0
(
°°0 1
s
°°1 2
=>
°°3 5
s
°°6 7
.
°°7 8
SessionStartTime
°°8 H
)
°°H I
)
°°I J
{
¢¢ 	
var
££ 
totalAnswers
££ 
=
££ 
session
££ &
.
££& '
CorrectAnswers
££' 5
+
££6 7
session
££8 ?
.
££? @
WrongAnswers
££@ L
;
££L M
if
§§ 
(
§§ 
totalAnswers
§§ 
>
§§ 
$num
§§  
&&
§§! #
session
§§$ +
.
§§+ ,
CorrectAnswers
§§, :
>
§§; <
session
§§= D
.
§§D E
WrongAnswers
§§E Q
)
§§Q R
{
•• 
currentStreak
¶¶ 
++
¶¶ 
;
¶¶  

bestStreak
ßß 
=
ßß 
Math
ßß !
.
ßß! "
Max
ßß" %
(
ßß% &

bestStreak
ßß& 0
,
ßß0 1
currentStreak
ßß2 ?
)
ßß? @
;
ßß@ A
}
®® 
else
©© 
{
™™ 
currentStreak
´´ 
=
´´ 
$num
´´  !
;
´´! "
}
¨¨ 
}
≠≠ 	
return
ØØ 

bestStreak
ØØ 
;
ØØ 
}
∞∞ 
private
≤≤ 
int
≤≤ !
CalculateTotalScore
≤≤ #
(
≤≤# $
int
≤≤$ '
correctAnswers
≤≤( 6
,
≤≤6 7
double
≤≤8 >
accuracy
≤≤? G
,
≤≤G H
int
≤≤I L

bestStreak
≤≤M W
)
≤≤W X
{
≥≥ 
var
∏∏ 
	baseScore
∏∏ 
=
∏∏ 
correctAnswers
∏∏ &
;
∏∏& '
var
ππ 
accuracyBonus
ππ 
=
ππ 
(
ππ 
int
ππ  
)
ππ  !
(
ππ! "
accuracy
ππ" *
*
ππ+ ,
$num
ππ- 0
)
ππ0 1
;
ππ1 2
var
∫∫ 
streakBonus
∫∫ 
=
∫∫ 

bestStreak
∫∫ $
*
∫∫% &
$num
∫∫' (
;
∫∫( )
return
ºº 
	baseScore
ºº 
+
ºº 
accuracyBonus
ºº (
+
ºº) *
streakBonus
ºº+ 6
;
ºº6 7
}
ΩΩ 
private
øø 
DateTime
øø 
?
øø "
GetFromDateForPeriod
øø *
(
øø* +
string
øø+ 1
?
øø1 2
period
øø3 9
)
øø9 :
{
¿¿ 
if
¡¡ 

(
¡¡ 
string
¡¡ 
.
¡¡  
IsNullOrWhiteSpace
¡¡ %
(
¡¡% &
period
¡¡& ,
)
¡¡, -
||
¡¡. 0
period
¡¡1 7
==
¡¡8 : 
LeaderboardPeriods
¡¡; M
.
¡¡M N
AllTime
¡¡N U
)
¡¡U V
{
¬¬ 	
return
√√ 
null
√√ 
;
√√ 
}
ƒƒ 	
var
∆∆ 
now
∆∆ 
=
∆∆ 
DateTime
∆∆ 
.
∆∆ 
UtcNow
∆∆ !
;
∆∆! "
return
«« 
period
«« 
.
«« 
ToLowerInvariant
«« &
(
««& '
)
««' (
switch
««) /
{
»» 	 
LeaderboardPeriods
…… 
.
…… 
Week
…… #
=>
……$ &
now
……' *
.
……* +
AddDays
……+ 2
(
……2 3
-
……3 4
$num
……4 5
)
……5 6
,
……6 7 
LeaderboardPeriods
   
.
   
Month
   $
=>
  % '
now
  ( +
.
  + ,
	AddMonths
  , 5
(
  5 6
-
  6 7
$num
  7 8
)
  8 9
,
  9 : 
LeaderboardPeriods
ÀÀ 
.
ÀÀ 
Year
ÀÀ #
=>
ÀÀ$ &
now
ÀÀ' *
.
ÀÀ* +
AddYears
ÀÀ+ 3
(
ÀÀ3 4
-
ÀÀ4 5
$num
ÀÀ5 6
)
ÀÀ6 7
,
ÀÀ7 8
_
ÃÃ 
=>
ÃÃ 
null
ÃÃ 
}
ÕÕ 	
;
ÕÕ	 

}
ŒŒ 
private
–– 
string
–– 
GenerateCacheKey
–– #
(
––# $
string
––$ *
?
––* +
gameType
––, 4
,
––4 5
string
––6 <
?
––< =
period
––> D
,
––D E
int
––F I
page
––J N
,
––N O
int
––P S
pageSize
––T \
)
––\ ]
{
—— 
var
““ 
keyParts
““ 
=
““ 
new
““ 
List
““ 
<
““  
string
““  &
>
““& '
{
““( )
CacheKeyPrefix
““* 8
}
““9 :
;
““: ;
if
‘‘ 

(
‘‘ 
!
‘‘ 
string
‘‘ 
.
‘‘  
IsNullOrWhiteSpace
‘‘ &
(
‘‘& '
gameType
‘‘' /
)
‘‘/ 0
)
‘‘0 1
{
’’ 	
keyParts
÷÷ 
.
÷÷ 
Add
÷÷ 
(
÷÷ 
$"
÷÷ 
$str
÷÷  
{
÷÷  !
gameType
÷÷! )
}
÷÷) *
"
÷÷* +
)
÷÷+ ,
;
÷÷, -
}
◊◊ 	
if
ŸŸ 

(
ŸŸ 
!
ŸŸ 
string
ŸŸ 
.
ŸŸ  
IsNullOrWhiteSpace
ŸŸ &
(
ŸŸ& '
period
ŸŸ' -
)
ŸŸ- .
)
ŸŸ. /
{
⁄⁄ 	
keyParts
€€ 
.
€€ 
Add
€€ 
(
€€ 
$"
€€ 
$str
€€ "
{
€€" #
period
€€# )
}
€€) *
"
€€* +
)
€€+ ,
;
€€, -
}
‹‹ 	
keyParts
ﬁﬁ 
.
ﬁﬁ 
Add
ﬁﬁ 
(
ﬁﬁ 
$"
ﬁﬁ 
$str
ﬁﬁ 
{
ﬁﬁ 
page
ﬁﬁ !
}
ﬁﬁ! "
"
ﬁﬁ" #
)
ﬁﬁ# $
;
ﬁﬁ$ %
keyParts
ﬂﬂ 
.
ﬂﬂ 
Add
ﬂﬂ 
(
ﬂﬂ 
$"
ﬂﬂ 
$str
ﬂﬂ 
{
ﬂﬂ 
pageSize
ﬂﬂ %
}
ﬂﬂ% &
"
ﬂﬂ& '
)
ﬂﬂ' (
;
ﬂﬂ( )
return
·· 
string
·· 
.
·· 
Join
·· 
(
·· 
$str
·· 
,
·· 
keyParts
··  (
)
··( )
;
··) *
}
‚‚ 
}„„ ﬂL
2/usr/src/backend/GeoQuizApi/Services/JwtService.cs
	namespace

 	

GeoQuizApi


 
.

 
Services

 
;

 
public 
class 

JwtService 
: 
IJwtService %
{ 
private 
readonly 
JwtSettings  
_jwtSettings! -
;- .
private 
readonly 
ILogger 
< 

JwtService '
>' (
_logger) 0
;0 1
public 


JwtService 
( 
IOptions 
< 
JwtSettings *
>* +
jwtSettings, 7
,7 8
ILogger9 @
<@ A

JwtServiceA K
>K L
loggerM S
)S T
{ 
_jwtSettings 
= 
jwtSettings "
." #
Value# (
;( )
_logger 
= 
logger 
; 
} 
public 

string 
GenerateAccessToken %
(% &
User& *
user+ /
)/ 0
{ 
var 
tokenHandler 
= 
new #
JwtSecurityTokenHandler 6
(6 7
)7 8
;8 9
var 
key 
= 
Encoding 
. 
ASCII  
.  !
GetBytes! )
() *
_jwtSettings* 6
.6 7
	SecretKey7 @
)@ A
;A B
var 
claims 
= 
new 
List 
< 
Claim #
># $
{ 	
new 
( 

ClaimTypes 
. 
NameIdentifier )
,) *
user+ /
./ 0
Id0 2
.2 3
ToString3 ;
(; <
)< =
)= >
,> ?
new 
( 

ClaimTypes 
. 
Email  
,  !
user" &
.& '
Email' ,
), -
,- .
new   
(   
$str   
,   
Guid   
.   
NewGuid   #
(  # $
)  $ %
.  % &
ToString  & .
(  . /
)  / 0
)  0 1
}!! 	
;!!	 

if## 

(## 
!## 
string## 
.## 
IsNullOrEmpty## !
(##! "
user##" &
.##& '
Name##' +
)##+ ,
)##, -
{$$ 	
claims%% 
.%% 
Add%% 
(%% 
new%% 
Claim%%  
(%%  !

ClaimTypes%%! +
.%%+ ,
Name%%, 0
,%%0 1
user%%2 6
.%%6 7
Name%%7 ;
)%%; <
)%%< =
;%%= >
}&& 	
var(( 
tokenDescriptor(( 
=(( 
new(( !#
SecurityTokenDescriptor((" 9
{)) 	
Subject** 
=** 
new** 
ClaimsIdentity** (
(**( )
claims**) /
)**/ 0
,**0 1
Expires++ 
=++ 
DateTime++ 
.++ 
UtcNow++ %
.++% &

AddMinutes++& 0
(++0 1
_jwtSettings++1 =
.++= >(
AccessTokenExpirationMinutes++> Z
)++Z [
,++[ \
Issuer,, 
=,, 
_jwtSettings,, !
.,,! "
Issuer,," (
,,,( )
Audience-- 
=-- 
_jwtSettings-- #
.--# $
Audience--$ ,
,--, -
SigningCredentials.. 
=..  
new..! $
SigningCredentials..% 7
(..7 8
new..8 ; 
SymmetricSecurityKey..< P
(..P Q
key..Q T
)..T U
,..U V
SecurityAlgorithms..W i
...i j
HmacSha256Signature..j }
)..} ~
}// 	
;//	 

var11 
token11 
=11 
tokenHandler11  
.11  !
CreateToken11! ,
(11, -
tokenDescriptor11- <
)11< =
;11= >
return22 
tokenHandler22 
.22 

WriteToken22 &
(22& '
token22' ,
)22, -
;22- .
}33 
public55 

string55  
GenerateRefreshToken55 &
(55& '
)55' (
{66 
var77 
randomNumber77 
=77 
new77 
byte77 #
[77# $
$num77$ &
]77& '
;77' (
using88 
var88 
rng88 
=88 !
RandomNumberGenerator88 -
.88- .
Create88. 4
(884 5
)885 6
;886 7
rng99 
.99 
GetBytes99 
(99 
randomNumber99 !
)99! "
;99" #
return:: 
Convert:: 
.:: 
ToBase64String:: %
(::% &
randomNumber::& 2
)::2 3
;::3 4
};; 
public== 

ClaimsPrincipal== 
?== (
GetPrincipalFromExpiredToken== 8
(==8 9
string==9 ?
token==@ E
)==E F
{>> 
var?? %
tokenValidationParameters?? %
=??& '
new??( +%
TokenValidationParameters??, E
{@@ 	
ValidateAudienceAA 
=AA 
falseAA $
,AA$ %
ValidateIssuerBB 
=BB 
falseBB "
,BB" #$
ValidateIssuerSigningKeyCC $
=CC% &
trueCC' +
,CC+ ,
IssuerSigningKeyDD 
=DD 
newDD " 
SymmetricSecurityKeyDD# 7
(DD7 8
EncodingDD8 @
.DD@ A
ASCIIDDA F
.DDF G
GetBytesDDG O
(DDO P
_jwtSettingsDDP \
.DD\ ]
	SecretKeyDD] f
)DDf g
)DDg h
,DDh i
ValidateLifetimeEE 
=EE 
falseEE $
}FF 	
;FF	 

varHH 
tokenHandlerHH 
=HH 
newHH #
JwtSecurityTokenHandlerHH 6
(HH6 7
)HH7 8
;HH8 9
tryJJ 
{KK 	
varLL 
	principalLL 
=LL 
tokenHandlerLL (
.LL( )
ValidateTokenLL) 6
(LL6 7
tokenLL7 <
,LL< =%
tokenValidationParametersLL> W
,LLW X
outLLY \
SecurityTokenLL] j
securityTokenLLk x
)LLx y
;LLy z
ifNN 
(NN 
securityTokenNN 
isNN  
notNN! $
JwtSecurityTokenNN% 5
jwtSecurityTokenNN6 F
||NNG I
!OO 
jwtSecurityTokenOO !
.OO! "
HeaderOO" (
.OO( )
AlgOO) ,
.OO, -
EqualsOO- 3
(OO3 4
SecurityAlgorithmsOO4 F
.OOF G

HmacSha256OOG Q
,OOQ R
StringComparisonOOS c
.OOc d&
InvariantCultureIgnoreCaseOOd ~
)OO~ 
)	OO Ä
{PP 
returnQQ 
nullQQ 
;QQ 
}RR 
returnTT 
	principalTT 
;TT 
}UU 	
catchVV 
(VV 
	ExceptionVV 
exVV 
)VV 
{WW 	
_loggerXX 
.XX 

LogWarningXX 
(XX 
exXX !
,XX! "
$strXX# O
)XXO P
;XXP Q
returnYY 
nullYY 
;YY 
}ZZ 	
}[[ 
public]] 

bool]] 
ValidateToken]] 
(]] 
string]] $
token]]% *
)]]* +
{^^ 
var__ 
tokenHandler__ 
=__ 
new__ #
JwtSecurityTokenHandler__ 6
(__6 7
)__7 8
;__8 9
var`` 
key`` 
=`` 
Encoding`` 
.`` 
ASCII``  
.``  !
GetBytes``! )
(``) *
_jwtSettings``* 6
.``6 7
	SecretKey``7 @
)``@ A
;``A B
trybb 
{cc 	
tokenHandlerdd 
.dd 
ValidateTokendd &
(dd& '
tokendd' ,
,dd, -
newdd. 1%
TokenValidationParametersdd2 K
{ee $
ValidateIssuerSigningKeyff (
=ff) *
trueff+ /
,ff/ 0
IssuerSigningKeygg  
=gg! "
newgg# & 
SymmetricSecurityKeygg' ;
(gg; <
keygg< ?
)gg? @
,gg@ A
ValidateIssuerhh 
=hh  
truehh! %
,hh% &
ValidIssuerii 
=ii 
_jwtSettingsii *
.ii* +
Issuerii+ 1
,ii1 2
ValidateAudiencejj  
=jj! "
truejj# '
,jj' (
ValidAudiencekk 
=kk 
_jwtSettingskk  ,
.kk, -
Audiencekk- 5
,kk5 6
ValidateLifetimell  
=ll! "
truell# '
,ll' (
	ClockSkewmm 
=mm 
TimeSpanmm $
.mm$ %
Zeromm% )
}nn 
,nn 
outnn 
_nn 
)nn 
;nn 
returnpp 
truepp 
;pp 
}qq 	
catchrr 
(rr 
	Exceptionrr 
exrr 
)rr 
{ss 	
_loggertt 
.tt 

LogWarningtt 
(tt 
extt !
,tt! "
$strtt# <
)tt< =
;tt= >
returnuu 
falseuu 
;uu 
}vv 	
}ww 
}xx ¨ 
;/usr/src/backend/GeoQuizApi/Services/ILeaderboardService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public 
	interface 
ILeaderboardService $
{ 
Task

 
<

 	
LeaderboardResponse

	 
>

 %
GetGlobalLeaderboardAsync

 7
(

7 8
int

8 ;
page

< @
=

A B
$num

C D
,

D E
int

F I
pageSize

J R
=

S T
$num

U W
,

W X
Guid

Y ]
?

] ^
currentUserId

_ l
=

m n
null

o s
)

s t
;

t u
Task 
< 	
LeaderboardResponse	 
> )
GetLeaderboardByGameTypeAsync ;
(; <
string< B
gameTypeC K
,K L
intM P
pageQ U
=V W
$numX Y
,Y Z
int[ ^
pageSize_ g
=h i
$numj l
,l m
Guidn r
?r s
currentUserId	t Å
=
Ç É
null
Ñ à
)
à â
;
â ä
Task 
< 	
LeaderboardResponse	 
> '
GetLeaderboardByPeriodAsync 9
(9 :
string: @
periodA G
,G H
intI L
pageM Q
=R S
$numT U
,U V
intW Z
pageSize[ c
=d e
$numf h
,h i
Guidj n
?n o
currentUserIdp }
=~ 
null
Ä Ñ
)
Ñ Ö
;
Ö Ü
Task 
< 	
LeaderboardResponse	 
> '
GetFilteredLeaderboardAsync 9
(9 :
string: @
?@ A
gameTypeB J
=K L
nullM Q
,Q R
stringS Y
?Y Z
period[ a
=b c
nulld h
,h i
intj m
pagen r
=s t
$numu v
,v w
intx {
pageSize	| Ñ
=
Ö Ü
$num
á â
,
â ä
Guid
ã è
?
è ê
currentUserId
ë û
=
ü †
null
° •
)
• ¶
;
¶ ß
void 

ClearCache	 
( 
) 
; 
} 
public$$ 
static$$ 
class$$ 
LeaderboardPeriods$$ &
{%% 
public&& 

const&& 
string&& 
AllTime&& 
=&&  !
$str&&" ,
;&&, -
public'' 

const'' 
string'' 
Week'' 
='' 
$str'' %
;''% &
public(( 

const(( 
string(( 
Month(( 
=(( 
$str((  '
;((' (
public)) 

const)) 
string)) 
Year)) 
=)) 
$str)) %
;))% &
public++ 

static++ 
readonly++ 
string++ !
[++! "
]++" #
ValidPeriods++$ 0
=++1 2
{++3 4
AllTime++5 <
,++< =
Week++> B
,++B C
Month++D I
,++I J
Year++K O
}++P Q
;++Q R
},, 
public11 
static11 
class11 
	GameTypes11 
{22 
public33 

const33 
string33 
	Countries33 !
=33" #
$str33$ /
;33/ 0
public44 

const44 
string44 
Flags44 
=44 
$str44  '
;44' (
public55 

const55 
string55 
States55 
=55  
$str55! )
;55) *
public77 

static77 
readonly77 
string77 !
[77! "
]77" #
ValidGameTypes77$ 2
=773 4
{775 6
	Countries777 @
,77@ A
Flags77B G
,77G H
States77I O
}77P Q
;77Q R
}88 Ü
3/usr/src/backend/GeoQuizApi/Services/IJwtService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public 
	interface 
IJwtService 
{ 
string 

GenerateAccessToken 
( 
User #
user$ (
)( )
;) *
string		 
 
GenerateRefreshToken		 
(		  
)		  !
;		! "
ClaimsPrincipal

 
?

 (
GetPrincipalFromExpiredToken

 1
(

1 2
string

2 8
token

9 >
)

> ?
;

? @
bool 
ValidateToken	 
( 
string 
token #
)# $
;$ %
} ¯,
9/usr/src/backend/GeoQuizApi/Services/IGameStatsService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public 
	interface 
IGameStatsService "
{ 
Task 
< 	
GameSession	 
>  
SaveGameSessionAsync *
(* +
Guid+ /
userId0 6
,6 7
string8 >
gameType? G
,G H
intI L
correctAnswersM [
,[ \
int] `
wrongAnswersa m
,m n
DateTime		 
sessionStartTime		 !
,		! "
DateTime		# +
?		+ ,
sessionEndTime		- ;
=		< =
null		> B
)		B C
;		C D
Task 
< 	
GameStatsResult	 
> 
GetUserStatsAsync +
(+ ,
Guid, 0
userId1 7
)7 8
;8 9
Task 
< 	
List	 
< 
GameSession 
> 
> #
GetUserGameHistoryAsync 3
(3 4
Guid4 8
userId9 ?
,? @
intA D
pageE I
=J K
$numL M
,M N
intO R
pageSizeS [
=\ ]
$num^ `
)` a
;a b
Task 
< 	
GameTypeStatsResult	 
> '
GetUserStatsByGameTypeAsync 9
(9 :
Guid: >
userId? E
,E F
stringG M
gameTypeN V
)V W
;W X
Task 
< 	
bool	 
> )
MigrateAnonymousProgressAsync ,
(, -
Guid- 1
userId2 8
,8 9
List: >
<> ? 
AnonymousGameSession? S
>S T
anonymousSessionsU f
)f g
;g h
double 

CalculateAccuracy 
( 
int  
correctAnswers! /
,/ 0
int1 4
totalAnswers5 A
)A B
;B C
Task 
< 	
int	 
> $
CalculateBestStreakAsync &
(& '
Guid' +
userId, 2
,2 3
string4 :
?: ;
gameType< D
=E F
nullG K
)K L
;L M
} 
public 
class 
GameStatsResult 
{   
public!! 

int!! 

TotalGames!! 
{!! 
get!! 
;!!  
set!!! $
;!!$ %
}!!& '
public"" 

int"" 
TotalCorrectAnswers"" "
{""# $
get""% (
;""( )
set""* -
;""- .
}""/ 0
public## 

int## 
TotalWrongAnswers##  
{##! "
get### &
;##& '
set##( +
;##+ ,
}##- .
public$$ 

int$$ 

BestStreak$$ 
{$$ 
get$$ 
;$$  
set$$! $
;$$$ %
}$$& '
public%% 

double%% 
AverageAccuracy%% !
{%%" #
get%%$ '
;%%' (
set%%) ,
;%%, -
}%%. /
public&& 

DateTime&& 
?&& 
LastPlayedAt&& !
{&&" #
get&&$ '
;&&' (
set&&) ,
;&&, -
}&&. /
public'' 


Dictionary'' 
<'' 
string'' 
,'' 
GameTypeStatsResult'' 1
>''1 2
GameTypeStats''3 @
{''A B
get''C F
;''F G
set''H K
;''K L
}''M N
=''O P
new''Q T
(''T U
)''U V
;''V W
}(( 
public** 
class** 
GameTypeStatsResult**  
{++ 
public,, 

int,, 
Games,, 
{,, 
get,, 
;,, 
set,, 
;,,  
},,! "
public-- 

int-- 
CorrectAnswers-- 
{-- 
get--  #
;--# $
set--% (
;--( )
}--* +
public.. 

int.. 
WrongAnswers.. 
{.. 
get.. !
;..! "
set..# &
;..& '
}..( )
public// 

double// 
Accuracy// 
{// 
get//  
;//  !
set//" %
;//% &
}//' (
public00 

int00 

BestStreak00 
{00 
get00 
;00  
set00! $
;00$ %
}00& '
}11 
public44 
class44  
AnonymousGameSession44 !
{55 
public66 

string66 
GameType66 
{66 
get66  
;66  !
set66" %
;66% &
}66' (
=66) *
string66+ 1
.661 2
Empty662 7
;667 8
public77 

int77 
CorrectAnswers77 
{77 
get77  #
;77# $
set77% (
;77( )
}77* +
public88 

int88 
WrongAnswers88 
{88 
get88 !
;88! "
set88# &
;88& '
}88( )
public99 

DateTime99 
SessionStartTime99 $
{99% &
get99' *
;99* +
set99, /
;99/ 0
}991 2
public:: 

DateTime:: 
?:: 
SessionEndTime:: #
{::$ %
get::& )
;::) *
set::+ .
;::. /
}::0 1
};; ﬁ
D/usr/src/backend/GeoQuizApi/Services/ICustomProblemDetailsService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public

 
	interface

 (
ICustomProblemDetailsService

 -
{ 
ProblemDetails  
CreateProblemDetails '
(' (
	Exception( 1
	exception2 ;
,; <
HttpContext= H
contextI P
)P Q
;Q R$
ValidationProblemDetails *
CreateValidationProblemDetails ;
(; <
ValidationException< O
	exceptionP Y
,Y Z
HttpContext[ f
contextg n
)n o
;o p
} Ê
4/usr/src/backend/GeoQuizApi/Services/IAuthService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public 
	interface 
IAuthService 
{ 
Task 
< 	
(	 

User
 
user 
, 
string 
accessToken '
,' (
string) /
refreshToken0 <
)< =
>= >
RegisterAsync? L
(L M
stringM S
emailT Y
,Y Z
string[ a
passwordb j
,j k
stringl r
?r s
namet x
=y z
null{ 
)	 Ä
;
Ä Å
Task 
< 	
(	 

User
 
user 
, 
string 
accessToken '
,' (
string) /
refreshToken0 <
)< =
>= >

LoginAsync? I
(I J
stringJ P
emailQ V
,V W
stringX ^
password_ g
)g h
;h i
Task		 
<		 	
(			 

User		
 
user		 
,		 
string		 
accessToken		 '
,		' (
string		) /
refreshToken		0 <
)		< =
>		= >
RefreshTokenAsync		? P
(		P Q
string		Q W
refreshToken		X d
)		d e
;		e f
Task

 
<

 	
bool

	 
>

 #
RevokeRefreshTokenAsync

 &
(

& '
string

' -
refreshToken

. :
)

: ;
;

; <
Task 
< 	
bool	 
> $
RevokeAllUserTokensAsync '
(' (
Guid( ,
userId- 3
)3 4
;4 5
Task 
< 	
User	 
? 
> 
GetUserByIdAsync  
(  !
Guid! %
userId& ,
), -
;- .
Task 
< 	
User	 
? 
> 
GetUserByEmailAsync #
(# $
string$ *
email+ 0
)0 1
;1 2
Task 
< 	
bool	 
> "
UpdateUserProfileAsync %
(% &
Guid& *
userId+ 1
,1 2
string3 9
?9 :
name; ?
,? @
stringA G
?G H
avatarI O
)O P
;P Q
Task 
< 	
bool	 
> 
ChangePasswordAsync "
(" #
Guid# '
userId( .
,. /
string0 6
currentPassword7 F
,F G
stringH N
newPasswordO Z
)Z [
;[ \
bool 
ValidateEmail	 
( 
string 
email #
)# $
;$ %
bool 
ValidatePassword	 
( 
string  
password! )
)) *
;* +
} åä
8/usr/src/backend/GeoQuizApi/Services/GameStatsService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public		 
class		 
GameStatsService		 
:		 
IGameStatsService		  1
{

 
private 
readonly 
GeoQuizDbContext %
_context& .
;. /
private 
readonly 
ILogger 
< 
GameStatsService -
>- .
_logger/ 6
;6 7
public 

GameStatsService 
( 
GeoQuizDbContext ,
context- 4
,4 5
ILogger6 =
<= >
GameStatsService> N
>N O
loggerP V
)V W
{ 
_context 
= 
context 
; 
_logger 
= 
logger 
; 
} 
public 

async 
Task 
< 
GameSession !
>! " 
SaveGameSessionAsync# 7
(7 8
Guid8 <
userId= C
,C D
stringE K
gameTypeL T
,T U
intV Y
correctAnswersZ h
,h i
int 
wrongAnswers 
, 
DateTime "
sessionStartTime# 3
,3 4
DateTime5 =
?= >
sessionEndTime? M
=N O
nullP T
)T U
{ 
if 

( 
string 
. 
IsNullOrWhiteSpace %
(% &
gameType& .
). /
)/ 0
{ 	
throw 
new 
ValidationException )
() *
$str* 4
,4 5
$str6 M
)M N
;N O
} 	
if 

( 
! 

GeoQuizApi 
. 
Models 
. 
	GameTypes (
.( )
IsValid) 0
(0 1
gameType1 9
)9 :
): ;
{ 	
var 
errorMessage 
= 
$" !
$str! A
{A B
stringB H
.H I
JoinI M
(M N
$strN R
,R S

GeoQuizApiT ^
.^ _
Models_ e
.e f
	GameTypesf o
.o p
ValidGameTypesp ~
)~ 
}	 Ä
"
Ä Å
;
Å Ç
_logger   
.   
LogDebug   
(   
$str   `
,  ` a
errorMessage  b n
)  n o
;  o p
var!! 
validationException!! #
=!!$ %
new!!& )
ValidationException!!* =
(!!= >
$str!!> H
,!!H I
errorMessage!!J V
)!!V W
;!!W X
_logger"" 
."" 
LogDebug"" 
("" 
$str"" S
,""S T
validationException""U h
.""h i
Errors""i o
.""o p
Count""p u
)""u v
;""v w
foreach## 
(## 
var## 
error## 
in## !
validationException##" 5
.##5 6
Errors##6 <
)##< =
{$$ 
_logger%% 
.%% 
LogDebug%%  
(%%  !
$str%%! P
,%%P Q
error%%R W
.%%W X
Key%%X [
,%%[ \
string%%] c
.%%c d
Join%%d h
(%%h i
$str%%i m
,%%m n
error%%o t
.%%t u
Value%%u z
)%%z {
)%%{ |
;%%| }
}&& 
throw'' 
validationException'' %
;''% &
}(( 	
if** 

(** 
correctAnswers** 
<** 
$num** 
||** !
wrongAnswers**" .
<**/ 0
$num**1 2
)**2 3
{++ 	
throw,, 
new,, 
ValidationException,, )
(,,) *
$str,,* 3
,,,3 4
$str,,5 W
),,W X
;,,X Y
}-- 	
var00 

userExists00 
=00 
await00 
_context00 '
.00' (
Users00( -
.00- .
AnyAsync00. 6
(006 7
u007 8
=>009 ;
u00< =
.00= >
Id00> @
==00A C
userId00D J
)00J K
;00K L
if11 

(11 
!11 

userExists11 
)11 
{22 	
throw33 
new33 
ArgumentException33 '
(33' (
$str33( 8
,338 9
nameof33: @
(33@ A
userId33A G
)33G H
)33H I
;33I J
}44 	
return77 
await77  
ConcurrencyUtilities77 )
.77) *!
ExecuteWithRetryAsync77* ?
(77? @
async77@ E
(77F G
)77G H
=>77I K
{88 	
int:: 
?:: 
sessionDurationMs:: "
=::# $
null::% )
;::) *
if;; 
(;; 
sessionEndTime;; 
.;; 
HasValue;; '
);;' (
{<< 
var== 
duration== 
=== 
sessionEndTime== -
.==- .
Value==. 3
-==4 5
sessionStartTime==6 F
;==F G
sessionDurationMs>> !
=>>" #
(>>$ %
int>>% (
)>>( )
duration>>) 1
.>>1 2
TotalMilliseconds>>2 C
;>>C D
}?? 
varBB 
uniqueCreatedAtBB 
=BB  !
TimestampManagerBB" 2
.BB2 3
GetUniqueTimestampBB3 E
(BBE F
)BBF G
;BBG H
varFF "
uniqueSessionStartTimeFF &
=FF' (
MathFF) -
.FF- .
AbsFF. 1
(FF1 2
(FF2 3
DateTimeFF3 ;
.FF; <
UtcNowFF< B
-FFC D
sessionStartTimeFFE U
)FFU V
.FFV W
TotalMinutesFFW c
)FFc d
<FFe f
$numFFg h
?GG 
TimestampManagerGG "
.GG" #
GetUniqueTimestampGG# 5
(GG5 6
sessionStartTimeGG6 F
)GGF G
:HH 
sessionStartTimeHH "
;HH" #
varJJ 
gameSessionJJ 
=JJ 
newJJ !
GameSessionJJ" -
{KK 
UserIdLL 
=LL 
userIdLL 
,LL  
GameTypeMM 
=MM 
gameTypeMM #
.MM# $
ToLowerInvariantMM$ 4
(MM4 5
)MM5 6
,MM6 7
CorrectAnswersNN 
=NN  
correctAnswersNN! /
,NN/ 0
WrongAnswersOO 
=OO 
wrongAnswersOO +
,OO+ ,
SessionStartTimePP  
=PP! ""
uniqueSessionStartTimePP# 9
,PP9 :
SessionEndTimeQQ 
=QQ  
sessionEndTimeQQ! /
,QQ/ 0
SessionDurationMsRR !
=RR" #
sessionDurationMsRR$ 5
,RR5 6
	CreatedAtSS 
=SS 
uniqueCreatedAtSS +
}TT 
;TT 
_contextVV 
.VV 
GameSessionsVV !
.VV! "
AddVV" %
(VV% &
gameSessionVV& 1
)VV1 2
;VV2 3
awaitWW 
_contextWW 
.WW 
SaveChangesAsyncWW +
(WW+ ,
)WW, -
;WW- .
_loggerYY 
.YY 
LogInformationYY "
(YY" #
$str	YY# ê
,
YYê ë
userIdZZ 
,ZZ 
gameTypeZZ  
,ZZ  !
correctAnswersZZ" 0
,ZZ0 1
correctAnswersZZ2 @
+ZZA B
wrongAnswersZZC O
,ZZO P
uniqueCreatedAtZZQ `
)ZZ` a
;ZZa b
return\\ 
gameSession\\ 
;\\ 
}]] 	
,]]	 

logger]] 
:]] 
_logger]] 
)]] 
;]] 
}^^ 
public`` 

async`` 
Task`` 
<`` 
GameStatsResult`` %
>``% &
GetUserStatsAsync``' 8
(``8 9
Guid``9 =
userId``> D
)``D E
{aa 
varbb 
sessionsbb 
=bb 
awaitbb 
_contextbb %
.bb% &
GameSessionsbb& 2
.cc 
Wherecc 
(cc 
gscc 
=>cc 
gscc 
.cc 
UserIdcc "
==cc# %
userIdcc& ,
)cc, -
.dd 
OrderBydd 
(dd 
gsdd 
=>dd 
gsdd 
.dd 
	CreatedAtdd '
)dd' (
.ee 
ToListAsyncee 
(ee 
)ee 
;ee 
ifgg 

(gg 
!gg 
sessionsgg 
.gg 
Anygg 
(gg 
)gg 
)gg 
{hh 	
returnii 
newii 
GameStatsResultii &
{jj 

TotalGameskk 
=kk 
$numkk 
,kk 
TotalCorrectAnswersll #
=ll$ %
$numll& '
,ll' (
TotalWrongAnswersmm !
=mm" #
$nummm$ %
,mm% &

BestStreaknn 
=nn 
$numnn 
,nn 
AverageAccuracyoo 
=oo  !
$numoo" #
,oo# $
LastPlayedAtpp 
=pp 
nullpp #
,pp# $
GameTypeStatsqq 
=qq 
newqq  #

Dictionaryqq$ .
<qq. /
stringqq/ 5
,qq5 6
GameTypeStatsResultqq7 J
>qqJ K
(qqK L
)qqL M
}rr 
;rr 
}ss 	
varuu 
totalCorrectuu 
=uu 
sessionsuu #
.uu# $
Sumuu$ '
(uu' (
suu( )
=>uu* ,
suu- .
.uu. /
CorrectAnswersuu/ =
)uu= >
;uu> ?
varvv 

totalWrongvv 
=vv 
sessionsvv !
.vv! "
Sumvv" %
(vv% &
svv& '
=>vv( *
svv+ ,
.vv, -
WrongAnswersvv- 9
)vv9 :
;vv: ;
varww 
totalAnswersww 
=ww 
totalCorrectww '
+ww( )

totalWrongww* 4
;ww4 5
varzz 

bestStreakzz 
=zz 
awaitzz $
CalculateBestStreakAsynczz 7
(zz7 8
userIdzz8 >
)zz> ?
;zz? @
var}} 
gameTypeStats}} 
=}} 
sessions}} $
.~~ 
GroupBy~~ 
(~~ 
s~~ 
=>~~ 
s~~ 
.~~ 
GameType~~ $
)~~$ %
. 
ToDictionary 
( 
g 
=> 
g  
.  !
Key! $
,$ %
g& '
=>( *"
CalculateGameTypeStats+ A
(A B
gB C
.C D
ToListD J
(J K
)K L
)L M
)M N
;N O
return
ÅÅ 
new
ÅÅ 
GameStatsResult
ÅÅ "
{
ÇÇ 	

TotalGames
ÉÉ 
=
ÉÉ 
sessions
ÉÉ !
.
ÉÉ! "
Count
ÉÉ" '
,
ÉÉ' (!
TotalCorrectAnswers
ÑÑ 
=
ÑÑ  !
totalCorrect
ÑÑ" .
,
ÑÑ. /
TotalWrongAnswers
ÖÖ 
=
ÖÖ 

totalWrong
ÖÖ  *
,
ÖÖ* +

BestStreak
ÜÜ 
=
ÜÜ 

bestStreak
ÜÜ #
,
ÜÜ# $
AverageAccuracy
áá 
=
áá 
CalculateAccuracy
áá /
(
áá/ 0
totalCorrect
áá0 <
,
áá< =
totalAnswers
áá> J
)
ááJ K
,
ááK L
LastPlayedAt
àà 
=
àà 
sessions
àà #
.
àà# $
Max
àà$ '
(
àà' (
s
àà( )
=>
àà* ,
s
àà- .
.
àà. /
	CreatedAt
àà/ 8
)
àà8 9
,
àà9 :
GameTypeStats
ââ 
=
ââ 
gameTypeStats
ââ )
}
ää 	
;
ää	 

}
ãã 
public
çç 

async
çç 
Task
çç 
<
çç 
List
çç 
<
çç 
GameSession
çç &
>
çç& '
>
çç' (%
GetUserGameHistoryAsync
çç) @
(
çç@ A
Guid
ççA E
userId
ççF L
,
ççL M
int
ççN Q
page
ççR V
=
ççW X
$num
ççY Z
,
ççZ [
int
çç\ _
pageSize
çç` h
=
ççi j
$num
ççk m
)
ççm n
{
éé 
if
èè 

(
èè 
page
èè 
<
èè 
$num
èè 
)
èè 
page
èè 
=
èè 
$num
èè 
;
èè 
if
êê 

(
êê 
pageSize
êê 
<
êê 
$num
êê 
||
êê 
pageSize
êê $
>
êê% &
$num
êê' *
)
êê* +
pageSize
êê, 4
=
êê5 6
$num
êê7 9
;
êê9 :
return
íí 
await
íí 
_context
íí 
.
íí 
GameSessions
íí *
.
ìì 
Where
ìì 
(
ìì 
gs
ìì 
=>
ìì 
gs
ìì 
.
ìì 
UserId
ìì "
==
ìì# %
userId
ìì& ,
)
ìì, -
.
îî 
OrderByDescending
îî 
(
îî 
gs
îî !
=>
îî" $
gs
îî% '
.
îî' (
	CreatedAt
îî( 1
)
îî1 2
.
ïï 
ThenByDescending
ïï 
(
ïï 
gs
ïï  
=>
ïï! #
gs
ïï$ &
.
ïï& '
SessionStartTime
ïï' 7
)
ïï7 8
.
ññ 
Skip
ññ 
(
ññ 
(
ññ 
page
ññ 
-
ññ 
$num
ññ 
)
ññ 
*
ññ 
pageSize
ññ '
)
ññ' (
.
óó 
Take
óó 
(
óó 
pageSize
óó 
)
óó 
.
òò 
ToListAsync
òò 
(
òò 
)
òò 
;
òò 
}
ôô 
public
õõ 

async
õõ 
Task
õõ 
<
õõ !
GameTypeStatsResult
õõ )
>
õõ) *)
GetUserStatsByGameTypeAsync
õõ+ F
(
õõF G
Guid
õõG K
userId
õõL R
,
õõR S
string
õõT Z
gameType
õõ[ c
)
õõc d
{
úú 
if
ùù 

(
ùù 
string
ùù 
.
ùù  
IsNullOrWhiteSpace
ùù %
(
ùù% &
gameType
ùù& .
)
ùù. /
)
ùù/ 0
{
ûû 	
throw
üü 
new
üü 
ArgumentException
üü '
(
üü' (
$str
üü( ?
,
üü? @
nameof
üüA G
(
üüG H
gameType
üüH P
)
üüP Q
)
üüQ R
;
üüR S
}
†† 	
var
¢¢ 
sessions
¢¢ 
=
¢¢ 
await
¢¢ 
_context
¢¢ %
.
¢¢% &
GameSessions
¢¢& 2
.
££ 
Where
££ 
(
££ 
gs
££ 
=>
££ 
gs
££ 
.
££ 
UserId
££ "
==
££# %
userId
££& ,
&&
££- /
gs
££0 2
.
££2 3
GameType
££3 ;
==
££< >
gameType
££? G
.
££G H
ToLowerInvariant
££H X
(
££X Y
)
££Y Z
)
££Z [
.
§§ 
OrderBy
§§ 
(
§§ 
gs
§§ 
=>
§§ 
gs
§§ 
.
§§ 
	CreatedAt
§§ '
)
§§' (
.
•• 
ThenBy
•• 
(
•• 
gs
•• 
=>
•• 
gs
•• 
.
•• 
SessionStartTime
•• -
)
••- .
.
¶¶ 
ToListAsync
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
if
®® 

(
®® 
!
®® 
sessions
®® 
.
®® 
Any
®® 
(
®® 
)
®® 
)
®® 
{
©© 	
return
™™ 
new
™™ !
GameTypeStatsResult
™™ *
{
´´ 
Games
¨¨ 
=
¨¨ 
$num
¨¨ 
,
¨¨ 
CorrectAnswers
≠≠ 
=
≠≠  
$num
≠≠! "
,
≠≠" #
WrongAnswers
ÆÆ 
=
ÆÆ 
$num
ÆÆ  
,
ÆÆ  !
Accuracy
ØØ 
=
ØØ 
$num
ØØ 
,
ØØ 

BestStreak
∞∞ 
=
∞∞ 
$num
∞∞ 
}
±± 
;
±± 
}
≤≤ 	
return
¥¥ $
CalculateGameTypeStats
¥¥ %
(
¥¥% &
sessions
¥¥& .
)
¥¥. /
;
¥¥/ 0
}
µµ 
public
∑∑ 

async
∑∑ 
Task
∑∑ 
<
∑∑ 
bool
∑∑ 
>
∑∑ +
MigrateAnonymousProgressAsync
∑∑ 9
(
∑∑9 :
Guid
∑∑: >
userId
∑∑? E
,
∑∑E F
List
∑∑G K
<
∑∑K L"
AnonymousGameSession
∑∑L `
>
∑∑` a
anonymousSessions
∑∑b s
)
∑∑s t
{
∏∏ 
if
ππ 

(
ππ 
anonymousSessions
ππ 
==
ππ  
null
ππ! %
||
ππ& (
!
ππ) *
anonymousSessions
ππ* ;
.
ππ; <
Any
ππ< ?
(
ππ? @
)
ππ@ A
)
ππA B
{
∫∫ 	
return
ªª 
false
ªª 
;
ªª 
}
ºº 	
var
øø 

userExists
øø 
=
øø 
await
øø 
_context
øø '
.
øø' (
Users
øø( -
.
øø- .
AnyAsync
øø. 6
(
øø6 7
u
øø7 8
=>
øø9 ;
u
øø< =
.
øø= >
Id
øø> @
==
øøA C
userId
øøD J
)
øøJ K
;
øøK L
if
¿¿ 

(
¿¿ 
!
¿¿ 

userExists
¿¿ 
)
¿¿ 
{
¡¡ 	
throw
¬¬ 
new
¬¬ 
ArgumentException
¬¬ '
(
¬¬' (
$str
¬¬( 8
,
¬¬8 9
nameof
¬¬: @
(
¬¬@ A
userId
¬¬A G
)
¬¬G H
)
¬¬H I
;
¬¬I J
}
√√ 	
return
≈≈ 
await
≈≈ "
ConcurrencyUtilities
≈≈ )
.
≈≈) *#
ExecuteWithRetryAsync
≈≈* ?
(
≈≈? @
async
≈≈@ E
(
≈≈F G
)
≈≈G H
=>
≈≈I K
{
∆∆ 	
using
«« 
var
«« 
transaction
«« !
=
««" #
await
««$ )
_context
««* 2
.
««2 3
Database
««3 ;
.
««; <#
BeginTransactionAsync
««< Q
(
««Q R
)
««R S
;
««S T
try
»» 
{
…… 
var
   
gameSessions
    
=
  ! "
new
  # &
List
  ' +
<
  + ,
GameSession
  , 7
>
  7 8
(
  8 9
)
  9 :
;
  : ;
foreach
ÃÃ 
(
ÃÃ 
var
ÃÃ 
anonymousSession
ÃÃ -
in
ÃÃ. 0
anonymousSessions
ÃÃ1 B
)
ÃÃB C
{
ÕÕ 
if
œœ 
(
œœ 
string
œœ 
.
œœ  
IsNullOrWhiteSpace
œœ 1
(
œœ1 2
anonymousSession
œœ2 B
.
œœB C
GameType
œœC K
)
œœK L
||
œœM O
anonymousSession
–– (
.
––( )
CorrectAnswers
––) 7
<
––8 9
$num
––: ;
||
––< >
anonymousSession
—— (
.
——( )
WrongAnswers
——) 5
<
——6 7
$num
——8 9
)
——9 :
{
““ 
_logger
”” 
.
””  

LogWarning
””  *
(
””* +
$str
””+ a
,
””a b
userId
””c i
)
””i j
;
””j k
continue
‘‘  
;
‘‘  !
}
’’ 
int
ÿÿ 
?
ÿÿ 
sessionDurationMs
ÿÿ *
=
ÿÿ+ ,
null
ÿÿ- 1
;
ÿÿ1 2
if
ŸŸ 
(
ŸŸ 
anonymousSession
ŸŸ (
.
ŸŸ( )
SessionEndTime
ŸŸ) 7
.
ŸŸ7 8
HasValue
ŸŸ8 @
)
ŸŸ@ A
{
⁄⁄ 
var
€€ 
duration
€€ $
=
€€% &
anonymousSession
€€' 7
.
€€7 8
SessionEndTime
€€8 F
.
€€F G
Value
€€G L
-
€€M N
anonymousSession
€€O _
.
€€_ `
SessionStartTime
€€` p
;
€€p q
sessionDurationMs
‹‹ )
=
‹‹* +
(
‹‹, -
int
‹‹- 0
)
‹‹0 1
duration
‹‹1 9
.
‹‹9 :
TotalMilliseconds
‹‹: K
;
‹‹K L
}
›› 
var
‡‡ 
uniqueCreatedAt
‡‡ '
=
‡‡( )
TimestampManager
‡‡* :
.
‡‡: ; 
GetUniqueTimestamp
‡‡; M
(
‡‡M N
anonymousSession
·· (
.
··( )
SessionEndTime
··) 7
??
··8 :
anonymousSession
··; K
.
··K L
SessionStartTime
··L \
)
··\ ]
;
··] ^
var
‰‰ $
uniqueSessionStartTime
‰‰ .
=
‰‰/ 0
Math
‰‰1 5
.
‰‰5 6
Abs
‰‰6 9
(
‰‰9 :
(
‰‰: ;
DateTime
‰‰; C
.
‰‰C D
UtcNow
‰‰D J
-
‰‰K L
anonymousSession
‰‰M ]
.
‰‰] ^
SessionStartTime
‰‰^ n
)
‰‰n o
.
‰‰o p
TotalMinutes
‰‰p |
)
‰‰| }
<
‰‰~ 
$num‰‰Ä Å
?
ÂÂ 
TimestampManager
ÂÂ *
.
ÂÂ* + 
GetUniqueTimestamp
ÂÂ+ =
(
ÂÂ= >
anonymousSession
ÂÂ> N
.
ÂÂN O
SessionStartTime
ÂÂO _
)
ÂÂ_ `
:
ÊÊ 
anonymousSession
ÊÊ *
.
ÊÊ* +
SessionStartTime
ÊÊ+ ;
;
ÊÊ; <
var
ËË 
gameSession
ËË #
=
ËË$ %
new
ËË& )
GameSession
ËË* 5
{
ÈÈ 
UserId
ÍÍ 
=
ÍÍ  
userId
ÍÍ! '
,
ÍÍ' (
GameType
ÎÎ  
=
ÎÎ! "
anonymousSession
ÎÎ# 3
.
ÎÎ3 4
GameType
ÎÎ4 <
.
ÎÎ< =
ToLowerInvariant
ÎÎ= M
(
ÎÎM N
)
ÎÎN O
,
ÎÎO P
CorrectAnswers
ÏÏ &
=
ÏÏ' (
anonymousSession
ÏÏ) 9
.
ÏÏ9 :
CorrectAnswers
ÏÏ: H
,
ÏÏH I
WrongAnswers
ÌÌ $
=
ÌÌ% &
anonymousSession
ÌÌ' 7
.
ÌÌ7 8
WrongAnswers
ÌÌ8 D
,
ÌÌD E
SessionStartTime
ÓÓ (
=
ÓÓ) *$
uniqueSessionStartTime
ÓÓ+ A
,
ÓÓA B
SessionEndTime
ÔÔ &
=
ÔÔ' (
anonymousSession
ÔÔ) 9
.
ÔÔ9 :
SessionEndTime
ÔÔ: H
,
ÔÔH I
SessionDurationMs
 )
=
* +
sessionDurationMs
, =
,
= >
	CreatedAt
ÒÒ !
=
ÒÒ" #
uniqueCreatedAt
ÒÒ$ 3
}
ÚÚ 
;
ÚÚ 
gameSessions
ÙÙ  
.
ÙÙ  !
Add
ÙÙ! $
(
ÙÙ$ %
gameSession
ÙÙ% 0
)
ÙÙ0 1
;
ÙÙ1 2
}
ıı 
if
˜˜ 
(
˜˜ 
gameSessions
˜˜  
.
˜˜  !
Any
˜˜! $
(
˜˜$ %
)
˜˜% &
)
˜˜& '
{
¯¯ 
_context
˘˘ 
.
˘˘ 
GameSessions
˘˘ )
.
˘˘) *
AddRange
˘˘* 2
(
˘˘2 3
gameSessions
˘˘3 ?
)
˘˘? @
;
˘˘@ A
await
˙˙ 
_context
˙˙ "
.
˙˙" #
SaveChangesAsync
˙˙# 3
(
˙˙3 4
)
˙˙4 5
;
˙˙5 6
await
˚˚ 
transaction
˚˚ %
.
˚˚% &
CommitAsync
˚˚& 1
(
˚˚1 2
)
˚˚2 3
;
˚˚3 4
_logger
˝˝ 
.
˝˝ 
LogInformation
˝˝ *
(
˝˝* +
$str
˝˝+ g
,
˝˝g h
gameSessions
˛˛ $
.
˛˛$ %
Count
˛˛% *
,
˛˛* +
userId
˛˛, 2
)
˛˛2 3
;
˛˛3 4
}
ˇˇ 
else
ÄÄ 
{
ÅÅ 
await
ÇÇ 
transaction
ÇÇ %
.
ÇÇ% &
RollbackAsync
ÇÇ& 3
(
ÇÇ3 4
)
ÇÇ4 5
;
ÇÇ5 6
}
ÉÉ 
return
ÖÖ 
gameSessions
ÖÖ #
.
ÖÖ# $
Any
ÖÖ$ '
(
ÖÖ' (
)
ÖÖ( )
;
ÖÖ) *
}
ÜÜ 
catch
áá 
{
àà 
await
ââ 
transaction
ââ !
.
ââ! "
RollbackAsync
ââ" /
(
ââ/ 0
)
ââ0 1
;
ââ1 2
throw
ää 
;
ää 
}
ãã 
}
åå 	
,
åå	 

logger
åå 
:
åå 
_logger
åå 
)
åå 
;
åå 
}
çç 
public
èè 

double
èè 
CalculateAccuracy
èè #
(
èè# $
int
èè$ '
correctAnswers
èè( 6
,
èè6 7
int
èè8 ;
totalAnswers
èè< H
)
èèH I
{
êê 
if
ëë 

(
ëë 
totalAnswers
ëë 
==
ëë 
$num
ëë 
)
ëë 
{
íí 	
return
ìì 
$num
ìì 
;
ìì 
}
îî 	
return
ññ 
Math
ññ 
.
ññ 
Round
ññ 
(
ññ 
(
ññ 
double
ññ !
)
ññ! "
correctAnswers
ññ" 0
/
ññ1 2
totalAnswers
ññ3 ?
*
ññ@ A
$num
ññB E
,
ññE F
$num
ññG H
)
ññH I
;
ññI J
}
óó 
public
ôô 

async
ôô 
Task
ôô 
<
ôô 
int
ôô 
>
ôô &
CalculateBestStreakAsync
ôô 3
(
ôô3 4
Guid
ôô4 8
userId
ôô9 ?
,
ôô? @
string
ôôA G
?
ôôG H
gameType
ôôI Q
=
ôôR S
null
ôôT X
)
ôôX Y
{
öö 
var
õõ 
query
õõ 
=
õõ 
_context
õõ 
.
õõ 
GameSessions
õõ )
.
úú 
Where
úú 
(
úú 
gs
úú 
=>
úú 
gs
úú 
.
úú 
UserId
úú "
==
úú# %
userId
úú& ,
)
úú, -
;
úú- .
if
ûû 

(
ûû 
!
ûû 
string
ûû 
.
ûû  
IsNullOrWhiteSpace
ûû &
(
ûû& '
gameType
ûû' /
)
ûû/ 0
)
ûû0 1
{
üü 	
query
†† 
=
†† 
query
†† 
.
†† 
Where
†† 
(
††  
gs
††  "
=>
††# %
gs
††& (
.
††( )
GameType
††) 1
==
††2 4
gameType
††5 =
.
††= >
ToLowerInvariant
††> N
(
††N O
)
††O P
)
††P Q
;
††Q R
}
°° 	
var
££ 
sessions
££ 
=
££ 
await
££ 
query
££ "
.
§§ 
OrderBy
§§ 
(
§§ 
gs
§§ 
=>
§§ 
gs
§§ 
.
§§ 
	CreatedAt
§§ '
)
§§' (
.
•• 
ThenBy
•• 
(
•• 
gs
•• 
=>
•• 
gs
•• 
.
•• 
SessionStartTime
•• -
)
••- .
.
¶¶ 
Select
¶¶ 
(
¶¶ 
gs
¶¶ 
=>
¶¶ 
new
¶¶ 
{
¶¶ 
gs
¶¶  "
.
¶¶" #
CorrectAnswers
¶¶# 1
,
¶¶1 2
gs
¶¶3 5
.
¶¶5 6
WrongAnswers
¶¶6 B
}
¶¶C D
)
¶¶D E
.
ßß 
ToListAsync
ßß 
(
ßß 
)
ßß 
;
ßß 
if
©© 

(
©© 
!
©© 
sessions
©© 
.
©© 
Any
©© 
(
©© 
)
©© 
)
©© 
{
™™ 	
return
´´ 
$num
´´ 
;
´´ 
}
¨¨ 	
int
ÆÆ 
currentStreak
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
int
ØØ 

bestStreak
ØØ 
=
ØØ 
$num
ØØ 
;
ØØ 
foreach
±± 
(
±± 
var
±± 
session
±± 
in
±± 
sessions
±±  (
)
±±( )
{
≤≤ 	
var
¥¥ 
totalAnswers
¥¥ 
=
¥¥ 
session
¥¥ &
.
¥¥& '
CorrectAnswers
¥¥' 5
+
¥¥6 7
session
¥¥8 ?
.
¥¥? @
WrongAnswers
¥¥@ L
;
¥¥L M
if
µµ 
(
µµ 
totalAnswers
µµ 
>
µµ 
$num
µµ  
&&
µµ! #
session
µµ$ +
.
µµ+ ,
CorrectAnswers
µµ, :
>
µµ; <
session
µµ= D
.
µµD E
WrongAnswers
µµE Q
)
µµQ R
{
∂∂ 
currentStreak
∑∑ 
++
∑∑ 
;
∑∑  

bestStreak
∏∏ 
=
∏∏ 
Math
∏∏ !
.
∏∏! "
Max
∏∏" %
(
∏∏% &

bestStreak
∏∏& 0
,
∏∏0 1
currentStreak
∏∏2 ?
)
∏∏? @
;
∏∏@ A
}
ππ 
else
∫∫ 
{
ªª 
currentStreak
ºº 
=
ºº 
$num
ºº  !
;
ºº! "
}
ΩΩ 
}
ææ 	
return
¿¿ 

bestStreak
¿¿ 
;
¿¿ 
}
¡¡ 
private
√√ !
GameTypeStatsResult
√√ $
CalculateGameTypeStats
√√  6
(
√√6 7
List
√√7 ;
<
√√; <
GameSession
√√< G
>
√√G H
sessions
√√I Q
)
√√Q R
{
ƒƒ 
if
≈≈ 

(
≈≈ 
!
≈≈ 
sessions
≈≈ 
.
≈≈ 
Any
≈≈ 
(
≈≈ 
)
≈≈ 
)
≈≈ 
{
∆∆ 	
return
«« 
new
«« !
GameTypeStatsResult
«« *
{
»» 
Games
…… 
=
…… 
$num
…… 
,
…… 
CorrectAnswers
   
=
    
$num
  ! "
,
  " #
WrongAnswers
ÀÀ 
=
ÀÀ 
$num
ÀÀ  
,
ÀÀ  !
Accuracy
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
,
ÃÃ 

BestStreak
ÕÕ 
=
ÕÕ 
$num
ÕÕ 
}
ŒŒ 
;
ŒŒ 
}
œœ 	
var
—— 
totalCorrect
—— 
=
—— 
sessions
—— #
.
——# $
Sum
——$ '
(
——' (
s
——( )
=>
——* ,
s
——- .
.
——. /
CorrectAnswers
——/ =
)
——= >
;
——> ?
var
““ 

totalWrong
““ 
=
““ 
sessions
““ !
.
““! "
Sum
““" %
(
““% &
s
““& '
=>
““( *
s
““+ ,
.
““, -
WrongAnswers
““- 9
)
““9 :
;
““: ;
var
”” 
totalAnswers
”” 
=
”” 
totalCorrect
”” '
+
””( )

totalWrong
””* 4
;
””4 5
int
÷÷ 
currentStreak
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷ 
int
◊◊ 

bestStreak
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
var
⁄⁄ 
sortedSessions
⁄⁄ 
=
⁄⁄ 
sessions
⁄⁄ %
.
€€ 
OrderBy
€€ 
(
€€ 
s
€€ 
=>
€€ 
s
€€ 
.
€€ 
	CreatedAt
€€ %
)
€€% &
.
‹‹ 
ThenBy
‹‹ 
(
‹‹ 
s
‹‹ 
=>
‹‹ 
s
‹‹ 
.
‹‹ 
SessionStartTime
‹‹ +
)
‹‹+ ,
;
‹‹, -
foreach
ﬁﬁ 
(
ﬁﬁ 
var
ﬁﬁ 
session
ﬁﬁ 
in
ﬁﬁ 
sortedSessions
ﬁﬁ  .
)
ﬁﬁ. /
{
ﬂﬂ 	
var
‡‡ 
sessionTotal
‡‡ 
=
‡‡ 
session
‡‡ &
.
‡‡& '
CorrectAnswers
‡‡' 5
+
‡‡6 7
session
‡‡8 ?
.
‡‡? @
WrongAnswers
‡‡@ L
;
‡‡L M
if
·· 
(
·· 
sessionTotal
·· 
>
·· 
$num
··  
&&
··! #
session
··$ +
.
··+ ,
CorrectAnswers
··, :
>
··; <
session
··= D
.
··D E
WrongAnswers
··E Q
)
··Q R
{
‚‚ 
currentStreak
„„ 
++
„„ 
;
„„  

bestStreak
‰‰ 
=
‰‰ 
Math
‰‰ !
.
‰‰! "
Max
‰‰" %
(
‰‰% &

bestStreak
‰‰& 0
,
‰‰0 1
currentStreak
‰‰2 ?
)
‰‰? @
;
‰‰@ A
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
currentStreak
ËË 
=
ËË 
$num
ËË  !
;
ËË! "
}
ÈÈ 
}
ÍÍ 	
return
ÏÏ 
new
ÏÏ !
GameTypeStatsResult
ÏÏ &
{
ÌÌ 	
Games
ÓÓ 
=
ÓÓ 
sessions
ÓÓ 
.
ÓÓ 
Count
ÓÓ "
,
ÓÓ" #
CorrectAnswers
ÔÔ 
=
ÔÔ 
totalCorrect
ÔÔ )
,
ÔÔ) *
WrongAnswers
 
=
 

totalWrong
 %
,
% &
Accuracy
ÒÒ 
=
ÒÒ 
CalculateAccuracy
ÒÒ (
(
ÒÒ( )
totalCorrect
ÒÒ) 5
,
ÒÒ5 6
totalAnswers
ÒÒ7 C
)
ÒÒC D
,
ÒÒD E

BestStreak
ÚÚ 
=
ÚÚ 

bestStreak
ÚÚ #
}
ÛÛ 	
;
ÛÛ	 

}
ÙÙ 
}ıı ÛH
C/usr/src/backend/GeoQuizApi/Services/CustomProblemDetailsService.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public 
class '
CustomProblemDetailsService (
:) *(
ICustomProblemDetailsService+ G
{ 
private 
readonly 
IWebHostEnvironment (
_environment) 5
;5 6
public 
'
CustomProblemDetailsService &
(& '
IWebHostEnvironment' :
environment; F
)F G
{ 
_environment 
= 
environment "
;" #
} 
public 

ProblemDetails  
CreateProblemDetails .
(. /
	Exception/ 8
	exception9 B
,B C
HttpContextD O
contextP W
)W X
{ 
var 
( 

statusCode 
, 
problemType $
)$ %
=& ''
GetStatusCodeAndProblemType( C
(C D
	exceptionD M
)M N
;N O
var 
title 
= 
ProblemTypes  
.  !
GetTitle! )
() *
problemType* 5
)5 6
;6 7
var   
problemDetails   
=   
new    
ProblemDetails  ! /
{!! 	
Type"" 
="" 
problemType"" 
,"" 
Title## 
=## 
title## 
,## 
Status$$ 
=$$ 

statusCode$$ 
,$$  
Detail%% 
=%% 
GetDetailMessage%% %
(%%% &
	exception%%& /
,%%/ 0

statusCode%%1 ;
)%%; <
,%%< =
Instance&& 
=&& 
context&& 
.&& 
Request&& &
.&&& '
Path&&' +
}'' 	
;''	 

problemDetails** 
.** 

Extensions** !
[**! "
$str**" -
]**- .
=**/ 0
DateTime**1 9
.**9 :
UtcNow**: @
;**@ A
problemDetails++ 
.++ 

Extensions++ !
[++! "
$str++" +
]+++ ,
=++- .
context++/ 6
.++6 7
TraceIdentifier++7 F
;++F G
if.. 

(.. 
_environment.. 
... 
IsDevelopment.. &
(..& '
)..' (
&&..) +

statusCode.., 6
==..7 9
(..: ;
int..; >
)..> ?
HttpStatusCode..? M
...M N
InternalServerError..N a
)..a b
{// 	
problemDetails00 
.00 

Extensions00 %
[00% &
$str00& 2
]002 3
=004 5
	exception006 ?
.00? @

StackTrace00@ J
??00K M
string00N T
.00T U
Empty00U Z
;00Z [
if11 
(11 
	exception11 
.11 
InnerException11 (
!=11) +
null11, 0
)110 1
{22 
problemDetails33 
.33 

Extensions33 )
[33) *
$str33* :
]33: ;
=33< =
	exception33> G
.33G H
InnerException33H V
.33V W
Message33W ^
;33^ _
}44 
}55 	
return77 
problemDetails77 
;77 
}88 
public@@ 
$
ValidationProblemDetails@@ #*
CreateValidationProblemDetails@@$ B
(@@B C
ValidationException@@C V
	exception@@W `
,@@` a
HttpContext@@b m
context@@n u
)@@u v
{AA 
varBB $
validationProblemDetailsBB $
=BB% &
newBB' *$
ValidationProblemDetailsBB+ C
{CC 	
TypeDD 
=DD 
ProblemTypesDD 
.DD  
ValidationErrorDD  /
,DD/ 0
TitleEE 
=EE 
ProblemTypesEE  
.EE  !
GetTitleEE! )
(EE) *
ProblemTypesEE* 6
.EE6 7
ValidationErrorEE7 F
)EEF G
,EEG H
StatusFF 
=FF 
(FF 
intFF 
)FF 
HttpStatusCodeFF (
.FF( )
UnprocessableEntityFF) <
,FF< =
DetailGG 
=GG 
$strGG 8
,GG8 9
InstanceHH 
=HH 
contextHH 
.HH 
RequestHH &
.HH& '
PathHH' +
}II 	
;II	 

foreachLL 
(LL 
varLL 
errorLL 
inLL 
	exceptionLL '
.LL' (
ErrorsLL( .
)LL. /
{MM 	$
validationProblemDetailsNN $
.NN$ %
ErrorsNN% +
[NN+ ,
errorNN, 1
.NN1 2
KeyNN2 5
]NN5 6
=NN7 8
errorNN9 >
.NN> ?
ValueNN? D
;NND E
}OO 	$
validationProblemDetailsRR  
.RR  !

ExtensionsRR! +
[RR+ ,
$strRR, 7
]RR7 8
=RR9 :
DateTimeRR; C
.RRC D
UtcNowRRD J
;RRJ K$
validationProblemDetailsSS  
.SS  !

ExtensionsSS! +
[SS+ ,
$strSS, 5
]SS5 6
=SS7 8
contextSS9 @
.SS@ A
TraceIdentifierSSA P
;SSP Q
returnUU $
validationProblemDetailsUU '
;UU' (
}VV 
private]] 
static]] 
(]] 
int]] 

statusCode]] "
,]]" #
string]]$ *
problemType]]+ 6
)]]6 7'
GetStatusCodeAndProblemType]]8 S
(]]S T
	Exception]]T ]
	exception]]^ g
)]]g h
{^^ 
return__ 
	exception__ 
switch__ 
{`` 	
ValidationExceptionaa 
=>aa  "
(aa# $
(aa$ %
intaa% (
)aa( )
HttpStatusCodeaa) 7
.aa7 8
UnprocessableEntityaa8 K
,aaK L
ProblemTypesaaM Y
.aaY Z
ValidationErroraaZ i
)aai j
,aaj k'
UnauthorizedAccessExceptionbb '
=>bb( *
(bb+ ,
(bb, -
intbb- 0
)bb0 1
HttpStatusCodebb1 ?
.bb? @
Unauthorizedbb@ L
,bbL M
ProblemTypesbbN Z
.bbZ [
AuthenticationErrorbb[ n
)bbn o
,bbo p 
KeyNotFoundExceptioncc  
=>cc! #
(cc$ %
(cc% &
intcc& )
)cc) *
HttpStatusCodecc* 8
.cc8 9
NotFoundcc9 A
,ccA B
ProblemTypesccC O
.ccO P
NotFoundErrorccP ]
)cc] ^
,cc^ _%
InvalidOperationExceptiondd %
invalidOpExdd& 1
whendd2 6
invalidOpExdd7 B
.ddB C
MessageddC J
.ddJ K
ContainsddK S
(ddS T
$strddT d
)ddd e
=>ddf h
(ee 
(ee 
intee 
)ee 
HttpStatusCodeee $
.ee$ %
Conflictee% -
,ee- .
ProblemTypesee/ ;
.ee; <
ConflictErroree< I
)eeI J
,eeJ K%
InvalidOperationExceptionff %
=>ff& (
(ff) *
(ff* +
intff+ .
)ff. /
HttpStatusCodeff/ =
.ff= >
Conflictff> F
,ffF G
ProblemTypesffH T
.ffT U
ConflictErrorffU b
)ffb c
,ffc d
ArgumentExceptiongg 
=>gg  
(gg! "
(gg" #
intgg# &
)gg& '
HttpStatusCodegg' 5
.gg5 6

BadRequestgg6 @
,gg@ A
ProblemTypesggB N
.ggN O
BadRequestErrorggO ^
)gg^ _
,gg_ `
_hh 
=>hh 
(hh 
(hh 
inthh 
)hh 
HttpStatusCodehh %
.hh% &
InternalServerErrorhh& 9
,hh9 :
ProblemTypeshh; G
.hhG H
InternalServerErrorhhH [
)hh[ \
}ii 	
;ii	 

}jj 
privaterr 
stringrr 
GetDetailMessagerr #
(rr# $
	Exceptionrr$ -
	exceptionrr. 7
,rr7 8
intrr9 <

statusCoderr= G
)rrG H
{ss 
ifuu 

(uu 

statusCodeuu 
>=uu 
$numuu 
&&uu  

statusCodeuu! +
<uu, -
$numuu. 1
)uu1 2
{vv 	
returnww 
	exceptionww 
.ww 
Messageww $
;ww$ %
}xx 	
if{{ 

({{ 

statusCode{{ 
>={{ 
$num{{ 
){{ 
{|| 	
return}} 
_environment}} 
.}}  
IsDevelopment}}  -
(}}- .
)}}. /
?~~ 
	exception~~ 
.~~ 
Message~~ #
: 
$str 5
;5 6
}
ÄÄ 	
return
ÇÇ 
	exception
ÇÇ 
.
ÇÇ 
Message
ÇÇ  
;
ÇÇ  !
}
ÉÉ 
}ÑÑ Ô9
</usr/src/backend/GeoQuizApi/Services/ConcurrencyUtilities.cs
	namespace 	

GeoQuizApi
 
. 
Services 
; 
public 
static 
class  
ConcurrencyUtilities (
{		 
public 

static 
async 
Task 
< 
T 
> !
ExecuteWithRetryAsync  5
<5 6
T6 7
>7 8
(8 9
Func 
< 
Task 
< 
T 
> 
> 
	operation 
,  
int 

maxRetries 
= 
$num 
, 
TimeSpan 
? 
	baseDelay 
= 
null "
," #
ILogger 
? 
logger 
= 
null 
) 
{ 
	baseDelay 
??= 
TimeSpan 
. 
FromMilliseconds /
(/ 0
$num0 3
)3 4
;4 5
for 
( 
int 
attempt 
= 
$num 
; 
attempt %
<& '

maxRetries( 2
;2 3
attempt4 ;
++; =
)= >
{ 	
try 
{ 
return 
await 
	operation &
(& '
)' (
;( )
} 
catch 
( (
DbUpdateConcurrencyException /
ex0 2
)2 3
when4 8
(9 :
attempt: A
<B C

maxRetriesD N
-O P
$numQ R
)R S
{ 
logger 
? 
. 

LogWarning "
(" #
ex# %
,% &
$str' _
,_ `
attempt 
+ 
$num 
,  

maxRetries! +
)+ ,
;, -
await 
Task 
. 
Delay  
(  !
	baseDelay! *
.* +
Value+ 0
*1 2
(3 4
attempt4 ;
+< =
$num> ?
)? @
)@ A
;A B
}   
catch!! 
(!! 
DbUpdateException!! $
ex!!% '
)!!' (
when!!) -
(!!. /'
IsUniqueConstraintViolation!!/ J
(!!J K
ex!!K M
)!!M N
&&!!O Q
attempt!!R Y
<!!Z [

maxRetries!!\ f
-!!g h
$num!!i j
)!!j k
{"" 
logger## 
?## 
.## 

LogWarning## "
(##" #
ex### %
,##% &
$str##' f
,##f g
attempt$$ 
+$$ 
$num$$ 
,$$  

maxRetries$$! +
)$$+ ,
;$$, -
await%% 
Task%% 
.%% 
Delay%%  
(%%  !
	baseDelay%%! *
.%%* +
Value%%+ 0
*%%1 2
(%%3 4
attempt%%4 ;
+%%< =
$num%%> ?
)%%? @
)%%@ A
;%%A B
}&& 
}'' 	
return** 
await** 
	operation** 
(** 
)**  
;**  !
}++ 
public00 

static00 
bool00 '
IsUniqueConstraintViolation00 2
(002 3
DbUpdateException003 D
ex00E G
)00G H
{11 
var33 
message33 
=33 
ex33 
.33 
InnerException33 '
?33' (
.33( )
Message33) 0
?330 1
.331 2
ToLowerInvariant332 B
(33B C
)33C D
??33E G
string33H N
.33N O
Empty33O T
;33T U
return44 
message44 
.44 
Contains44 
(44  
$str44  3
)443 4
||445 7
message55 
.55 
Contains55 
(55  
$str55  +
)55+ ,
||55- /
message66 
.66 
Contains66 
(66  
$str66  .
)66. /
;66/ 0
}77 
public<< 

static<< 
bool<< "
IsConcurrencyException<< -
(<<- .
	Exception<<. 7
ex<<8 :
)<<: ;
{== 
return>> 
ex>> 
is>> (
DbUpdateConcurrencyException>> 1
||>>2 4
(?? 
ex?? 
is?? 
DbUpdateException?? '
dbEx??( ,
&&??- /'
IsUniqueConstraintViolation??0 K
(??K L
dbEx??L P
)??P Q
)??Q R
;??R S
}@@ 
}AA 
publicFF 
staticFF 
classFF 
TimestampManagerFF $
{GG 
privateHH 
staticHH 
readonlyHH 
objectHH "
_lockHH# (
=HH) *
newHH+ .
objectHH/ 5
(HH5 6
)HH6 7
;HH7 8
privateII 
staticII 
DateTimeII 
_lastTimestampII *
=II+ ,
DateTimeII- 5
.II5 6
MinValueII6 >
;II> ?
publicNN 

staticNN 
DateTimeNN 
GetUniqueTimestampNN -
(NN- .
)NN. /
{OO 
lockPP 
(PP 
_lockPP 
)PP 
{QQ 	
varRR 
nowRR 
=RR 
DateTimeRR 
.RR 
UtcNowRR %
;RR% &
ifSS 
(SS 
nowSS 
<=SS 
_lastTimestampSS %
)SS% &
{TT 
_lastTimestampUU 
=UU  
_lastTimestampUU! /
.UU/ 0
AddTicksUU0 8
(UU8 9
$numUU9 :
)UU: ;
;UU; <
returnVV 
_lastTimestampVV %
;VV% &
}WW 
_lastTimestampXX 
=XX 
nowXX  
;XX  !
returnYY 
nowYY 
;YY 
}ZZ 	
}[[ 
public`` 

static`` 
DateTime`` 
GetUniqueTimestamp`` -
(``- .
DateTime``. 6
baseTime``7 ?
)``? @
{aa 
lockbb 
(bb 
_lockbb 
)bb 
{cc 	
ifdd 
(dd 
baseTimedd 
<=dd 
_lastTimestampdd *
)dd* +
{ee 
_lastTimestampff 
=ff  
_lastTimestampff! /
.ff/ 0
AddTicksff0 8
(ff8 9
$numff9 :
)ff: ;
;ff; <
returngg 
_lastTimestampgg %
;gg% &
}hh 
_lastTimestampii 
=ii 
baseTimeii %
;ii% &
returnjj 
baseTimejj 
;jj 
}kk 	
}ll 
publicqq 

staticqq 
voidqq 
Resetqq 
(qq 
)qq 
{rr 
lockss 
(ss 
_lockss 
)ss 
{tt 	
_lastTimestampuu 
=uu 
DateTimeuu %
.uu% &
MinValueuu& .
;uu. /
}vv 	
}ww 
}xx ≥É
3/usr/src/backend/GeoQuizApi/Services/AuthService.cs
	namespace

 	

GeoQuizApi


 
.

 
Services

 
;

 
public 
class 
AuthService 
: 
IAuthService '
{ 
private 
readonly 
GeoQuizDbContext %
_context& .
;. /
private 
readonly 
IJwtService  
_jwtService! ,
;, -
private 
readonly 
JwtSettings  
_jwtSettings! -
;- .
private 
readonly 
ILogger 
< 
AuthService (
>( )
_logger* 1
;1 2
private 
static 
readonly 
SemaphoreSlim )"
_registrationSemaphore* @
=A B
newC F
(F G
$numG H
,H I
$numJ K
)K L
;L M
public 

AuthService 
( 
GeoQuizDbContext 
context  
,  !
IJwtService 

jwtService 
, 
IOptions 
< 
JwtSettings 
> 
jwtSettings )
,) *
ILogger 
< 
AuthService 
> 
logger #
)# $
{ 
_context 
= 
context 
; 
_jwtService 
= 

jwtService  
;  !
_jwtSettings 
= 
jwtSettings "
." #
Value# (
;( )
_logger 
= 
logger 
; 
}   
public"" 

async"" 
Task"" 
<"" 
("" 
User"" 
user""  
,""  !
string""" (
accessToken"") 4
,""4 5
string""6 <
refreshToken""= I
)""I J
>""J K
RegisterAsync""L Y
(""Y Z
string""Z `
email""a f
,""f g
string""h n
password""o w
,""w x
string""y 
?	"" Ä
name
""Å Ö
=
""Ü á
null
""à å
)
""å ç
{## 
var%% 
validationErrors%% 
=%% 
new%% "

Dictionary%%# -
<%%- .
string%%. 4
,%%4 5
string%%6 <
[%%< =
]%%= >
>%%> ?
(%%? @
)%%@ A
;%%A B
if'' 

('' 
!'' 
ValidateEmail'' 
('' 
email''  
)''  !
)''! "
{(( 	
validationErrors)) 
[)) 
$str)) $
]))$ %
=))& '
new))( +
[))+ ,
])), -
{)). /
$str))0 F
}))G H
;))H I
}** 	
if,, 

(,, 
!,, 
ValidatePassword,, 
(,, 
password,, &
),,& '
),,' (
{-- 	
validationErrors.. 
[.. 
$str.. '
]..' (
=..) *
new..+ .
[... /
]../ 0
{..1 2
$str	..3 Ä
}
..Å Ç
;
..Ç É
}// 	
if11 

(11 
validationErrors11 
.11 
Any11  
(11  !
)11! "
)11" #
{22 	
throw33 
new33 
ValidationException33 )
(33) *
validationErrors33* :
)33: ;
;33; <
}44 	
return77 
await77  
ConcurrencyUtilities77 )
.77) *!
ExecuteWithRetryAsync77* ?
(77? @
async77@ E
(77F G
)77G H
=>77I K
{88 	
await:: "
_registrationSemaphore:: (
.::( )
	WaitAsync::) 2
(::2 3
)::3 4
;::4 5
try;; 
{<< 
var>> 
existingUser>>  
=>>! "
await>># (
GetUserByEmailAsync>>) <
(>>< =
email>>= B
)>>B C
;>>C D
if?? 
(?? 
existingUser??  
!=??! #
null??$ (
)??( )
{@@ 
throwAA 
newAA %
InvalidOperationExceptionAA 7
(AA7 8
$strAA8 ]
)AA] ^
;AA^ _
}BB 
varEE 
userEE 
=EE 
newEE 
UserEE #
{FF 
EmailGG 
=GG 
emailGG !
.GG! "
ToLowerInvariantGG" 2
(GG2 3
)GG3 4
,GG4 5
PasswordHashHH  
=HH! "
BCryptHH# )
.HH) *
NetHH* -
.HH- .
BCryptHH. 4
.HH4 5
HashPasswordHH5 A
(HHA B
passwordHHB J
)HHJ K
,HHK L
NameII 
=II 
nameII 
?II  
.II  !
TrimII! %
(II% &
)II& '
,II' (
	CreatedAtJJ 
=JJ 
TimestampManagerJJ  0
.JJ0 1
GetUniqueTimestampJJ1 C
(JJC D
)JJD E
}KK 
;KK 
_contextMM 
.MM 
UsersMM 
.MM 
AddMM "
(MM" #
userMM# '
)MM' (
;MM( )
awaitNN 
_contextNN 
.NN 
SaveChangesAsyncNN /
(NN/ 0
)NN0 1
;NN1 2
_loggerPP 
.PP 
LogInformationPP &
(PP& '
$strPP' k
,PPk l
emailPPm r
,PPr s
userPPt x
.PPx y
IdPPy {
)PP{ |
;PP| }
varSS 
accessTokenSS 
=SS  !
_jwtServiceSS" -
.SS- .
GenerateAccessTokenSS. A
(SSA B
userSSB F
)SSF G
;SSG H
varTT 
refreshTokenTT  
=TT! "
awaitTT# (#
CreateRefreshTokenAsyncTT) @
(TT@ A
userTTA E
.TTE F
IdTTF H
)TTH I
;TTI J
returnVV 
(VV 
userVV 
,VV 
accessTokenVV )
,VV) *
refreshTokenVV+ 7
)VV7 8
;VV8 9
}WW 
finallyXX 
{YY "
_registrationSemaphoreZZ &
.ZZ& '
ReleaseZZ' .
(ZZ. /
)ZZ/ 0
;ZZ0 1
}[[ 
}\\ 	
,\\	 


maxRetries\\ 
:\\ 
$num\\ 
,\\ 
logger\\  
:\\  !
_logger\\" )
)\\) *
;\\* +
}]] 
public__ 

async__ 
Task__ 
<__ 
(__ 
User__ 
user__  
,__  !
string__" (
accessToken__) 4
,__4 5
string__6 <
refreshToken__= I
)__I J
>__J K

LoginAsync__L V
(__V W
string__W ]
email__^ c
,__c d
string__e k
password__l t
)__t u
{`` 
varbb 
validationErrorsbb 
=bb 
newbb "

Dictionarybb# -
<bb- .
stringbb. 4
,bb4 5
stringbb6 <
[bb< =
]bb= >
>bb> ?
(bb? @
)bb@ A
;bbA B
ifdd 

(dd 
!dd 
ValidateEmaildd 
(dd 
emaildd  
)dd  !
)dd! "
{ee 	
validationErrorsff 
[ff 
$strff $
]ff$ %
=ff& '
newff( +
[ff+ ,
]ff, -
{ff. /
$strff0 F
}ffG H
;ffH I
}gg 	
ifii 

(ii 
stringii 
.ii 
IsNullOrWhiteSpaceii %
(ii% &
passwordii& .
)ii. /
)ii/ 0
{jj 	
validationErrorskk 
[kk 
$strkk '
]kk' (
=kk) *
newkk+ .
[kk. /
]kk/ 0
{kk1 2
$strkk3 I
}kkJ K
;kkK L
}ll 	
ifnn 

(nn 
validationErrorsnn 
.nn 
Anynn  
(nn  !
)nn! "
)nn" #
{oo 	
throwpp 
newpp 
ValidationExceptionpp )
(pp) *
validationErrorspp* :
)pp: ;
;pp; <
}qq 	
vartt 
usertt 
=tt 
awaittt 
GetUserByEmailAsynctt ,
(tt, -
emailtt- 2
)tt2 3
;tt3 4
ifuu 

(uu 
useruu 
==uu 
nulluu 
)uu 
{vv 	
_loggerww 
.ww 

LogWarningww 
(ww 
$strww O
,wwO P
emailwwQ V
)wwV W
;wwW X
throwxx 
newxx '
UnauthorizedAccessExceptionxx 1
(xx1 2
$strxx2 M
)xxM N
;xxN O
}yy 	
if|| 

(|| 
!|| 
BCrypt|| 
.|| 
Net|| 
.|| 
BCrypt|| 
.|| 
Verify|| %
(||% &
password||& .
,||. /
user||0 4
.||4 5
PasswordHash||5 A
)||A B
)||B C
{}} 	
_logger~~ 
.~~ 

LogWarning~~ 
(~~ 
$str~~ o
,~~o p
email~~q v
,~~v w
user~~x |
.~~| }
Id~~} 
)	~~ Ä
;
~~Ä Å
throw 
new '
UnauthorizedAccessException 1
(1 2
$str2 M
)M N
;N O
}
ÄÄ 	
await
ÉÉ "
ConcurrencyUtilities
ÉÉ "
.
ÉÉ" ##
ExecuteWithRetryAsync
ÉÉ# 8
(
ÉÉ8 9
async
ÉÉ9 >
(
ÉÉ? @
)
ÉÉ@ A
=>
ÉÉB D
{
ÑÑ 	
user
ÖÖ 
.
ÖÖ 
LastLoginAt
ÖÖ 
=
ÖÖ 
TimestampManager
ÖÖ /
.
ÖÖ/ 0 
GetUniqueTimestamp
ÖÖ0 B
(
ÖÖB C
)
ÖÖC D
;
ÖÖD E
await
ÜÜ 
_context
ÜÜ 
.
ÜÜ 
SaveChangesAsync
ÜÜ +
(
ÜÜ+ ,
)
ÜÜ, -
;
ÜÜ- .
return
áá 
true
áá 
;
áá 
}
àà 	
,
àà	 

logger
àà 
:
àà 
_logger
àà 
)
àà 
;
àà 
_logger
ää 
.
ää 
LogInformation
ää 
(
ää 
$str
ää ^
,
ää^ _
email
ää` e
,
ääe f
user
ääg k
.
ääk l
Id
ääl n
)
ään o
;
ääo p
var
çç 
accessToken
çç 
=
çç 
_jwtService
çç %
.
çç% &!
GenerateAccessToken
çç& 9
(
çç9 :
user
çç: >
)
çç> ?
;
çç? @
var
éé 
refreshToken
éé 
=
éé 
await
éé  %
CreateRefreshTokenAsync
éé! 8
(
éé8 9
user
éé9 =
.
éé= >
Id
éé> @
)
éé@ A
;
ééA B
return
êê 
(
êê 
user
êê 
,
êê 
accessToken
êê !
,
êê! "
refreshToken
êê# /
)
êê/ 0
;
êê0 1
}
ëë 
public
ìì 

async
ìì 
Task
ìì 
<
ìì 
(
ìì 
User
ìì 
user
ìì  
,
ìì  !
string
ìì" (
accessToken
ìì) 4
,
ìì4 5
string
ìì6 <
refreshToken
ìì= I
)
ììI J
>
ììJ K
RefreshTokenAsync
ììL ]
(
ìì] ^
string
ìì^ d
refreshToken
ììe q
)
ììq r
{
îî 
if
ïï 

(
ïï 
string
ïï 
.
ïï  
IsNullOrWhiteSpace
ïï %
(
ïï% &
refreshToken
ïï& 2
)
ïï2 3
)
ïï3 4
{
ññ 	
throw
óó 
new
óó 
ArgumentException
óó '
(
óó' (
$str
óó( C
,
óóC D
nameof
óóE K
(
óóK L
refreshToken
óóL X
)
óóX Y
)
óóY Z
;
óóZ [
}
òò 	
return
õõ 
await
õõ "
ConcurrencyUtilities
õõ )
.
õõ) *#
ExecuteWithRetryAsync
õõ* ?
(
õõ? @
async
õõ@ E
(
õõF G
)
õõG H
=>
õõI K
{
úú 	
using
ùù 
var
ùù 
transaction
ùù !
=
ùù" #
await
ùù$ )
_context
ùù* 2
.
ùù2 3
Database
ùù3 ;
.
ùù; <#
BeginTransactionAsync
ùù< Q
(
ùùQ R
)
ùùR S
;
ùùS T
try
ûû 
{
üü 
var
°° 
storedToken
°° 
=
°°  !
await
°°" '
_context
°°( 0
.
°°0 1
RefreshTokens
°°1 >
.
¢¢ 
Include
¢¢ 
(
¢¢ 
rt
¢¢ 
=>
¢¢  "
rt
¢¢# %
.
¢¢% &
User
¢¢& *
)
¢¢* +
.
££ !
FirstOrDefaultAsync
££ (
(
££( )
rt
££) +
=>
££, .
rt
££/ 1
.
££1 2
Token
££2 7
==
££8 :
refreshToken
££; G
&&
££H J
!
££K L
rt
££L N
.
££N O
	IsRevoked
££O X
)
££X Y
;
££Y Z
if
•• 
(
•• 
storedToken
•• 
==
••  "
null
••# '
)
••' (
{
¶¶ 
_logger
ßß 
.
ßß 

LogWarning
ßß &
(
ßß& '
$str
ßß' Y
)
ßßY Z
;
ßßZ [
throw
®® 
new
®® )
UnauthorizedAccessException
®® 9
(
®®9 :
$str
®®: \
)
®®\ ]
;
®®] ^
}
©© 
if
´´ 
(
´´ 
storedToken
´´ 
.
´´  
	ExpiresAt
´´  )
<=
´´* ,
DateTime
´´- 5
.
´´5 6
UtcNow
´´6 <
)
´´< =
{
¨¨ 
_logger
≠≠ 
.
≠≠ 

LogWarning
≠≠ &
(
≠≠& '
$str
≠≠' l
,
≠≠l m
storedToken
≠≠n y
.
≠≠y z
UserId≠≠z Ä
)≠≠Ä Å
;≠≠Å Ç
throw
ÆÆ 
new
ÆÆ )
UnauthorizedAccessException
ÆÆ 9
(
ÆÆ9 :
$str
ÆÆ: \
)
ÆÆ\ ]
;
ÆÆ] ^
}
ØØ 
storedToken
≤≤ 
.
≤≤ 
	IsRevoked
≤≤ %
=
≤≤& '
true
≤≤( ,
;
≤≤, -
var
¥¥ 
accessToken
¥¥ 
=
¥¥  !
_jwtService
¥¥" -
.
¥¥- .!
GenerateAccessToken
¥¥. A
(
¥¥A B
storedToken
¥¥B M
.
¥¥M N
User
¥¥N R
)
¥¥R S
;
¥¥S T
var
µµ 
newRefreshToken
µµ #
=
µµ$ %
await
µµ& +%
CreateRefreshTokenAsync
µµ, C
(
µµC D
storedToken
µµD O
.
µµO P
UserId
µµP V
)
µµV W
;
µµW X
await
∑∑ 
_context
∑∑ 
.
∑∑ 
SaveChangesAsync
∑∑ /
(
∑∑/ 0
)
∑∑0 1
;
∑∑1 2
await
∏∏ 
transaction
∏∏ !
.
∏∏! "
CommitAsync
∏∏" -
(
∏∏- .
)
∏∏. /
;
∏∏/ 0
_logger
∫∫ 
.
∫∫ 
LogInformation
∫∫ &
(
∫∫& '
$str
∫∫' Y
,
∫∫Y Z
storedToken
∫∫[ f
.
∫∫f g
UserId
∫∫g m
)
∫∫m n
;
∫∫n o
return
ºº 
(
ºº 
storedToken
ºº #
.
ºº# $
User
ºº$ (
,
ºº( )
accessToken
ºº* 5
,
ºº5 6
newRefreshToken
ºº7 F
)
ººF G
;
ººG H
}
ΩΩ 
catch
ææ 
{
øø 
await
¿¿ 
transaction
¿¿ !
.
¿¿! "
RollbackAsync
¿¿" /
(
¿¿/ 0
)
¿¿0 1
;
¿¿1 2
throw
¡¡ 
;
¡¡ 
}
¬¬ 
}
√√ 	
,
√√	 

logger
√√ 
:
√√ 
_logger
√√ 
)
√√ 
;
√√ 
}
ƒƒ 
public
∆∆ 

async
∆∆ 
Task
∆∆ 
<
∆∆ 
bool
∆∆ 
>
∆∆ %
RevokeRefreshTokenAsync
∆∆ 3
(
∆∆3 4
string
∆∆4 :
refreshToken
∆∆; G
)
∆∆G H
{
«« 
if
»» 

(
»» 
string
»» 
.
»»  
IsNullOrWhiteSpace
»» %
(
»»% &
refreshToken
»»& 2
)
»»2 3
)
»»3 4
{
…… 	
return
   
false
   
;
   
}
ÀÀ 	
return
ÕÕ 
await
ÕÕ "
ConcurrencyUtilities
ÕÕ )
.
ÕÕ) *#
ExecuteWithRetryAsync
ÕÕ* ?
(
ÕÕ? @
async
ÕÕ@ E
(
ÕÕF G
)
ÕÕG H
=>
ÕÕI K
{
ŒŒ 	
var
œœ 
storedToken
œœ 
=
œœ 
await
œœ #
_context
œœ$ ,
.
œœ, -
RefreshTokens
œœ- :
.
–– !
FirstOrDefaultAsync
–– $
(
––$ %
rt
––% '
=>
––( *
rt
––+ -
.
––- .
Token
––. 3
==
––4 6
refreshToken
––7 C
&&
––D F
!
––G H
rt
––H J
.
––J K
	IsRevoked
––K T
)
––T U
;
––U V
if
““ 
(
““ 
storedToken
““ 
==
““ 
null
““ #
)
““# $
{
”” 
return
‘‘ 
false
‘‘ 
;
‘‘ 
}
’’ 
storedToken
◊◊ 
.
◊◊ 
	IsRevoked
◊◊ !
=
◊◊" #
true
◊◊$ (
;
◊◊( )
await
ÿÿ 
_context
ÿÿ 
.
ÿÿ 
SaveChangesAsync
ÿÿ +
(
ÿÿ+ ,
)
ÿÿ, -
;
ÿÿ- .
_logger
⁄⁄ 
.
⁄⁄ 
LogInformation
⁄⁄ "
(
⁄⁄" #
$str
⁄⁄# Z
,
⁄⁄Z [
storedToken
⁄⁄\ g
.
⁄⁄g h
UserId
⁄⁄h n
)
⁄⁄n o
;
⁄⁄o p
return
€€ 
true
€€ 
;
€€ 
}
‹‹ 	
,
‹‹	 

logger
‹‹ 
:
‹‹ 
_logger
‹‹ 
)
‹‹ 
;
‹‹ 
}
›› 
public
ﬂﬂ 

async
ﬂﬂ 
Task
ﬂﬂ 
<
ﬂﬂ 
bool
ﬂﬂ 
>
ﬂﬂ &
RevokeAllUserTokensAsync
ﬂﬂ 4
(
ﬂﬂ4 5
Guid
ﬂﬂ5 9
userId
ﬂﬂ: @
)
ﬂﬂ@ A
{
‡‡ 
return
·· 
await
·· "
ConcurrencyUtilities
·· )
.
··) *#
ExecuteWithRetryAsync
··* ?
(
··? @
async
··@ E
(
··F G
)
··G H
=>
··I K
{
‚‚ 	
using
„„ 
var
„„ 
transaction
„„ !
=
„„" #
await
„„$ )
_context
„„* 2
.
„„2 3
Database
„„3 ;
.
„„; <#
BeginTransactionAsync
„„< Q
(
„„Q R
)
„„R S
;
„„S T
try
‰‰ 
{
ÂÂ 
var
ÊÊ 

userTokens
ÊÊ 
=
ÊÊ  
await
ÊÊ! &
_context
ÊÊ' /
.
ÊÊ/ 0
RefreshTokens
ÊÊ0 =
.
ÁÁ 
Where
ÁÁ 
(
ÁÁ 
rt
ÁÁ 
=>
ÁÁ  
rt
ÁÁ! #
.
ÁÁ# $
UserId
ÁÁ$ *
==
ÁÁ+ -
userId
ÁÁ. 4
&&
ÁÁ5 7
!
ÁÁ8 9
rt
ÁÁ9 ;
.
ÁÁ; <
	IsRevoked
ÁÁ< E
)
ÁÁE F
.
ËË 
ToListAsync
ËË  
(
ËË  !
)
ËË! "
;
ËË" #
if
ÍÍ 
(
ÍÍ 
!
ÍÍ 

userTokens
ÍÍ 
.
ÍÍ  
Any
ÍÍ  #
(
ÍÍ# $
)
ÍÍ$ %
)
ÍÍ% &
{
ÎÎ 
return
ÏÏ 
false
ÏÏ  
;
ÏÏ  !
}
ÌÌ 
foreach
ÔÔ 
(
ÔÔ 
var
ÔÔ 
token
ÔÔ "
in
ÔÔ# %

userTokens
ÔÔ& 0
)
ÔÔ0 1
{
 
token
ÒÒ 
.
ÒÒ 
	IsRevoked
ÒÒ #
=
ÒÒ$ %
true
ÒÒ& *
;
ÒÒ* +
}
ÚÚ 
await
ÙÙ 
_context
ÙÙ 
.
ÙÙ 
SaveChangesAsync
ÙÙ /
(
ÙÙ/ 0
)
ÙÙ0 1
;
ÙÙ1 2
await
ıı 
transaction
ıı !
.
ıı! "
CommitAsync
ıı" -
(
ıı- .
)
ıı. /
;
ıı/ 0
_logger
˜˜ 
.
˜˜ 
LogInformation
˜˜ &
(
˜˜& '
$str
˜˜' V
,
˜˜V W
userId
˜˜X ^
)
˜˜^ _
;
˜˜_ `
return
¯¯ 
true
¯¯ 
;
¯¯ 
}
˘˘ 
catch
˙˙ 
{
˚˚ 
await
¸¸ 
transaction
¸¸ !
.
¸¸! "
RollbackAsync
¸¸" /
(
¸¸/ 0
)
¸¸0 1
;
¸¸1 2
throw
˝˝ 
;
˝˝ 
}
˛˛ 
}
ˇˇ 	
,
ˇˇ	 

logger
ˇˇ 
:
ˇˇ 
_logger
ˇˇ 
)
ˇˇ 
;
ˇˇ 
}
ÄÄ 
public
ÇÇ 

async
ÇÇ 
Task
ÇÇ 
<
ÇÇ 
User
ÇÇ 
?
ÇÇ 
>
ÇÇ 
GetUserByIdAsync
ÇÇ -
(
ÇÇ- .
Guid
ÇÇ. 2
userId
ÇÇ3 9
)
ÇÇ9 :
{
ÉÉ 
return
ÑÑ 
await
ÑÑ 
_context
ÑÑ 
.
ÑÑ 
Users
ÑÑ #
.
ÖÖ !
FirstOrDefaultAsync
ÖÖ  
(
ÖÖ  !
u
ÖÖ! "
=>
ÖÖ# %
u
ÖÖ& '
.
ÖÖ' (
Id
ÖÖ( *
==
ÖÖ+ -
userId
ÖÖ. 4
)
ÖÖ4 5
;
ÖÖ5 6
}
ÜÜ 
public
àà 

async
àà 
Task
àà 
<
àà 
User
àà 
?
àà 
>
àà !
GetUserByEmailAsync
àà 0
(
àà0 1
string
àà1 7
email
àà8 =
)
àà= >
{
ââ 
if
ää 

(
ää 
string
ää 
.
ää  
IsNullOrWhiteSpace
ää %
(
ää% &
email
ää& +
)
ää+ ,
)
ää, -
{
ãã 	
return
åå 
null
åå 
;
åå 
}
çç 	
return
èè 
await
èè 
_context
èè 
.
èè 
Users
èè #
.
êê !
FirstOrDefaultAsync
êê  
(
êê  !
u
êê! "
=>
êê# %
u
êê& '
.
êê' (
Email
êê( -
==
êê. 0
email
êê1 6
.
êê6 7
ToLowerInvariant
êê7 G
(
êêG H
)
êêH I
)
êêI J
;
êêJ K
}
ëë 
public
ìì 

async
ìì 
Task
ìì 
<
ìì 
bool
ìì 
>
ìì $
UpdateUserProfileAsync
ìì 2
(
ìì2 3
Guid
ìì3 7
userId
ìì8 >
,
ìì> ?
string
ìì@ F
?
ììF G
name
ììH L
,
ììL M
string
ììN T
?
ììT U
avatar
ììV \
)
ìì\ ]
{
îî 
return
ïï 
await
ïï "
ConcurrencyUtilities
ïï )
.
ïï) *#
ExecuteWithRetryAsync
ïï* ?
(
ïï? @
async
ïï@ E
(
ïïF G
)
ïïG H
=>
ïïI K
{
ññ 	
var
óó 
user
óó 
=
óó 
await
óó 
GetUserByIdAsync
óó -
(
óó- .
userId
óó. 4
)
óó4 5
;
óó5 6
if
òò 
(
òò 
user
òò 
==
òò 
null
òò 
)
òò 
{
ôô 
return
öö 
false
öö 
;
öö 
}
õõ 
user
ùù 
.
ùù 
Name
ùù 
=
ùù 
name
ùù 
?
ùù 
.
ùù 
Trim
ùù "
(
ùù" #
)
ùù# $
;
ùù$ %
user
ûû 
.
ûû 
Avatar
ûû 
=
ûû 
avatar
ûû  
?
ûû  !
.
ûû! "
Trim
ûû" &
(
ûû& '
)
ûû' (
;
ûû( )
await
†† 
_context
†† 
.
†† 
SaveChangesAsync
†† +
(
††+ ,
)
††, -
;
††- .
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ "
(
¢¢" #
$str
¢¢# G
,
¢¢G H
userId
¢¢I O
)
¢¢O P
;
¢¢P Q
return
££ 
true
££ 
;
££ 
}
§§ 	
,
§§	 

logger
§§ 
:
§§ 
_logger
§§ 
)
§§ 
;
§§ 
}
•• 
public
ßß 

async
ßß 
Task
ßß 
<
ßß 
bool
ßß 
>
ßß !
ChangePasswordAsync
ßß /
(
ßß/ 0
Guid
ßß0 4
userId
ßß5 ;
,
ßß; <
string
ßß= C
currentPassword
ßßD S
,
ßßS T
string
ßßU [
newPassword
ßß\ g
)
ßßg h
{
®® 
var
©© 
validationErrors
©© 
=
©© 
new
©© "

Dictionary
©©# -
<
©©- .
string
©©. 4
,
©©4 5
string
©©6 <
[
©©< =
]
©©= >
>
©©> ?
(
©©? @
)
©©@ A
;
©©A B
if
´´ 

(
´´ 
string
´´ 
.
´´  
IsNullOrWhiteSpace
´´ %
(
´´% &
currentPassword
´´& 5
)
´´5 6
)
´´6 7
{
¨¨ 	
validationErrors
≠≠ 
[
≠≠ 
$str
≠≠ .
]
≠≠. /
=
≠≠0 1
new
≠≠2 5
[
≠≠5 6
]
≠≠6 7
{
≠≠8 9
$str
≠≠: X
}
≠≠Y Z
;
≠≠Z [
}
ÆÆ 	
if
∞∞ 

(
∞∞ 
string
∞∞ 
.
∞∞  
IsNullOrWhiteSpace
∞∞ %
(
∞∞% &
newPassword
∞∞& 1
)
∞∞1 2
)
∞∞2 3
{
±± 	
validationErrors
≤≤ 
[
≤≤ 
$str
≤≤ *
]
≤≤* +
=
≤≤, -
new
≤≤. 1
[
≤≤1 2
]
≤≤2 3
{
≤≤4 5
$str
≤≤6 P
}
≤≤Q R
;
≤≤R S
}
≥≥ 	
else
¥¥ 
if
¥¥ 
(
¥¥ 
!
¥¥ 
ValidatePassword
¥¥ "
(
¥¥" #
newPassword
¥¥# .
)
¥¥. /
)
¥¥/ 0
{
µµ 	
validationErrors
∂∂ 
[
∂∂ 
$str
∂∂ *
]
∂∂* +
=
∂∂, -
new
∂∂. 1
[
∂∂1 2
]
∂∂2 3
{
∂∂4 5
$str∂∂6 á
}∂∂à â
;∂∂â ä
}
∑∑ 	
if
ππ 

(
ππ 
validationErrors
ππ 
.
ππ 
Any
ππ  
(
ππ  !
)
ππ! "
)
ππ" #
{
∫∫ 	
throw
ªª 
new
ªª !
ValidationException
ªª )
(
ªª) *
validationErrors
ªª* :
)
ªª: ;
;
ªª; <
}
ºº 	
return
ææ 
await
ææ "
ConcurrencyUtilities
ææ )
.
ææ) *#
ExecuteWithRetryAsync
ææ* ?
(
ææ? @
async
ææ@ E
(
ææF G
)
ææG H
=>
ææI K
{
øø 	
var
¿¿ 
user
¿¿ 
=
¿¿ 
await
¿¿ 
GetUserByIdAsync
¿¿ -
(
¿¿- .
userId
¿¿. 4
)
¿¿4 5
;
¿¿5 6
if
¡¡ 
(
¡¡ 
user
¡¡ 
==
¡¡ 
null
¡¡ 
)
¡¡ 
{
¬¬ 
return
√√ 
false
√√ 
;
√√ 
}
ƒƒ 
if
«« 
(
«« 
!
«« 
BCrypt
«« 
.
«« 
Net
«« 
.
«« 
BCrypt
«« "
.
««" #
Verify
««# )
(
««) *
currentPassword
««* 9
,
««9 :
user
««; ?
.
««? @
PasswordHash
««@ L
)
««L M
)
««M N
{
»» 
_logger
…… 
.
…… 

LogWarning
…… "
(
……" #
$str
……# s
,
……s t
userId
……u {
)
……{ |
;
……| }
throw
   
new
   )
UnauthorizedAccessException
   5
(
  5 6
$str
  6 U
)
  U V
;
  V W
}
ÀÀ 
user
ŒŒ 
.
ŒŒ 
PasswordHash
ŒŒ 
=
ŒŒ 
BCrypt
ŒŒ  &
.
ŒŒ& '
Net
ŒŒ' *
.
ŒŒ* +
BCrypt
ŒŒ+ 1
.
ŒŒ1 2
HashPassword
ŒŒ2 >
(
ŒŒ> ?
newPassword
ŒŒ? J
)
ŒŒJ K
;
ŒŒK L
await
œœ 
_context
œœ 
.
œœ 
SaveChangesAsync
œœ +
(
œœ+ ,
)
œœ, -
;
œœ- .
_logger
—— 
.
—— 
LogInformation
—— "
(
——" #
$str
——# U
,
——U V
userId
——W ]
)
——] ^
;
——^ _
return
““ 
true
““ 
;
““ 
}
”” 	
,
””	 

logger
”” 
:
”” 
_logger
”” 
)
”” 
;
”” 
}
‘‘ 
public
÷÷ 

bool
÷÷ 
ValidateEmail
÷÷ 
(
÷÷ 
string
÷÷ $
email
÷÷% *
)
÷÷* +
{
◊◊ 
if
ÿÿ 

(
ÿÿ 
string
ÿÿ 
.
ÿÿ  
IsNullOrWhiteSpace
ÿÿ %
(
ÿÿ% &
email
ÿÿ& +
)
ÿÿ+ ,
)
ÿÿ, -
{
ŸŸ 	
return
⁄⁄ 
false
⁄⁄ 
;
⁄⁄ 
}
€€ 	
try
›› 
{
ﬁﬁ 	
var
ﬂﬂ 

emailRegex
ﬂﬂ 
=
ﬂﬂ 
new
ﬂﬂ  
Regex
ﬂﬂ! &
(
ﬂﬂ& '
$str
ﬂﬂ' D
,
ﬂﬂD E
RegexOptions
ﬂﬂF R
.
ﬂﬂR S

IgnoreCase
ﬂﬂS ]
)
ﬂﬂ] ^
;
ﬂﬂ^ _
return
‡‡ 

emailRegex
‡‡ 
.
‡‡ 
IsMatch
‡‡ %
(
‡‡% &
email
‡‡& +
)
‡‡+ ,
&&
‡‡- /
email
‡‡0 5
.
‡‡5 6
Length
‡‡6 <
<=
‡‡= ?
$num
‡‡@ C
;
‡‡C D
}
·· 	
catch
‚‚ 
{
„„ 	
return
‰‰ 
false
‰‰ 
;
‰‰ 
}
ÂÂ 	
}
ÊÊ 
public
ËË 

bool
ËË 
ValidatePassword
ËË  
(
ËË  !
string
ËË! '
password
ËË( 0
)
ËË0 1
{
ÈÈ 
if
ÍÍ 

(
ÍÍ 
string
ÍÍ 
.
ÍÍ  
IsNullOrWhiteSpace
ÍÍ %
(
ÍÍ% &
password
ÍÍ& .
)
ÍÍ. /
)
ÍÍ/ 0
{
ÎÎ 	
return
ÏÏ 
false
ÏÏ 
;
ÏÏ 
}
ÌÌ 	
return
 
password
 
.
 
Length
 
>=
 !
$num
" #
&&
$ &
password
ÒÒ 
.
ÒÒ 
Any
ÒÒ 
(
ÒÒ 
char
ÒÒ  
.
ÒÒ  !
IsLetter
ÒÒ! )
)
ÒÒ) *
&&
ÒÒ+ -
password
ÚÚ 
.
ÚÚ 
Any
ÚÚ 
(
ÚÚ 
char
ÚÚ  
.
ÚÚ  !
IsDigit
ÚÚ! (
)
ÚÚ( )
;
ÚÚ) *
}
ÛÛ 
private
ıı 
async
ıı 
Task
ıı 
<
ıı 
string
ıı 
>
ıı %
CreateRefreshTokenAsync
ıı 6
(
ıı6 7
Guid
ıı7 ;
userId
ıı< B
)
ııB C
{
ˆˆ 
var
˜˜ 
refreshToken
˜˜ 
=
˜˜ 
new
˜˜ 
RefreshToken
˜˜ +
{
¯¯ 	
Token
˘˘ 
=
˘˘ 
_jwtService
˘˘ 
.
˘˘  "
GenerateRefreshToken
˘˘  4
(
˘˘4 5
)
˘˘5 6
,
˘˘6 7
UserId
˙˙ 
=
˙˙ 
userId
˙˙ 
,
˙˙ 
	ExpiresAt
˚˚ 
=
˚˚ 
DateTime
˚˚  
.
˚˚  !
UtcNow
˚˚! '
.
˚˚' (
AddDays
˚˚( /
(
˚˚/ 0
_jwtSettings
˚˚0 <
.
˚˚< =(
RefreshTokenExpirationDays
˚˚= W
)
˚˚W X
,
˚˚X Y
	CreatedAt
¸¸ 
=
¸¸ 
TimestampManager
¸¸ (
.
¸¸( ) 
GetUniqueTimestamp
¸¸) ;
(
¸¸; <
)
¸¸< =
}
˝˝ 	
;
˝˝	 

_context
ˇˇ 
.
ˇˇ 
RefreshTokens
ˇˇ 
.
ˇˇ 
Add
ˇˇ "
(
ˇˇ" #
refreshToken
ˇˇ# /
)
ˇˇ/ 0
;
ˇˇ0 1
await
ÄÄ 
_context
ÄÄ 
.
ÄÄ 
SaveChangesAsync
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
;
ÄÄ) *
return
ÇÇ 
refreshToken
ÇÇ 
.
ÇÇ 
Token
ÇÇ !
;
ÇÇ! "
}
ÉÉ 
}ÑÑ Õã
&/usr/src/backend/GeoQuizApi/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
WebHost 
. 
ConfigureKestrel  
(  !
options! (
=>) +
{ 
var 
securitySettings 
= 
builder "
." #
Configuration# 0
.0 1

GetSection1 ;
(; <
SecuritySettings< L
.L M
SectionNameM X
)X Y
.Y Z
GetZ ]
<] ^
SecuritySettings^ n
>n o
(o p
)p q
;q r
if 
( 
securitySettings 
!= 
null  
)  !
{ 
options 
. 
Limits 
. 
MaxRequestBodySize )
=* +
securitySettings, <
.< =
MaxRequestSize= K
;K L
options 
. 
Limits 
. !
RequestHeadersTimeout ,
=- .
TimeSpan/ 7
.7 8
FromSeconds8 C
(C D
securitySettingsD T
.T U
RequestTimeoutU c
)c d
;d e
} 
} 
) 
; 
builder   
.   
Host   
.   

UseSerilog   
(   
(   
context    
,    !
configuration  " /
)  / 0
=>  1 3
configuration!! 
.!! 
ReadFrom!! 
.!! 
Configuration!! (
(!!( )
context!!) 0
.!!0 1
Configuration!!1 >
)!!> ?
)!!? @
;!!@ A
builder$$ 
.$$ 
Services$$ 
.$$ 
AddControllers$$ 
($$  
)$$  !
.%% 
AddJsonOptions%% 
(%% 
options%% 
=>%% 
{&& 
options(( 
.(( !
JsonSerializerOptions(( %
.((% & 
PropertyNamingPolicy((& :
=((; <
System((= C
.((C D
Text((D H
.((H I
Json((I M
.((M N
JsonNamingPolicy((N ^
.((^ _
	CamelCase((_ h
;((h i
options)) 
.)) !
JsonSerializerOptions)) %
.))% &
WriteIndented))& 3
=))4 5
false))6 ;
;)); <
options** 
.** !
JsonSerializerOptions** %
.**% &"
DefaultIgnoreCondition**& <
=**= >
System**? E
.**E F
Text**F J
.**J K
Json**K O
.**O P
Serialization**P ]
.**] ^
JsonIgnoreCondition**^ q
.**q r
WhenWritingNull	**r Å
;
**Å Ç
}++ 
)++ 
.,, '
ConfigureApiBehaviorOptions,,  
(,,  !
options,,! (
=>,,) +
{-- 
options// 
.// ,
 InvalidModelStateResponseFactory// 0
=//1 2
context//3 :
=>//; =
{00 	
var11 
problemDetails11 
=11  
new11! $$
ValidationProblemDetails11% =
(11= >
context11> E
.11E F

ModelState11F P
)11P Q
{22 
Type33 
=33 
ProblemTypes33 #
.33# $
ValidationError33$ 3
,333 4
Title44 
=44 
ProblemTypes44 $
.44$ %
GetTitle44% -
(44- .
ProblemTypes44. :
.44: ;
ValidationError44; J
)44J K
,44K L
Status55 
=55 
StatusCodes55 $
.55$ %
Status400BadRequest55% 8
,558 9
Detail66 
=66 
$str66 B
,66B C
Instance77 
=77 
context77 "
.77" #
HttpContext77# .
.77. /
Request77/ 6
.776 7
Path777 ;
}88 
;88 
problemDetails;; 
.;; 

Extensions;; %
[;;% &#
ProblemDetailsConstants;;& =
.;;= >
TimestampKey;;> J
];;J K
=;;L M
DateTime;;N V
.;;V W
UtcNow;;W ]
;;;] ^
problemDetails<< 
.<< 

Extensions<< %
[<<% &#
ProblemDetailsConstants<<& =
.<<= >

TraceIdKey<<> H
]<<H I
=<<J K
context<<L S
.<<S T
HttpContext<<T _
.<<_ `
TraceIdentifier<<` o
;<<o p
return>> 
new>> "
BadRequestObjectResult>> -
(>>- .
problemDetails>>. <
)>>< =
{?? 
ContentTypes@@ 
=@@ 
{@@  #
ProblemDetailsConstants@@! 8
.@@8 9"
ProblemJsonContentType@@9 O
}@@P Q
}AA 
;AA 
}BB 	
;BB	 

}CC 
)CC 
;CC 
builderFF 
.FF 
ServicesFF 
.FF 

AddOpenApiFF 
(FF 
optionsFF #
=>FF$ &
{GG 
optionsHH 
.HH "
AddDocumentTransformerHH "
(HH" #
(HH# $
documentHH$ ,
,HH, -
contextHH. 5
,HH5 6
cancellationTokenHH7 H
)HHH I
=>HHJ L
{II 
documentJJ 
.JJ 
InfoJJ 
=JJ 
newJJ 
(JJ 
)JJ 
{KK 	
TitleLL 
=LL 
$strLL !
,LL! "
VersionMM 
=MM 
$strMM 
,MM 
DescriptionNN 
=NN 
$str	NN Ö
,
NNÖ Ü
ContactOO 
=OO 
newOO 
(OO 
)OO 
{PP 
NameQQ 
=QQ 
$strQQ %
,QQ% &
EmailRR 
=RR 
$strRR -
}SS 
}TT 	
;TT	 

returnVV 
TaskVV 
.VV 
CompletedTaskVV !
;VV! "
}WW 
)WW 
;WW 
}XX 
)XX 
;XX 
builder[[ 
.[[ 
Services[[ 
.[[ 
AddDbContext[[ 
<[[ 
GeoQuizDbContext[[ .
>[[. /
([[/ 0
options[[0 7
=>[[8 :
options\\ 
.\\ 
	UseSqlite\\ 
(\\ 
builder\\ 
.\\ 
Configuration\\ +
.\\+ ,
GetConnectionString\\, ?
(\\? @
$str\\@ S
)\\S T
)\\T U
)\\U V
;\\V W
builder__ 
.__ 
Services__ 
.__ 
	Configure__ 
<__ 
JwtSettings__ &
>__& '
(__' (
builder__( /
.__/ 0
Configuration__0 =
.__= >

GetSection__> H
(__H I
JwtSettings__I T
.__T U
SectionName__U `
)__` a
)__a b
;__b c
builderbb 
.bb 
Servicesbb 
.bb 
	Configurebb 
<bb 
CorsSettingsbb '
>bb' (
(bb( )
builderbb) 0
.bb0 1
Configurationbb1 >
.bb> ?

GetSectionbb? I
(bbI J
CorsSettingsbbJ V
.bbV W
SectionNamebbW b
)bbb c
)bbc d
;bbd e
builderee 
.ee 
Servicesee 
.ee 
	Configureee 
<ee 
SecuritySettingsee +
>ee+ ,
(ee, -
builderee- 4
.ee4 5
Configurationee5 B
.eeB C

GetSectioneeC M
(eeM N
SecuritySettingseeN ^
.ee^ _
SectionNameee_ j
)eej k
)eek l
;eel m
builderhh 
.hh 
Serviceshh 
.hh 
	AddScopedhh 
<hh 
IJwtServicehh &
,hh& '

JwtServicehh( 2
>hh2 3
(hh3 4
)hh4 5
;hh5 6
builderkk 
.kk 
Serviceskk 
.kk 
	AddScopedkk 
<kk 
IAuthServicekk '
,kk' (
AuthServicekk) 4
>kk4 5
(kk5 6
)kk6 7
;kk7 8
buildernn 
.nn 
Servicesnn 
.nn 
	AddScopednn 
<nn 
IGameStatsServicenn ,
,nn, -
GameStatsServicenn. >
>nn> ?
(nn? @
)nn@ A
;nnA B
builderqq 
.qq 
Servicesqq 
.qq 
	AddScopedqq 
<qq 
ILeaderboardServiceqq .
,qq. /
LeaderboardServiceqq0 B
>qqB C
(qqC D
)qqD E
;qqE F
buildertt 
.tt 
Servicestt 
.tt 
AddMemoryCachett 
(tt  
)tt  !
;tt! "
builderww 
.ww 
Servicesww 
.ww 
AddProblemDetailsww "
(ww" #
optionsww# *
=>ww+ -
{xx 
optionszz 
.zz #
CustomizeProblemDetailszz #
=zz$ %
(zz& '
contextzz' .
)zz. /
=>zz0 2
{{{ 
context}} 
.}} 
ProblemDetails}} 
.}} 

Extensions}} )
[}}) *#
ProblemDetailsConstants}}* A
.}}A B
TimestampKey}}B N
]}}N O
=}}P Q
DateTime}}R Z
.}}Z [
UtcNow}}[ a
;}}a b
context~~ 
.~~ 
ProblemDetails~~ 
.~~ 

Extensions~~ )
[~~) *#
ProblemDetailsConstants~~* A
.~~A B

TraceIdKey~~B L
]~~L M
=~~N O
context~~P W
.~~W X
HttpContext~~X c
.~~c d
TraceIdentifier~~d s
;~~s t
context
ÅÅ 
.
ÅÅ 
ProblemDetails
ÅÅ 
.
ÅÅ 
Instance
ÅÅ '
=
ÅÅ( )
context
ÅÅ* 1
.
ÅÅ1 2
HttpContext
ÅÅ2 =
.
ÅÅ= >
Request
ÅÅ> E
.
ÅÅE F
Path
ÅÅF J
;
ÅÅJ K
}
ÇÇ 
;
ÇÇ 
}ÉÉ 
)
ÉÉ 
;
ÉÉ 
builderÜÜ 
.
ÜÜ 
Services
ÜÜ 
.
ÜÜ 
	AddScoped
ÜÜ 
<
ÜÜ *
ICustomProblemDetailsService
ÜÜ 7
,
ÜÜ7 8)
CustomProblemDetailsService
ÜÜ9 T
>
ÜÜT U
(
ÜÜU V
)
ÜÜV W
;
ÜÜW X
varââ 
jwtSettings
ââ 
=
ââ 
builder
ââ 
.
ââ 
Configuration
ââ '
.
ââ' (

GetSection
ââ( 2
(
ââ2 3
JwtSettings
ââ3 >
.
ââ> ?
SectionName
ââ? J
)
ââJ K
.
ââK L
Get
ââL O
<
ââO P
JwtSettings
ââP [
>
ââ[ \
(
ââ\ ]
)
ââ] ^
;
ââ^ _
ifää 
(
ää 
jwtSettings
ää 
==
ää 
null
ää 
)
ää 
{ãã 
throw
åå 	
new
åå
 '
InvalidOperationException
åå '
(
åå' (
$str
åå( R
)
ååR S
;
ååS T
}çç 
ifêê 
(
êê 
builder
êê 
.
êê 
Environment
êê 
.
êê 
IsProduction
êê $
(
êê$ %
)
êê% &
)
êê& '
{ëë 
if
íí 
(
íí 
string
íí 
.
íí 
IsNullOrEmpty
íí 
(
íí 
jwtSettings
íí (
.
íí( )
	SecretKey
íí) 2
)
íí2 3
||
íí4 6
jwtSettings
íí7 B
.
ííB C
	SecretKey
ííC L
.
ííL M
Contains
ííM U
(
ííU V
$str
ííV c
)
ííc d
)
ííd e
{
ìì 
throw
îî 
new
îî '
InvalidOperationException
îî +
(
îî+ ,
$strîî, á
)îîá à
;îîà â
}
ïï 
var
óó '
corsSettingsForValidation
óó !
=
óó" #
builder
óó$ +
.
óó+ ,
Configuration
óó, 9
.
óó9 :

GetSection
óó: D
(
óóD E
CorsSettings
óóE Q
.
óóQ R
SectionName
óóR ]
)
óó] ^
.
óó^ _
Get
óó_ b
<
óób c
CorsSettings
óóc o
>
óóo p
(
óóp q
)
óóq r
;
óór s
if
òò 
(
òò '
corsSettingsForValidation
òò !
?
òò! "
.
òò" #
AllowedOrigins
òò# 1
?
òò1 2
.
òò2 3
Any
òò3 6
(
òò6 7
origin
òò7 =
=>
òò> @
origin
òòA G
.
òòG H
Contains
òòH P
(
òòP Q
$str
òòQ ^
)
òò^ _
)
òò_ `
==
òòa c
true
òòd h
)
òòh i
{
ôô 
throw
öö 
new
öö '
InvalidOperationException
öö +
(
öö+ ,
$ströö, ñ
)ööñ ó
;ööó ò
}
õõ 
}úú 
builderûû 
.
ûû 
Services
ûû 
.
ûû 
AddAuthentication
ûû "
(
ûû" #
options
ûû# *
=>
ûû+ -
{üü 
options
†† 
.
†† '
DefaultAuthenticateScheme
†† %
=
††& '
JwtBearerDefaults
††( 9
.
††9 :"
AuthenticationScheme
††: N
;
††N O
options
°° 
.
°° $
DefaultChallengeScheme
°° "
=
°°# $
JwtBearerDefaults
°°% 6
.
°°6 7"
AuthenticationScheme
°°7 K
;
°°K L
}¢¢ 
)
¢¢ 
.££ 
AddJwtBearer
££ 
(
££ 
options
££ 
=>
££ 
{§§ 
options
•• 
.
•• '
TokenValidationParameters
•• %
=
••& '
new
••( +'
TokenValidationParameters
••, E
{
¶¶ &
ValidateIssuerSigningKey
ßß  
=
ßß! "
true
ßß# '
,
ßß' (
IssuerSigningKey
®® 
=
®® 
new
®® "
SymmetricSecurityKey
®® 3
(
®®3 4
Encoding
®®4 <
.
®®< =
ASCII
®®= B
.
®®B C
GetBytes
®®C K
(
®®K L
jwtSettings
®®L W
.
®®W X
	SecretKey
®®X a
)
®®a b
)
®®b c
,
®®c d
ValidateIssuer
©© 
=
©© 
true
©© 
,
©© 
ValidIssuer
™™ 
=
™™ 
jwtSettings
™™ !
.
™™! "
Issuer
™™" (
,
™™( )
ValidateAudience
´´ 
=
´´ 
true
´´ 
,
´´  
ValidAudience
¨¨ 
=
¨¨ 
jwtSettings
¨¨ #
.
¨¨# $
Audience
¨¨$ ,
,
¨¨, -
ValidateLifetime
≠≠ 
=
≠≠ 
true
≠≠ 
,
≠≠  
	ClockSkew
ÆÆ 
=
ÆÆ 
TimeSpan
ÆÆ 
.
ÆÆ 
Zero
ÆÆ !
}
ØØ 
;
ØØ 
options
≤≤ 
.
≤≤ 
Events
≤≤ 
=
≤≤ 
new
≤≤ 
JwtBearerEvents
≤≤ (
{
≥≥ 
OnChallenge
¥¥ 
=
¥¥ 
context
¥¥ 
=>
¥¥  
{
µµ 	
context
∑∑ 
.
∑∑ 
HandleResponse
∑∑ "
(
∑∑" #
)
∑∑# $
;
∑∑$ %
var
∫∫ 
problemDetails
∫∫ 
=
∫∫  
new
∫∫! $
ProblemDetails
∫∫% 3
{
ªª 
Type
ºº 
=
ºº 
ProblemTypes
ºº #
.
ºº# $!
AuthenticationError
ºº$ 7
,
ºº7 8
Title
ΩΩ 
=
ΩΩ 
ProblemTypes
ΩΩ $
.
ΩΩ$ %
GetTitle
ΩΩ% -
(
ΩΩ- .
ProblemTypes
ΩΩ. :
.
ΩΩ: ;!
AuthenticationError
ΩΩ; N
)
ΩΩN O
,
ΩΩO P
Status
ææ 
=
ææ 
StatusCodes
ææ $
.
ææ$ %#
Status401Unauthorized
ææ% :
,
ææ: ;
Detail
øø 
=
øø 
$str
øø 2
,
øø2 3
Instance
¿¿ 
=
¿¿ 
context
¿¿ "
.
¿¿" #
Request
¿¿# *
.
¿¿* +
Path
¿¿+ /
}
¡¡ 
;
¡¡ 
problemDetails
ƒƒ 
.
ƒƒ 

Extensions
ƒƒ %
[
ƒƒ% &%
ProblemDetailsConstants
ƒƒ& =
.
ƒƒ= >
TimestampKey
ƒƒ> J
]
ƒƒJ K
=
ƒƒL M
DateTime
ƒƒN V
.
ƒƒV W
UtcNow
ƒƒW ]
;
ƒƒ] ^
problemDetails
≈≈ 
.
≈≈ 

Extensions
≈≈ %
[
≈≈% &%
ProblemDetailsConstants
≈≈& =
.
≈≈= >

TraceIdKey
≈≈> H
]
≈≈H I
=
≈≈J K
context
≈≈L S
.
≈≈S T
HttpContext
≈≈T _
.
≈≈_ `
TraceIdentifier
≈≈` o
;
≈≈o p
context
«« 
.
«« 
Response
«« 
.
«« 

StatusCode
«« '
=
««( )
StatusCodes
««* 5
.
««5 6#
Status401Unauthorized
««6 K
;
««K L
context
»» 
.
»» 
Response
»» 
.
»» 
ContentType
»» (
=
»») *%
ProblemDetailsConstants
»»+ B
.
»»B C$
ProblemJsonContentType
»»C Y
;
»»Y Z
return
   
context
   
.
   
Response
   #
.
  # $
WriteAsJsonAsync
  $ 4
(
  4 5
problemDetails
  5 C
,
  C D
new
  E H#
JsonSerializerOptions
  I ^
{
ÀÀ "
PropertyNamingPolicy
ÃÃ $
=
ÃÃ% &
JsonNamingPolicy
ÃÃ' 7
.
ÃÃ7 8
	CamelCase
ÃÃ8 A
,
ÃÃA B
WriteIndented
ÕÕ 
=
ÕÕ 
false
ÕÕ  %
}
ŒŒ 
)
ŒŒ 
;
ŒŒ 
}
œœ 	
,
œœ	 

OnForbidden
–– 
=
–– 
context
–– 
=>
––  
{
—— 	
var
”” 
problemDetails
”” 
=
””  
new
””! $
ProblemDetails
””% 3
{
‘‘ 
Type
’’ 
=
’’ 
ProblemTypes
’’ #
.
’’# $ 
AuthorizationError
’’$ 6
,
’’6 7
Title
÷÷ 
=
÷÷ 
ProblemTypes
÷÷ $
.
÷÷$ %
GetTitle
÷÷% -
(
÷÷- .
ProblemTypes
÷÷. :
.
÷÷: ; 
AuthorizationError
÷÷; M
)
÷÷M N
,
÷÷N O
Status
◊◊ 
=
◊◊ 
StatusCodes
◊◊ $
.
◊◊$ % 
Status403Forbidden
◊◊% 7
,
◊◊7 8
Detail
ÿÿ 
=
ÿÿ 
$str
ÿÿ (
,
ÿÿ( )
Instance
ŸŸ 
=
ŸŸ 
context
ŸŸ "
.
ŸŸ" #
Request
ŸŸ# *
.
ŸŸ* +
Path
ŸŸ+ /
}
⁄⁄ 
;
⁄⁄ 
problemDetails
›› 
.
›› 

Extensions
›› %
[
››% &%
ProblemDetailsConstants
››& =
.
››= >
TimestampKey
››> J
]
››J K
=
››L M
DateTime
››N V
.
››V W
UtcNow
››W ]
;
››] ^
problemDetails
ﬁﬁ 
.
ﬁﬁ 

Extensions
ﬁﬁ %
[
ﬁﬁ% &%
ProblemDetailsConstants
ﬁﬁ& =
.
ﬁﬁ= >

TraceIdKey
ﬁﬁ> H
]
ﬁﬁH I
=
ﬁﬁJ K
context
ﬁﬁL S
.
ﬁﬁS T
HttpContext
ﬁﬁT _
.
ﬁﬁ_ `
TraceIdentifier
ﬁﬁ` o
;
ﬁﬁo p
context
‡‡ 
.
‡‡ 
Response
‡‡ 
.
‡‡ 

StatusCode
‡‡ '
=
‡‡( )
StatusCodes
‡‡* 5
.
‡‡5 6 
Status403Forbidden
‡‡6 H
;
‡‡H I
context
·· 
.
·· 
Response
·· 
.
·· 
ContentType
·· (
=
··) *%
ProblemDetailsConstants
··+ B
.
··B C$
ProblemJsonContentType
··C Y
;
··Y Z
return
„„ 
context
„„ 
.
„„ 
Response
„„ #
.
„„# $
WriteAsJsonAsync
„„$ 4
(
„„4 5
problemDetails
„„5 C
,
„„C D
new
„„E H#
JsonSerializerOptions
„„I ^
{
‰‰ "
PropertyNamingPolicy
ÂÂ $
=
ÂÂ% &
JsonNamingPolicy
ÂÂ' 7
.
ÂÂ7 8
	CamelCase
ÂÂ8 A
,
ÂÂA B
WriteIndented
ÊÊ 
=
ÊÊ 
false
ÊÊ  %
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
}
ËË 	
}
ÈÈ 
;
ÈÈ 
}ÍÍ 
)
ÍÍ 
;
ÍÍ 
builderÏÏ 
.
ÏÏ 
Services
ÏÏ 
.
ÏÏ 
AddAuthorization
ÏÏ !
(
ÏÏ! "
)
ÏÏ" #
;
ÏÏ# $
varÔÔ 
corsSettings
ÔÔ 
=
ÔÔ 
builder
ÔÔ 
.
ÔÔ 
Configuration
ÔÔ (
.
ÔÔ( )

GetSection
ÔÔ) 3
(
ÔÔ3 4
CorsSettings
ÔÔ4 @
.
ÔÔ@ A
SectionName
ÔÔA L
)
ÔÔL M
.
ÔÔM N
Get
ÔÔN Q
<
ÔÔQ R
CorsSettings
ÔÔR ^
>
ÔÔ^ _
(
ÔÔ_ `
)
ÔÔ` a
;
ÔÔa b
if 
(
 
corsSettings
 
==
 
null
 
)
 
{ÒÒ 
throw
ÚÚ 	
new
ÚÚ
 '
InvalidOperationException
ÚÚ '
(
ÚÚ' (
$str
ÚÚ( S
)
ÚÚS T
;
ÚÚT U
}ÛÛ 
builderıı 
.
ıı 
Services
ıı 
.
ıı 
AddCors
ıı 
(
ıı 
options
ıı  
=>
ıı! #
{ˆˆ 
options
˜˜ 
.
˜˜ 
	AddPolicy
˜˜ 
(
˜˜ 
$str
˜˜ )
,
˜˜) *
policy
˜˜+ 1
=>
˜˜2 4
{
¯¯ 
if
˘˘ 

(
˘˘ 
corsSettings
˘˘ 
.
˘˘ 
AllowedOrigins
˘˘ '
.
˘˘' (
Length
˘˘( .
>
˘˘/ 0
$num
˘˘1 2
)
˘˘2 3
{
˙˙ 	
policy
˚˚ 
.
˚˚ 
WithOrigins
˚˚ 
(
˚˚ 
corsSettings
˚˚ +
.
˚˚+ ,
AllowedOrigins
˚˚, :
)
˚˚: ;
;
˚˚; <
}
¸¸ 	
else
˝˝ 
{
˛˛ 	
policy
ÄÄ 
.
ÄÄ 
AllowAnyOrigin
ÄÄ !
(
ÄÄ! "
)
ÄÄ" #
;
ÄÄ# $
}
ÅÅ 	
if
ÉÉ 

(
ÉÉ 
corsSettings
ÉÉ 
.
ÉÉ 
AllowedHeaders
ÉÉ '
.
ÉÉ' (
Length
ÉÉ( .
>
ÉÉ/ 0
$num
ÉÉ1 2
)
ÉÉ2 3
{
ÑÑ 	
policy
ÖÖ 
.
ÖÖ 
WithHeaders
ÖÖ 
(
ÖÖ 
corsSettings
ÖÖ +
.
ÖÖ+ ,
AllowedHeaders
ÖÖ, :
)
ÖÖ: ;
;
ÖÖ; <
}
ÜÜ 	
else
áá 
{
àà 	
policy
ââ 
.
ââ 
AllowAnyHeader
ââ !
(
ââ! "
)
ââ" #
;
ââ# $
}
ää 	
if
åå 

(
åå 
corsSettings
åå 
.
åå 
AllowedMethods
åå '
.
åå' (
Length
åå( .
>
åå/ 0
$num
åå1 2
)
åå2 3
{
çç 	
policy
éé 
.
éé 
WithMethods
éé 
(
éé 
corsSettings
éé +
.
éé+ ,
AllowedMethods
éé, :
)
éé: ;
;
éé; <
}
èè 	
else
êê 
{
ëë 	
policy
íí 
.
íí 
AllowAnyMethod
íí !
(
íí! "
)
íí" #
;
íí# $
}
ìì 	
if
ïï 

(
ïï 
corsSettings
ïï 
.
ïï 
AllowCredentials
ïï )
&&
ïï* ,
corsSettings
ïï- 9
.
ïï9 :
AllowedOrigins
ïï: H
.
ïïH I
Length
ïïI O
>
ïïP Q
$num
ïïR S
)
ïïS T
{
ññ 	
policy
óó 
.
óó 
AllowCredentials
óó #
(
óó# $
)
óó$ %
;
óó% &
}
òò 	
}
ôô 
)
ôô 
;
ôô 
}öö 
)
öö 
;
öö 
varúú 
app
úú 
=
úú 	
builder
úú
 
.
úú 
Build
úú 
(
úú 
)
úú 
;
úú 
varüü 
securitySettings
üü 
=
üü 
builder
üü 
.
üü 
Configuration
üü ,
.
üü, -

GetSection
üü- 7
(
üü7 8
SecuritySettings
üü8 H
.
üüH I
SectionName
üüI T
)
üüT U
.
üüU V
Get
üüV Y
<
üüY Z
SecuritySettings
üüZ j
>
üüj k
(
üük l
)
üül m
;
üüm n
using¢¢ 
(
¢¢ 
var
¢¢ 

scope
¢¢ 
=
¢¢ 
app
¢¢ 
.
¢¢ 
Services
¢¢ 
.
¢¢  
CreateScope
¢¢  +
(
¢¢+ ,
)
¢¢, -
)
¢¢- .
{££ 
var
§§ 
context
§§ 
=
§§ 
scope
§§ 
.
§§ 
ServiceProvider
§§ '
.
§§' ( 
GetRequiredService
§§( :
<
§§: ;
GeoQuizDbContext
§§; K
>
§§K L
(
§§L M
)
§§M N
;
§§N O
var
•• 
configuration
•• 
=
•• 
scope
•• 
.
•• 
ServiceProvider
•• -
.
••- . 
GetRequiredService
••. @
<
••@ A
IConfiguration
••A O
>
••O P
(
••P Q
)
••Q R
;
••R S
if
®® 
(
®® 
!
®® 	
configuration
®®	 
.
®® 
GetValue
®® 
<
®®  
bool
®®  $
>
®®$ %
(
®®% &
$str
®®& 6
)
®®6 7
)
®®7 8
{
©© 
context
™™ 
.
™™ 
Database
™™ 
.
™™ 
Migrate
™™  
(
™™  !
)
™™! "
;
™™" #
}
´´ 
else
¨¨ 
{
≠≠ 
context
ØØ 
.
ØØ 
Database
ØØ 
.
ØØ 
EnsureCreated
ØØ &
(
ØØ& '
)
ØØ' (
;
ØØ( )
}
∞∞ 
if
≥≥ 
(
≥≥ 
app
≥≥ 
.
≥≥ 
Environment
≥≥ 
.
≥≥ 
IsDevelopment
≥≥ %
(
≥≥% &
)
≥≥& '
)
≥≥' (
{
¥¥ 
await
µµ 
DbSeeder
µµ 
.
µµ 
	SeedAsync
µµ  
(
µµ  !
context
µµ! (
)
µµ( )
;
µµ) *
}
∂∂ 
}∑∑ 
if∫∫ 
(
∫∫ 
app
∫∫ 
.
∫∫ 
Environment
∫∫ 
.
∫∫ 
IsDevelopment
∫∫ !
(
∫∫! "
)
∫∫" #
)
∫∫# $
{ªª 
app
ºº 
.
ºº 

MapOpenApi
ºº 
(
ºº 
)
ºº 
;
ºº 
app
ΩΩ 
.
ΩΩ #
MapScalarApiReference
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ  
}ææ 
app¡¡ 
.
¡¡ &
UseSerilogRequestLogging
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
app∆∆ 
.
∆∆ 
UseMiddleware
∆∆ 
<
∆∆ ,
Rfc9457ErrorHandlingMiddleware
∆∆ 0
>
∆∆0 1
(
∆∆1 2
)
∆∆2 3
;
∆∆3 4
app…… 
.
……  
UseStatusCodePages
…… 
(
…… 
async
…… 
context
…… $
=>
……% '
{   
var
ÀÀ 
response
ÀÀ 
=
ÀÀ 
context
ÀÀ 
.
ÀÀ 
HttpContext
ÀÀ &
.
ÀÀ& '
Response
ÀÀ' /
;
ÀÀ/ 0
var
ÃÃ 
request
ÃÃ 
=
ÃÃ 
context
ÃÃ 
.
ÃÃ 
HttpContext
ÃÃ %
.
ÃÃ% &
Request
ÃÃ& -
;
ÃÃ- .
if
ŒŒ 
(
ŒŒ 
response
ŒŒ 
.
ŒŒ 

StatusCode
ŒŒ 
==
ŒŒ 
$num
ŒŒ "
)
ŒŒ" #
{
œœ 
var
–– 
problemDetails
–– 
=
–– 
new
––  
ProblemDetails
––! /
{
—— 	
Type
““ 
=
““ 
ProblemTypes
““ 
.
““  
NotFoundError
““  -
,
““- .
Title
”” 
=
”” 
ProblemTypes
””  
.
””  !
GetTitle
””! )
(
””) *
ProblemTypes
””* 6
.
””6 7
NotFoundError
””7 D
)
””D E
,
””E F
Status
‘‘ 
=
‘‘ 
$num
‘‘ 
,
‘‘ 
Detail
’’ 
=
’’ 
$"
’’ 
$str
’’ /
{
’’/ 0
request
’’0 7
.
’’7 8
Path
’’8 <
}
’’< =
$str
’’= M
"
’’M N
,
’’N O
Instance
÷÷ 
=
÷÷ 
request
÷÷ 
.
÷÷ 
Path
÷÷ #
}
◊◊ 	
;
◊◊	 

problemDetails
⁄⁄ 
.
⁄⁄ 

Extensions
⁄⁄ !
[
⁄⁄! "%
ProblemDetailsConstants
⁄⁄" 9
.
⁄⁄9 :
TimestampKey
⁄⁄: F
]
⁄⁄F G
=
⁄⁄H I
DateTime
⁄⁄J R
.
⁄⁄R S
UtcNow
⁄⁄S Y
;
⁄⁄Y Z
problemDetails
€€ 
.
€€ 

Extensions
€€ !
[
€€! "%
ProblemDetailsConstants
€€" 9
.
€€9 :

TraceIdKey
€€: D
]
€€D E
=
€€F G
context
€€H O
.
€€O P
HttpContext
€€P [
.
€€[ \
TraceIdentifier
€€\ k
;
€€k l
response
›› 
.
›› 
ContentType
›› 
=
›› %
ProblemDetailsConstants
›› 6
.
››6 7$
ProblemJsonContentType
››7 M
;
››M N
await
ﬁﬁ 
response
ﬁﬁ 
.
ﬁﬁ 
WriteAsJsonAsync
ﬁﬁ '
(
ﬁﬁ' (
problemDetails
ﬁﬁ( 6
,
ﬁﬁ6 7
new
ﬁﬁ8 ;#
JsonSerializerOptions
ﬁﬁ< Q
{
ﬂﬂ 	"
PropertyNamingPolicy
‡‡  
=
‡‡! "
JsonNamingPolicy
‡‡# 3
.
‡‡3 4
	CamelCase
‡‡4 =
,
‡‡= >
WriteIndented
·· 
=
·· 
false
·· !
}
‚‚ 	
)
‚‚	 

;
‚‚
 
}
„„ 
}‰‰ 
)
‰‰ 
;
‰‰ 
ifÁÁ 
(
ÁÁ 
securitySettings
ÁÁ 
?
ÁÁ 
.
ÁÁ #
EnableSecurityHeaders
ÁÁ +
==
ÁÁ, .
true
ÁÁ/ 3
)
ÁÁ3 4
{ËË 
app
ÈÈ 
.
ÈÈ 
UseMiddleware
ÈÈ 
<
ÈÈ '
SecurityHeadersMiddleware
ÈÈ /
>
ÈÈ/ 0
(
ÈÈ0 1
)
ÈÈ1 2
;
ÈÈ2 3
}ÍÍ 
ifÏÏ 
(
ÏÏ 
securitySettings
ÏÏ 
?
ÏÏ 
.
ÏÏ  
EnableRateLimiting
ÏÏ (
==
ÏÏ) +
true
ÏÏ, 0
)
ÏÏ0 1
{ÌÌ 
app
ÓÓ 
.
ÓÓ 
UseMiddleware
ÓÓ 
<
ÓÓ $
RateLimitingMiddleware
ÓÓ ,
>
ÓÓ, -
(
ÓÓ- .
)
ÓÓ. /
;
ÓÓ/ 0
}ÔÔ 
ifÒÒ 
(
ÒÒ 
securitySettings
ÒÒ 
?
ÒÒ 
.
ÒÒ #
EnableInputValidation
ÒÒ +
==
ÒÒ, .
true
ÒÒ/ 3
)
ÒÒ3 4
{ÚÚ 
app
ÛÛ 
.
ÛÛ 
UseMiddleware
ÛÛ 
<
ÛÛ '
InputValidationMiddleware
ÛÛ /
>
ÛÛ/ 0
(
ÛÛ0 1
)
ÛÛ1 2
;
ÛÛ2 3
}ÙÙ 
if˜˜ 
(
˜˜ 
securitySettings
˜˜ 
?
˜˜ 
.
˜˜ 
EnforceHttps
˜˜ "
==
˜˜# %
true
˜˜& *
)
˜˜* +
{¯¯ 
app
˘˘ 
.
˘˘ !
UseHttpsRedirection
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
}˙˙ 
if¸¸ 
(
¸¸ 
securitySettings
¸¸ 
?
¸¸ 
.
¸¸ 

EnableHsts
¸¸  
==
¸¸! #
true
¸¸$ (
&&
¸¸) +
!
¸¸, -
app
¸¸- 0
.
¸¸0 1
Environment
¸¸1 <
.
¸¸< =
IsDevelopment
¸¸= J
(
¸¸J K
)
¸¸K L
)
¸¸L M
{˝˝ 
app
˛˛ 
.
˛˛ 
UseHsts
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
}ˇˇ 
appÇÇ 
.
ÇÇ 
UseCors
ÇÇ 
(
ÇÇ 
$str
ÇÇ 
)
ÇÇ  
;
ÇÇ  !
appÖÖ 
.
ÖÖ 
UseAuthentication
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
appÜÜ 
.
ÜÜ 
UseAuthorization
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
appââ 
.
ââ 
MapControllers
ââ 
(
ââ 
)
ââ 
;
ââ 
appãã 
.
ãã 
Run
ãã 
(
ãã 
)
ãã 	
;
ãã	 

internaléé 
static
éé	 
class
éé %
ProblemDetailsConstants
éé -
{èè 
public
êê 

const
êê 
string
êê 
TimestampKey
êê $
=
êê% &
$str
êê' 2
;
êê2 3
public
ëë 

const
ëë 
string
ëë 

TraceIdKey
ëë "
=
ëë# $
$str
ëë% .
;
ëë. /
public
íí 

const
íí 
string
íí $
ProblemJsonContentType
íí .
=
íí/ 0
$str
íí1 K
;
ííK L
}ìì ˛?
2/usr/src/backend/GeoQuizApi/Models/ProblemTypes.cs
	namespace 	

GeoQuizApi
 
. 
Models 
; 
public

 
static

 
class

 
ProblemTypes

  
{ 
public 

const 
string 
BaseUri 
=  !
$str" J
;J K
public 

const 
string 
ValidationError '
=( )
BaseUri* 1
+2 3
$str4 F
;F G
public 

const 
string 
AuthenticationError +
=, -
BaseUri. 5
+6 7
$str8 N
;N O
public 

const 
string 
AuthorizationError *
=+ ,
BaseUri- 4
+5 6
$str7 L
;L M
public 

const 
string 
NotFoundError %
=& '
BaseUri( /
+0 1
$str2 C
;C D
public 

const 
string 
ConflictError %
=& '
BaseUri( /
+0 1
$str2 B
;B C
public 

const 
string 
InternalServerError +
=, -
BaseUri. 5
+6 7
$str8 O
;O P
public 

const 
string 
BadRequestError '
=( )
BaseUri* 1
+2 3
$str4 G
;G H
public 

static 
readonly 
ReadOnlyDictionary -
<- .
Type. 2
,2 3
string4 :
>: ;%
ExceptionToProblemTypeMap< U
=V W
new 
( 
new 

Dictionary 
< 
Type 
,  
string! '
>' (
{ 	
{   
typeof   
(   
ValidationException   (
)  ( )
,  ) *
ValidationError  + :
}  ; <
,  < =
{!! 
typeof!! 
(!! '
UnauthorizedAccessException!! 0
)!!0 1
,!!1 2
AuthenticationError!!3 F
}!!G H
,!!H I
{"" 
typeof"" 
(""  
KeyNotFoundException"" )
)"") *
,""* +
NotFoundError"", 9
}"": ;
,""; <
{## 
typeof## 
(## %
InvalidOperationException## .
)##. /
,##/ 0
ConflictError##1 >
}##? @
,##@ A
{$$ 
typeof$$ 
($$ 
ArgumentException$$ &
)$$& '
,$$' (
BadRequestError$$) 8
}$$9 :
,$$: ;
{%% 
typeof%% 
(%% 
	Exception%% 
)%% 
,%%  
InternalServerError%%! 4
}%%5 6
}&& 	
)&&	 

;&&
 
public++ 

static++ 
readonly++ 
ReadOnlyDictionary++ -
<++- .
string++. 4
,++4 5
string++6 <
>++< =
ProblemTypeTitles++> O
=++P Q
new,, 
(,, 
new,, 

Dictionary,, 
<,, 
string,, !
,,,! "
string,,# )
>,,) *
{-- 	
{.. 
ValidationError.. 
,.. 
$str.. H
}..I J
,..J K
{// 
AuthenticationError// !
,//! "
$str//# <
}//= >
,//> ?
{00 
AuthorizationError00  
,00  !
$str00" 1
}002 3
,003 4
{11 
NotFoundError11 
,11 
$str11 1
}112 3
,113 4
{22 
ConflictError22 
,22 
$str22 0
}221 2
,222 3
{33 
InternalServerError33 !
,33! "
$str33# U
}33V W
,33W X
{44 
BadRequestError44 
,44 
$str44 0
}441 2
}55 	
)55	 

;55
 
public<< 

static<< 
string<< 
GetProblemType<< '
(<<' (
Type<<( ,
exceptionType<<- :
)<<: ;
{== 
if?? 

(?? %
ExceptionToProblemTypeMap?? %
.??% &
TryGetValue??& 1
(??1 2
exceptionType??2 ?
,??? @
out??A D
var??E H
problemType??I T
)??T U
)??U V
{@@ 	
returnAA 
problemTypeAA 
;AA 
}BB 	
ifEE 

(EE 
exceptionTypeEE 
==EE 
typeofEE #
(EE# $%
InvalidOperationExceptionEE$ =
)EE= >
)EE> ?
{FF 	
returnGG 
ConflictErrorGG  
;GG  !
}HH 	
foreachKK 
(KK 
varKK 
kvpKK 
inKK %
ExceptionToProblemTypeMapKK 5
)KK5 6
{LL 	
ifMM 
(MM 
kvpMM 
.MM 
KeyMM 
.MM 
IsAssignableFromMM (
(MM( )
exceptionTypeMM) 6
)MM6 7
)MM7 8
{NN 
returnOO 
kvpOO 
.OO 
ValueOO  
;OO  !
}PP 
}QQ 	
returnTT 
InternalServerErrorTT "
;TT" #
}UU 
public]] 

static]] 
string]] 
GetProblemType]] '
(]]' (
	Exception]]( 1
	exception]]2 ;
)]]; <
{^^ 
return__ 
	exception__ 
switch__ 
{`` 	
ValidationExceptionaa 
=>aa  "
ValidationErroraa# 2
,aa2 3'
UnauthorizedAccessExceptionbb '
=>bb( *
AuthenticationErrorbb+ >
,bb> ? 
KeyNotFoundExceptioncc  
=>cc! #
NotFoundErrorcc$ 1
,cc1 2%
InvalidOperationExceptiondd %
invalidOpExdd& 1
whendd2 6
invalidOpExdd7 B
.ddB C
MessageddC J
.ddJ K
ContainsddK S
(ddS T
$strddT d
)ddd e
=>ddf h
ConflictErrorddi v
,ddv w%
InvalidOperationExceptionee %
=>ee& (
ConflictErroree) 6
,ee6 7
ArgumentExceptionff 
=>ff  
BadRequestErrorff! 0
,ff0 1
_gg 
=>gg 
InternalServerErrorgg $
}hh 	
;hh	 

}ii 
publicpp 

staticpp 
stringpp 
GetTitlepp !
(pp! "
stringpp" (
problemTypeUripp) 7
)pp7 8
{qq 
returnrr 
ProblemTypeTitlesrr  
.rr  !
TryGetValuerr! ,
(rr, -
problemTypeUrirr- ;
,rr; <
outrr= @
varrrA D
titlerrE J
)rrJ K
?ss 
titless 
:tt 
$strtt !
;tt! "
}uu 
public|| 

static|| 
string|| 
GetTitle|| !
(||! "
Type||" &
exceptionType||' 4
)||4 5
{}} 
var~~ 
problemType~~ 
=~~ 
GetProblemType~~ (
(~~( )
exceptionType~~) 6
)~~6 7
;~~7 8
return 
GetTitle 
( 
problemType #
)# $
;$ %
}
ÄÄ 
public
áá 

static
áá 
string
áá 
GetTitle
áá !
(
áá! "
	Exception
áá" +
	exception
áá, 5
)
áá5 6
{
àà 
var
ââ 
problemType
ââ 
=
ââ 
GetProblemType
ââ (
(
ââ( )
	exception
ââ) 2
)
ââ2 3
;
ââ3 4
return
ää 
GetTitle
ää 
(
ää 
problemType
ää #
)
ää# $
;
ää$ %
}
ãã 
}åå ¯
8/usr/src/backend/GeoQuizApi/Models/LeaderboardPeriods.cs
	namespace 	

GeoQuizApi
 
. 
Models 
; 
public 
static 
class 
LeaderboardPeriods &
{ 
public 

const 
string 
AllTime 
=  !
$str" ,
;, -
public		 

const		 
string		 
Week		 
=		 
$str		 %
;		% &
public

 

const

 
string

 
Month

 
=

 
$str

  '
;

' (
public 

const 
string 
Year 
= 
$str %
;% &
public 

static 
readonly 
string !
[! "
]" #
ValidPeriods$ 0
=1 2
{3 4
AllTime5 <
,< =
Week> B
,B C
MonthD I
,I J
YearK O
}P Q
;Q R
public 

static 
bool 
IsValid 
( 
string %
?% &
period' -
)- .
{ 
return 
! 
string 
. 
IsNullOrWhiteSpace )
() *
period* 0
)0 1
&&2 4
ValidPeriods 
. 
Contains $
($ %
period% +
.+ ,
ToLowerInvariant, <
(< =
)= >
)> ?
;? @
} 
} ⁄
//usr/src/backend/GeoQuizApi/Models/GameTypes.cs
	namespace 	

GeoQuizApi
 
. 
Models 
; 
public 
static 
class 
	GameTypes 
{ 
public 

const 
string 
	Countries !
=" #
$str$ /
;/ 0
public		 

const		 
string		 
Flags		 
=		 
$str		  '
;		' (
public

 

const

 
string

 
States

 
=

  
$str

! )
;

) *
public 

static 
readonly 
string !
[! "
]" #
ValidGameTypes$ 2
=3 4
{5 6
	Countries7 @
,@ A
FlagsB G
,G H
StatesI O
}P Q
;Q R
public 

static 
bool 
IsValid 
( 
string %
?% &
gameType' /
)/ 0
{ 
return 
! 
string 
. 
IsNullOrWhiteSpace )
() *
gameType* 2
)2 3
&&4 6
ValidGameTypes 
. 
Contains &
(& '
gameType' /
./ 0
ToLowerInvariant0 @
(@ A
)A B
)B C
;C D
} 
} ‡ 
D/usr/src/backend/GeoQuizApi/Models/Exceptions/ValidationException.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 

Exceptions &
;& '
public 
class 
ValidationException  
:! "
	Exception# ,
{ 
public 


Dictionary 
< 
string 
, 
string $
[$ %
]% &
>& '
Errors( .
{/ 0
get1 4
;4 5
}6 7
public 

ValidationException 
( 

Dictionary )
<) *
string* 0
,0 1
string2 8
[8 9
]9 :
>: ;
errors< B
)B C
:D E
baseF J
(J K
$strK ^
)^ _
{ 
Errors 
= 
errors 
; 
} 
public 

ValidationException 
( 
string %
field& +
,+ ,
string- 3
message4 ;
); <
:= >
base? C
(C D
$strD W
)W X
{ 
Errors 
= 
new 

Dictionary 
<  
string  &
,& '
string( .
[. /
]/ 0
>0 1
{2 3
[4 5
field5 :
]: ;
=< =
new> A
[A B
]B C
{D E
messageF M
}N O
}P Q
;Q R
}   
public'' 

ValidationException'' 
('' 
string'' %
field''& +
,''+ ,
string''- 3
[''3 4
]''4 5
messages''6 >
)''> ?
:''@ A
base''B F
(''F G
$str''G Z
)''Z [
{(( 
Errors)) 
=)) 
new)) 

Dictionary)) 
<))  
string))  &
,))& '
string))( .
[)). /
]))/ 0
>))0 1
{))2 3
[))4 5
field))5 :
])): ;
=))< =
messages))> F
}))G H
;))H I
}** 
public11 

ValidationException11 
(11 

Dictionary11 )
<11) *
string11* 0
,110 1
object112 8
>118 9
errors11: @
)11@ A
:11B C
base11D H
(11H I
$str11I \
)11\ ]
{22 
Errors33 
=33 
new33 

Dictionary33 
<33  
string33  &
,33& '
string33( .
[33. /
]33/ 0
>330 1
(331 2
)332 3
;333 4
foreach55 
(55 
var55 
error55 
in55 
errors55 $
)55$ %
{66 	
var77 
errorMessages77 
=77 
error77  %
.77% &
Value77& +
switch77, 2
{88 
string99 
stringValue99 "
=>99# %
new99& )
[99) *
]99* +
{99, -
stringValue99. 9
}99: ;
,99; <
string:: 
[:: 
]:: 

arrayValue:: #
=>::$ &

arrayValue::' 1
,::1 2
IEnumerable;; 
<;; 
string;; "
>;;" #
enumerableValue;;$ 3
=>;;4 6
enumerableValue;;7 F
.;;F G
ToArray;;G N
(;;N O
);;O P
,;;P Q
_<< 
=><< 
new<< 
[<< 
]<< 
{<< 
error<< "
.<<" #
Value<<# (
?<<( )
.<<) *
ToString<<* 2
(<<2 3
)<<3 4
??<<5 7
$str<<8 G
}<<H I
}== 
;== 
Errors?? 
[?? 
error?? 
.?? 
Key?? 
]?? 
=?? 
errorMessages??  -
;??- .
}@@ 	
}AA 
}BB ¥
3/usr/src/backend/GeoQuizApi/Models/Entities/User.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
Entities $
;$ %
public 
class 
User 
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
=! "
Guid# '
.' (
NewGuid( /
(/ 0
)0 1
;1 2
[		 
Required		 
]		 
[

 
EmailAddress

 
]

 
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 
Email 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
[ 
Required 
] 
public 

string 
PasswordHash 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 
? 
Avatar 
{ 
get 
;  
set! $
;$ %
}& '
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 
Provider 
{ 
get  
;  !
set" %
;% &
}' (
=) *
$str+ 2
;2 3
public 

DateTime 
	CreatedAt 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
DateTime. 6
.6 7
UtcNow7 =
;= >
public 

DateTime 
? 
LastLoginAt  
{! "
get# &
;& '
set( +
;+ ,
}- .
public   

string   
?   
PreferencesJson   "
{  # $
get  % (
;  ( )
set  * -
;  - .
}  / 0
public## 

ICollection## 
<## 
GameSession## "
>##" #
GameSessions##$ 0
{##1 2
get##3 6
;##6 7
set##8 ;
;##; <
}##= >
=##? @
new##A D
List##E I
<##I J
GameSession##J U
>##U V
(##V W
)##W X
;##X Y
public$$ 

ICollection$$ 
<$$ 
RefreshToken$$ #
>$$# $
RefreshTokens$$% 2
{$$3 4
get$$5 8
;$$8 9
set$$: =
;$$= >
}$$? @
=$$A B
new$$C F
List$$G K
<$$K L
RefreshToken$$L X
>$$X Y
($$Y Z
)$$Z [
;$$[ \
}%% ‹
;/usr/src/backend/GeoQuizApi/Models/Entities/RefreshToken.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
Entities $
;$ %
public 
class 
RefreshToken 
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
=! "
Guid# '
.' (
NewGuid( /
(/ 0
)0 1
;1 2
[		 
Required		 
]		 
[

 
	MaxLength

 
(

 
$num

 
)

 
]

 
public 

string 
Token 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
[ 
Required 
] 
public 

Guid 
UserId 
{ 
get 
; 
set !
;! "
}# $
[ 
Required 
] 
public 

DateTime 
	ExpiresAt 
{ 
get  #
;# $
set% (
;( )
}* +
public 

DateTime 
	CreatedAt 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
DateTime. 6
.6 7
UtcNow7 =
;= >
public 

bool 
	IsRevoked 
{ 
get 
;  
set! $
;$ %
}& '
=( )
false* /
;/ 0
public 

User 
User 
{ 
get 
; 
set 
;  
}! "
=# $
null% )
!) *
;* +
} †
:/usr/src/backend/GeoQuizApi/Models/Entities/GameSession.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
Entities $
;$ %
public 
class 
GameSession 
{ 
public 

Guid 
Id 
{ 
get 
; 
set 
; 
}  
=! "
Guid# '
.' (
NewGuid( /
(/ 0
)0 1
;1 2
[		 
Required		 
]		 
public

 

Guid

 
UserId

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
[ 
Required 
] 
[ 
	MaxLength 
( 
$num 
) 
] 
public 

string 
GameType 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 
Required 
] 
public 

int 
CorrectAnswers 
{ 
get  #
;# $
set% (
;( )
}* +
[ 
Required 
] 
public 

int 
WrongAnswers 
{ 
get !
;! "
set# &
;& '
}( )
[ 
Required 
] 
public 

DateTime 
SessionStartTime $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

DateTime 
? 
SessionEndTime #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

int 
? 
SessionDurationMs !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

DateTime 
	CreatedAt 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
DateTime. 6
.6 7
UtcNow7 =
;= >
public   

User   
User   
{   
get   
;   
set   
;    
}  ! "
=  # $
null  % )
!  ) *
;  * +
}!! ˘
J/usr/src/backend/GeoQuizApi/Models/DTOs/Leaderboard/LeaderboardResponse.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Leaderboard! ,
;, -
public 
class 
LeaderboardResponse  
{ 
public 

List 
< 
LeaderboardEntry  
>  !
Entries" )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
=8 9
new: =
(= >
)> ?
;? @
public 

int 
TotalPlayers 
{ 
get !
;! "
set# &
;& '
}( )
public 

LeaderboardEntry 
? 
CurrentUserEntry -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 

int 
Page 
{ 
get 
; 
set 
; 
}  !
=" #
$num$ %
;% &
public		 

int		 
PageSize		 
{		 
get		 
;		 
set		 "
;		" #
}		$ %
=		& '
$num		( *
;		* +
public

 

int

 

TotalPages

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
} ã
I/usr/src/backend/GeoQuizApi/Models/DTOs/Leaderboard/LeaderboardFilters.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Leaderboard! ,
;, -
public 
class %
LeaderboardFiltersRequest &
{		 
public 

string 
? 
GameType 
{ 
get !
;! "
set# &
;& '
}( )
public 

string 
? 
Period 
{ 
get 
;  
set! $
;$ %
}& '
[ 
Range 

(
 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage (
=) *
$str+ H
)H I
]I J
public 

int 
Page 
{ 
get 
; 
set 
; 
}  !
=" #
$num$ %
;% &
[ 
Range 

(
 
$num 
, 
$num 
, 
ErrorMessage 
=  !
$str" G
)G H
]H I
public 

int 
PageSize 
{ 
get 
; 
set "
;" #
}$ %
=& '
$num( *
;* +
} 
public$$ 
class$$ &
LeaderboardFiltersResponse$$ '
{%% 
public&& 

string&& 
[&& 
]&& 
	GameTypes&& 
{&& 
get&&  #
;&&# $
set&&% (
;&&( )
}&&* +
=&&, -
Array&&. 3
.&&3 4
Empty&&4 9
<&&9 :
string&&: @
>&&@ A
(&&A B
)&&B C
;&&C D
public'' 

string'' 
['' 
]'' 
Periods'' 
{'' 
get'' !
;''! "
set''# &
;''& '
}''( )
=''* +
Array'', 1
.''1 2
Empty''2 7
<''7 8
string''8 >
>''> ?
(''? @
)''@ A
;''A B
public(( 

string(( 
Description(( 
{(( 
get((  #
;((# $
set((% (
;((( )
}((* +
=((, -
string((. 4
.((4 5
Empty((5 :
;((: ;
})) ù
G/usr/src/backend/GeoQuizApi/Models/DTOs/Leaderboard/LeaderboardEntry.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Leaderboard! ,
;, -
public 
class 
LeaderboardEntry 
{ 
public 

string 
? 
UserId 
{ 
get 
;  
set! $
;$ %
}& '
public 

string 
DisplayName 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 

int 

TotalScore 
{ 
get 
;  
set! $
;$ %
}& '
public 

int 

TotalGames 
{ 
get 
;  
set! $
;$ %
}& '
public		 

double		 
Accuracy		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
public

 

int

 

BestStreak

 
{

 
get

 
;

  
set

! $
;

$ %
}

& '
public 

DateTime 
? 
LastPlayedAt !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

int 
Rank 
{ 
get 
; 
set 
; 
}  !
} ◊
K/usr/src/backend/GeoQuizApi/Models/DTOs/GameStats/MigrateProgressRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
	GameStats! *
;* +
public 
class "
MigrateProgressRequest #
{ 
[ 
Required 
( 
ErrorMessage 
= 
$str >
)> ?
]? @
[ 
	MinLength 
( 
$num 
, 
ErrorMessage 
=  
$str! C
)C D
]D E
public		 

List		 
<		 #
AnonymousGameSessionDto		 '
>		' (
AnonymousSessions		) :
{		; <
get		= @
;		@ A
set		B E
;		E F
}		G H
=		I J
new		K N
(		N O
)		O P
;		P Q
}

 
public 
class #
AnonymousGameSessionDto $
{ 
[ 
Required 
( 
ErrorMessage 
= 
$str 4
)4 5
]5 6
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
=  !
$str" I
)I J
]J K
public 

string 
GameType 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 
Range 

(
 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage (
=) *
$str+ Q
)Q R
]R S
public 

int 
CorrectAnswers 
{ 
get  #
;# $
set% (
;( )
}* +
[ 
Range 

(
 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage (
=) *
$str+ O
)O P
]P Q
public 

int 
WrongAnswers 
{ 
get !
;! "
set# &
;& '
}( )
[ 
Required 
( 
ErrorMessage 
= 
$str =
)= >
]> ?
public 

DateTime 
SessionStartTime $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

DateTime 
? 
SessionEndTime #
{$ %
get& )
;) *
set+ .
;. /
}0 1
} ”
F/usr/src/backend/GeoQuizApi/Models/DTOs/GameStats/GameStatsResponse.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
	GameStats! *
;* +
public 
class 
GameStatsResponse 
{ 
public 

int 

TotalGames 
{ 
get 
;  
set! $
;$ %
}& '
public 

int 
TotalCorrectAnswers "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

int 
TotalWrongAnswers  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 

int 

BestStreak 
{ 
get 
;  
set! $
;$ %
}& '
public		 

double		 
AverageAccuracy		 !
{		" #
get		$ '
;		' (
set		) ,
;		, -
}		. /
public

 

DateTime

 
?

 
LastPlayedAt

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 


Dictionary 
< 
string 
, 
GameTypeStatsDto .
>. /
GameTypeStats0 =
{> ?
get@ C
;C D
setE H
;H I
}J K
=L M
newN Q
(Q R
)R S
;S T
} 
public 
class 
GameTypeStatsDto 
{ 
public 

int 
Games 
{ 
get 
; 
set 
;  
}! "
public 

int 
CorrectAnswers 
{ 
get  #
;# $
set% (
;( )
}* +
public 

int 
WrongAnswers 
{ 
get !
;! "
set# &
;& '
}( )
public 

double 
Accuracy 
{ 
get  
;  !
set" %
;% &
}' (
public 

int 

BestStreak 
{ 
get 
;  
set! $
;$ %
}& '
} ¸
G/usr/src/backend/GeoQuizApi/Models/DTOs/GameStats/GameSessionRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
	GameStats! *
;* +
public 
class 
GameSessionRequest 
{		 
[ 
Required 
( 
ErrorMessage 
= 
$str 4
)4 5
]5 6
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage 
=  !
$str" I
)I J
]J K
public 

string 
GameType 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 
Range 

(
 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage (
=) *
$str+ Q
)Q R
]R S
public 

int 
CorrectAnswers 
{ 
get  #
;# $
set% (
;( )
}* +
[ 
Range 

(
 
$num 
, 
int 
. 
MaxValue 
, 
ErrorMessage (
=) *
$str+ O
)O P
]P Q
public 

int 
WrongAnswers 
{ 
get !
;! "
set# &
;& '
}( )
[$$ 
Required$$ 
($$ 
ErrorMessage$$ 
=$$ 
$str$$ =
)$$= >
]$$> ?
public%% 

DateTime%% 
SessionStartTime%% $
{%%% &
get%%' *
;%%* +
set%%, /
;%%/ 0
}%%1 2
public++ 

DateTime++ 
?++ 
SessionEndTime++ #
{++$ %
get++& )
;++) *
set+++ .
;++. /
}++0 1
},, ç
H/usr/src/backend/GeoQuizApi/Models/DTOs/GameStats/GameHistoryResponse.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
	GameStats! *
;* +
public 
class 
GameHistoryResponse  
{ 
public 

List 
< 
GameSessionDto 
> 
Sessions  (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
new9 <
(< =
)= >
;> ?
public 

int 

TotalCount 
{ 
get 
;  
set! $
;$ %
}& '
public 

int 
Page 
{ 
get 
; 
set 
; 
}  !
public 

int 
PageSize 
{ 
get 
; 
set "
;" #
}$ %
public		 

bool		 
HasNextPage		 
{		 
get		 !
;		! "
set		# &
;		& '
}		( )
}

 
public 
class 
GameSessionDto 
{ 
public 

string 
Id 
{ 
get 
; 
set 
;  
}! "
=# $
string% +
.+ ,
Empty, 1
;1 2
public 

string 
GameType 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
public 

int 
CorrectAnswers 
{ 
get  #
;# $
set% (
;( )
}* +
public 

int 
WrongAnswers 
{ 
get !
;! "
set# &
;& '
}( )
public 

double 
Accuracy 
{ 
get  
;  !
set" %
;% &
}' (
public 

DateTime 
SessionStartTime $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 

DateTime 
? 
SessionEndTime #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 

int 
? 
SessionDurationMs !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 

DateTime 
	CreatedAt 
{ 
get  #
;# $
set% (
;( )
}* +
} î
7/usr/src/backend/GeoQuizApi/Models/DTOs/Auth/UserDto.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class 
UserDto 
{ 
public 

string 
Id 
{ 
get 
; 
set 
;  
}! "
=# $
string% +
.+ ,
Empty, 1
;1 2
public 

string 
Email 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
public 

string 
? 
Avatar 
{ 
get 
;  
set! $
;$ %
}& '
public		 

string		 
Provider		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
string		+ 1
.		1 2
Empty		2 7
;		7 8
public

 

DateTime

 
	CreatedAt

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
public 

DateTime 
? 
LastLoginAt  
{! "
get# &
;& '
set( +
;+ ,
}- .
} ¯
D/usr/src/backend/GeoQuizApi/Models/DTOs/Auth/UpdateProfileRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class  
UpdateProfileRequest !
:" #
IValidatableObject$ 6
{ 
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# F
)F G
]G H
[ 
RegularExpression 
( 
$str /
,/ 0
ErrorMessage1 =
=> ?
$str@ b
)b c
]c d
public		 

string		 
?		 
Name		 
{		 
get		 
;		 
set		 "
;		" #
}		$ %
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# L
)L M
]M N
[ 
Url 
( 	
ErrorMessage	 
= 
$str 4
)4 5
]5 6
public 

string 
? 
Avatar 
{ 
get 
;  
set! $
;$ %
}& '
public 

IEnumerable 
< 
ValidationResult '
>' (
Validate) 1
(1 2
ValidationContext2 C
validationContextD U
)U V
{ 
if 

( 
! 
string 
. 
IsNullOrEmpty !
(! "
Name" &
)& '
)' (
{ 	
if 
( 
Name 
. 
Trim 
( 
) 
. 
Length "
==# %
$num& '
)' (
{ 
yield 
return 
new  
ValidationResult! 1
(1 2
$str E
,E F
new 
[ 
] 
{ 
nameof "
(" #
Name# '
)' (
}) *
)* +
;+ ,
} 
} 	
if 

( 
! 
string 
. 
IsNullOrEmpty !
(! "
Avatar" (
)( )
)) *
{ 	
if 
( 
! 
Uri 
. 
	TryCreate 
( 
Avatar %
,% &
UriKind' .
.. /
Absolute/ 7
,7 8
out9 <
var= @
uriA D
)D E
||F H
(   
uri   
.   
Scheme   
!=   
$str   %
&&  & (
uri  ) ,
.  , -
Scheme  - 3
!=  4 6
$str  7 >
)  > ?
)  ? @
{!! 
yield"" 
return"" 
new""  
ValidationResult""! 1
(""1 2
$str## >
,##> ?
new$$ 
[$$ 
]$$ 
{$$ 
nameof$$ "
($$" #
Avatar$$# )
)$$) *
}$$+ ,
)$$, -
;$$- .
}%% 
}&& 	
}'' 
}(( ë#
?/usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RegisterRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class 
RegisterRequest 
: 
IValidatableObject 1
{ 
[ 
Required 
( 
ErrorMessage 
= 
$str 0
)0 1
]1 2
[		 
EmailAddress		 
(		 
ErrorMessage		 
=		  
$str		! 7
)		7 8
]		8 9
[

 
	MaxLength

 
(

 
$num

 
,

 
ErrorMessage

  
=

! "
$str

# G
)

G H
]

H I
public 

string 
Email 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
[ 
Required 
( 
ErrorMessage 
= 
$str 3
)3 4
]4 5
[ 
	MinLength 
( 
$num 
, 
ErrorMessage 
=  
$str! N
)N O
]O P
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# J
)J K
]K L
public 

string 
Password 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# F
)F G
]G H
[ 
RegularExpression 
( 
$str /
,/ 0
ErrorMessage1 =
=> ?
$str@ b
)b c
]c d
public 

string 
? 
Name 
{ 
get 
; 
set "
;" #
}$ %
public 

IEnumerable 
< 
ValidationResult '
>' (
Validate) 1
(1 2
ValidationContext2 C
validationContextD U
)U V
{ 
if 

( 
! 
string 
. 
IsNullOrEmpty !
(! "
Password" *
)* +
)+ ,
{ 	
if 
( 
! 
Regex 
. 
IsMatch 
( 
Password '
,' (
$str) N
)N O
)O P
{ 
yield 
return 
new  
ValidationResult! 1
(1 2
$str n
,n o
new 
[ 
] 
{ 
nameof "
(" #
Password# +
)+ ,
}- .
). /
;/ 0
}   
}!! 	
if$$ 

($$ 
!$$ 
string$$ 
.$$ 
IsNullOrEmpty$$ !
($$! "
Email$$" '
)$$' (
&&$$) +
Email$$, 1
.$$1 2
Contains$$2 :
($$: ;
$str$$; >
)$$> ?
)$$? @
{%% 	
var&& 
domain&& 
=&& 
Email&& 
.&& 
Split&& $
(&&$ %
$char&&% (
)&&( )
.&&) *
LastOrDefault&&* 7
(&&7 8
)&&8 9
;&&9 :
if'' 
('' 
!'' 
string'' 
.'' 
IsNullOrEmpty'' %
(''% &
domain''& ,
)'', -
&&''. 0
domain''1 7
.''7 8
Length''8 >
<''? @
$num''A B
)''B C
{(( 
yield)) 
return)) 
new))  
ValidationResult))! 1
())1 2
$str** *
,*** +
new++ 
[++ 
]++ 
{++ 
nameof++ "
(++" #
Email++# (
)++( )
}++* +
)+++ ,
;++, -
},, 
}-- 	
}.. 
}// «
C/usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RefreshTokenRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class 
RefreshTokenRequest  
{ 
[ 
Required 
( 
ErrorMessage 
= 
$str 8
)8 9
]9 :
public 

string 
RefreshToken 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
}		 û
</usr/src/backend/GeoQuizApi/Models/DTOs/Auth/LoginRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class 
LoginRequest 
{		 
[ 
Required 
( 
ErrorMessage 
= 
$str 0
)0 1
]1 2
[ 
EmailAddress 
( 
ErrorMessage 
=  
$str! 7
)7 8
]8 9
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# G
)G H
]H I
public 

string 
Email 
{ 
get 
; 
set "
;" #
}$ %
=& '
string( .
.. /
Empty/ 4
;4 5
[ 
Required 
( 
ErrorMessage 
= 
$str 3
)3 4
]4 5
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# J
)J K
]K L
public 

string 
Password 
{ 
get  
;  !
set" %
;% &
}' (
=) *
string+ 1
.1 2
Empty2 7
;7 8
} Û
E/usr/src/backend/GeoQuizApi/Models/DTOs/Auth/ChangePasswordRequest.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class !
ChangePasswordRequest "
:# $
IValidatableObject% 7
{ 
[ 
Required 
( 
ErrorMessage 
= 
$str ;
); <
]< =
[		 
	MaxLength		 
(		 
$num		 
,		 
ErrorMessage		  
=		! "
$str		# R
)		R S
]		S T
public

 

string

 
CurrentPassword

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
=

0 1
string

2 8
.

8 9
Empty

9 >
;

> ?
[ 
Required 
( 
ErrorMessage 
= 
$str 7
)7 8
]8 9
[ 
	MinLength 
( 
$num 
, 
ErrorMessage 
=  
$str! R
)R S
]S T
[ 
	MaxLength 
( 
$num 
, 
ErrorMessage  
=! "
$str# N
)N O
]O P
public 

string 
NewPassword 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 

IEnumerable 
< 
ValidationResult '
>' (
Validate) 1
(1 2
ValidationContext2 C
validationContextD U
)U V
{ 
if 

( 
! 
string 
. 
IsNullOrEmpty !
(! "
NewPassword" -
)- .
). /
{ 	
if 
( 
! 
Regex 
. 
IsMatch 
( 
NewPassword *
,* +
$str, Q
)Q R
)R S
{ 
yield 
return 
new  
ValidationResult! 1
(1 2
$str r
,r s
new 
[ 
] 
{ 
nameof "
(" #
NewPassword# .
). /
}0 1
)1 2
;2 3
} 
} 	
if 

( 
! 
string 
. 
IsNullOrEmpty !
(! "
CurrentPassword" 1
)1 2
&&3 5
!6 7
string7 =
.= >
IsNullOrEmpty> K
(K L
NewPasswordL W
)W X
&&Y [
CurrentPassword   
==   
NewPassword   *
)  * +
{!! 	
yield"" 
return"" 
new"" 
ValidationResult"" -
(""- .
$str## F
,##F G
new$$ 
[$$ 
]$$ 
{$$ 
nameof$$ 
($$ 
NewPassword$$ *
)$$* +
}$$, -
)$$- .
;$$. /
}%% 	
}&& 
}'' ë	
</usr/src/backend/GeoQuizApi/Models/DTOs/Auth/AuthResponse.cs
	namespace 	

GeoQuizApi
 
. 
Models 
. 
DTOs  
.  !
Auth! %
;% &
public 
class 
AuthResponse 
{ 
public 

UserDto 
User 
{ 
get 
; 
set "
;" #
}$ %
=& '
null( ,
!, -
;- .
public 

string 
AccessToken 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
string. 4
.4 5
Empty5 :
;: ;
public 

string 
RefreshToken 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
string/ 5
.5 6
Empty6 ;
;; <
public 

int 
	ExpiresIn 
{ 
get 
; 
set  #
;# $
}% &
} Ÿp
F/usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs
	namespace 	

GeoQuizApi
 
. 

Migrations 
{ 
public		 

partial		 
class		 
InitialCreate		 &
:		' (
	Migration		) 2
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
Guid& *
>* +
(+ ,
type, 0
:0 1
$str2 8
,8 9
nullable: B
:B C
falseD I
)I J
,J K
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 =
,= >
	maxLength? H
:H I
$numJ M
,M N
nullableO W
:W X
falseY ^
)^ _
,_ `
PasswordHash  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
type8 <
:< =
$str> D
,D E
nullableF N
:N O
falseP U
)U V
,V W
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 <
,< =
	maxLength> G
:G H
$numI L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
Avatar 
= 
table "
." #
Column# )
<) *
string* 0
>0 1
(1 2
type2 6
:6 7
$str8 >
,> ?
	maxLength@ I
:I J
$numK N
,N O
nullableP X
:X Y
trueZ ^
)^ _
,_ `
Provider 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: @
,@ A
	maxLengthB K
:K L
$numM O
,O P
nullableQ Y
:Y Z
false[ `
,` a
defaultValueb n
:n o
$strp w
)w x
,x y
	CreatedAt 
= 
table  %
.% &
Column& ,
<, -
DateTime- 5
>5 6
(6 7
type7 ;
:; <
$str= C
,C D
nullableE M
:M N
falseO T
)T U
,U V
LastLoginAt 
=  !
table" '
.' (
Column( .
<. /
DateTime/ 7
>7 8
(8 9
type9 =
:= >
$str? E
,E F
nullableG O
:O P
trueQ U
)U V
,V W
PreferencesJson #
=$ %
table& +
.+ ,
Column, 2
<2 3
string3 9
>9 :
(: ;
type; ?
:? @
$strA G
,G H
nullableI Q
:Q R
trueS W
)W X
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
Id8 :
): ;
;; <
} 
) 
; 
migrationBuilder!! 
.!! 
CreateTable!! (
(!!( )
name"" 
:"" 
$str"" $
,""$ %
columns## 
:## 
table## 
=>## !
new##" %
{$$ 
Id%% 
=%% 
table%% 
.%% 
Column%% %
<%%% &
Guid%%& *
>%%* +
(%%+ ,
type%%, 0
:%%0 1
$str%%2 8
,%%8 9
nullable%%: B
:%%B C
false%%D I
)%%I J
,%%J K
UserId&& 
=&& 
table&& "
.&&" #
Column&&# )
<&&) *
Guid&&* .
>&&. /
(&&/ 0
type&&0 4
:&&4 5
$str&&6 <
,&&< =
nullable&&> F
:&&F G
false&&H M
)&&M N
,&&N O
GameType'' 
='' 
table'' $
.''$ %
Column''% +
<''+ ,
string'', 2
>''2 3
(''3 4
type''4 8
:''8 9
$str'': @
,''@ A
	maxLength''B K
:''K L
$num''M O
,''O P
nullable''Q Y
:''Y Z
false''[ `
)''` a
,''a b
CorrectAnswers(( "
=((# $
table((% *
.((* +
Column((+ 1
<((1 2
int((2 5
>((5 6
(((6 7
type((7 ;
:((; <
$str((= F
,((F G
nullable((H P
:((P Q
false((R W
)((W X
,((X Y
WrongAnswers))  
=))! "
table))# (
.))( )
Column))) /
<))/ 0
int))0 3
>))3 4
())4 5
type))5 9
:))9 :
$str)); D
,))D E
nullable))F N
:))N O
false))P U
)))U V
,))V W
SessionStartTime** $
=**% &
table**' ,
.**, -
Column**- 3
<**3 4
DateTime**4 <
>**< =
(**= >
type**> B
:**B C
$str**D J
,**J K
nullable**L T
:**T U
false**V [
)**[ \
,**\ ]
SessionEndTime++ "
=++# $
table++% *
.++* +
Column+++ 1
<++1 2
DateTime++2 :
>++: ;
(++; <
type++< @
:++@ A
$str++B H
,++H I
nullable++J R
:++R S
true++T X
)++X Y
,++Y Z
SessionDurationMs,, %
=,,& '
table,,( -
.,,- .
Column,,. 4
<,,4 5
int,,5 8
>,,8 9
(,,9 :
type,,: >
:,,> ?
$str,,@ I
,,,I J
nullable,,K S
:,,S T
true,,U Y
),,Y Z
,,,Z [
	CreatedAt-- 
=-- 
table--  %
.--% &
Column--& ,
<--, -
DateTime--- 5
>--5 6
(--6 7
type--7 ;
:--; <
$str--= C
,--C D
nullable--E M
:--M N
false--O T
)--T U
}.. 
,.. 
constraints// 
:// 
table// "
=>//# %
{00 
table11 
.11 

PrimaryKey11 $
(11$ %
$str11% 6
,116 7
x118 9
=>11: <
x11= >
.11> ?
Id11? A
)11A B
;11B C
table22 
.22 

ForeignKey22 $
(22$ %
name33 
:33 
$str33 <
,33< =
column44 
:44 
x44  !
=>44" $
x44% &
.44& '
UserId44' -
,44- .
principalTable55 &
:55& '
$str55( /
,55/ 0
principalColumn66 '
:66' (
$str66) -
,66- .
onDelete77  
:77  !
ReferentialAction77" 3
.773 4
Cascade774 ;
)77; <
;77< =
}88 
)88 
;88 
migrationBuilder:: 
.:: 
CreateTable:: (
(::( )
name;; 
:;; 
$str;; %
,;;% &
columns<< 
:<< 
table<< 
=><< !
new<<" %
{== 
Id>> 
=>> 
table>> 
.>> 
Column>> %
<>>% &
Guid>>& *
>>>* +
(>>+ ,
type>>, 0
:>>0 1
$str>>2 8
,>>8 9
nullable>>: B
:>>B C
false>>D I
)>>I J
,>>J K
Token?? 
=?? 
table?? !
.??! "
Column??" (
<??( )
string??) /
>??/ 0
(??0 1
type??1 5
:??5 6
$str??7 =
,??= >
	maxLength??? H
:??H I
$num??J M
,??M N
nullable??O W
:??W X
false??Y ^
)??^ _
,??_ `
UserId@@ 
=@@ 
table@@ "
.@@" #
Column@@# )
<@@) *
Guid@@* .
>@@. /
(@@/ 0
type@@0 4
:@@4 5
$str@@6 <
,@@< =
nullable@@> F
:@@F G
false@@H M
)@@M N
,@@N O
	ExpiresAtAA 
=AA 
tableAA  %
.AA% &
ColumnAA& ,
<AA, -
DateTimeAA- 5
>AA5 6
(AA6 7
typeAA7 ;
:AA; <
$strAA= C
,AAC D
nullableAAE M
:AAM N
falseAAO T
)AAT U
,AAU V
	CreatedAtBB 
=BB 
tableBB  %
.BB% &
ColumnBB& ,
<BB, -
DateTimeBB- 5
>BB5 6
(BB6 7
typeBB7 ;
:BB; <
$strBB= C
,BBC D
nullableBBE M
:BBM N
falseBBO T
)BBT U
,BBU V
	IsRevokedCC 
=CC 
tableCC  %
.CC% &
ColumnCC& ,
<CC, -
boolCC- 1
>CC1 2
(CC2 3
typeCC3 7
:CC7 8
$strCC9 B
,CCB C
nullableCCD L
:CCL M
falseCCN S
,CCS T
defaultValueCCU a
:CCa b
falseCCc h
)CCh i
}DD 
,DD 
constraintsEE 
:EE 
tableEE "
=>EE# %
{FF 
tableGG 
.GG 

PrimaryKeyGG $
(GG$ %
$strGG% 7
,GG7 8
xGG9 :
=>GG; =
xGG> ?
.GG? @
IdGG@ B
)GGB C
;GGC D
tableHH 
.HH 

ForeignKeyHH $
(HH$ %
nameII 
:II 
$strII =
,II= >
columnJJ 
:JJ 
xJJ  !
=>JJ" $
xJJ% &
.JJ& '
UserIdJJ' -
,JJ- .
principalTableKK &
:KK& '
$strKK( /
,KK/ 0
principalColumnLL '
:LL' (
$strLL) -
,LL- .
onDeleteMM  
:MM  !
ReferentialActionMM" 3
.MM3 4
CascadeMM4 ;
)MM; <
;MM< =
}NN 
)NN 
;NN 
migrationBuilderPP 
.PP 
CreateIndexPP (
(PP( )
nameQQ 
:QQ 
$strQQ 1
,QQ1 2
tableRR 
:RR 
$strRR %
,RR% &
columnSS 
:SS 
$strSS #
)SS# $
;SS$ %
migrationBuilderUU 
.UU 
CreateIndexUU (
(UU( )
nameVV 
:VV 
$strVV 0
,VV0 1
tableWW 
:WW 
$strWW %
,WW% &
columnXX 
:XX 
$strXX "
)XX" #
;XX# $
migrationBuilderZZ 
.ZZ 
CreateIndexZZ (
(ZZ( )
name[[ 
:[[ 
$str[[ .
,[[. /
table\\ 
:\\ 
$str\\ %
,\\% &
column]] 
:]] 
$str]]  
)]]  !
;]]! "
migrationBuilder__ 
.__ 
CreateIndex__ (
(__( )
name`` 
:`` 
$str`` 2
,``2 3
tableaa 
:aa 
$straa &
,aa& '
columnbb 
:bb 
$strbb #
)bb# $
;bb$ %
migrationBuilderdd 
.dd 
CreateIndexdd (
(dd( )
nameee 
:ee 
$stree .
,ee. /
tableff 
:ff 
$strff &
,ff& '
columngg 
:gg 
$strgg 
,gg  
uniquehh 
:hh 
truehh 
)hh 
;hh 
migrationBuilderjj 
.jj 
CreateIndexjj (
(jj( )
namekk 
:kk 
$strkk /
,kk/ 0
tablell 
:ll 
$strll &
,ll& '
columnmm 
:mm 
$strmm  
)mm  !
;mm! "
migrationBuilderoo 
.oo 
CreateIndexoo (
(oo( )
namepp 
:pp 
$strpp &
,pp& '
tableqq 
:qq 
$strqq 
,qq 
columnrr 
:rr 
$strrr 
,rr  
uniquess 
:ss 
truess 
)ss 
;ss 
}tt 	
	protectedww 
overrideww 
voidww 
Downww  $
(ww$ %
MigrationBuilderww% 5
migrationBuilderww6 F
)wwF G
{xx 	
migrationBuilderyy 
.yy 
	DropTableyy &
(yy& '
namezz 
:zz 
$strzz $
)zz$ %
;zz% &
migrationBuilder|| 
.|| 
	DropTable|| &
(||& '
name}} 
:}} 
$str}} %
)}}% &
;}}& '
migrationBuilder 
. 
	DropTable &
(& '
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
}
ÇÇ 
}ÉÉ ¶
C/usr/src/backend/GeoQuizApi/Middleware/SecurityHeadersMiddleware.cs
	namespace 	

GeoQuizApi
 
. 

Middleware 
;  
public 
class %
SecurityHeadersMiddleware &
{ 
private 
readonly 
RequestDelegate $
_next% *
;* +
private		 
readonly		 
ILogger		 
<		 %
SecurityHeadersMiddleware		 6
>		6 7
_logger		8 ?
;		? @
public 
%
SecurityHeadersMiddleware $
($ %
RequestDelegate 
next 
, 
ILogger 
< %
SecurityHeadersMiddleware )
>) *
logger+ 1
)1 2
{ 
_next 
= 
next 
; 
_logger 
= 
logger 
; 
} 
public 

async 
Task 
InvokeAsync !
(! "
HttpContext" -
context. 5
)5 6
{ 
AddSecurityHeaders 
( 
context "
)" #
;# $
await 
_next 
( 
context 
) 
; 
} 
private 
void 
AddSecurityHeaders #
(# $
HttpContext$ /
context0 7
)7 8
{ 
var 
headers 
= 
context 
. 
Response &
.& '
Headers' .
;. /
var 
path 
= 
context 
. 
Request "
." #
Path# '
.' (
Value( -
?- .
.. /
ToLowerInvariant/ ?
(? @
)@ A
;A B
var!! 
isScalarEndpoint!! 
=!! 
path!! #
?!!# $
.!!$ %

StartsWith!!% /
(!!/ 0
$str!!0 9
)!!9 :
==!!; =
true!!> B
||!!C E
path!!F J
?!!J K
.!!K L

StartsWith!!L V
(!!V W
$str!!W a
)!!a b
==!!c e
true!!f j
;!!j k
headers$$ 
.$$ 
Append$$ 
($$ 
$str$$ /
,$$/ 0
$str$$1 :
)$$: ;
;$$; <
headers'' 
.'' 
Append'' 
('' 
$str'' (
,''( )
$str''* 0
)''0 1
;''1 2
headers** 
.** 
Append** 
(** 
$str** )
,**) *
$str**+ :
)**: ;
;**; <
headers-- 
.-- 
Append-- 
(-- 
$str-- (
,--( )
$str--* K
)--K L
;--L M
if00 

(00 
isScalarEndpoint00 
)00 
{11 	
headers33 
.33 
Append33 
(33 
$str33 4
,334 5
$str44 &
+44' (
$str55 C
+55D E
$str66 4
+665 6
$str77 (
+77) *
$str88 B
)88B C
;88C D
}99 	
else:: 
{;; 	
headers== 
.== 
Append== 
(== 
$str== 4
,==4 5
$str==6 c
)==c d
;==d e
}>> 	
headersAA 
.AA 
AppendAA 
(AA 
$strAA :
,AA: ;
$strAA< B
)AAB C
;AAC D
headersDD 
.DD 
RemoveDD 
(DD 
$strDD 
)DD  
;DD  !
_loggerFF 
.FF 
LogDebugFF 
(FF 
$strFF N
,FFN O
pathFFP T
)FFT U
;FFU V
}GG 
}HH ãQ
H/usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs
	namespace 	

GeoQuizApi
 
. 

Middleware 
;  
public 
class *
Rfc9457ErrorHandlingMiddleware +
{ 
private 
readonly 
RequestDelegate $
_next% *
;* +
private 
readonly 
ILogger 
< *
Rfc9457ErrorHandlingMiddleware ;
>; <
_logger= D
;D E
public 
*
Rfc9457ErrorHandlingMiddleware )
() *
RequestDelegate 
next 
, 
ILogger 
< *
Rfc9457ErrorHandlingMiddleware .
>. /
logger0 6
)6 7
{ 
_next 
= 
next 
; 
_logger 
= 
logger 
; 
} 
public 

async 
Task 
InvokeAsync !
(! "
HttpContext" -
context. 5
)5 6
{ 
try 
{ 	
await 
_next 
( 
context 
)  
;  !
} 	
catch 
( 
	Exception 
ex 
) 
{   	
await!!  
HandleExceptionAsync!! &
(!!& '
context!!' .
,!!. /
ex!!0 2
)!!2 3
;!!3 4
}"" 	
}## 
private%% 
async%% 
Task%%  
HandleExceptionAsync%% +
(%%+ ,
HttpContext%%, 7
context%%8 ?
,%%? @
	Exception%%A J
	exception%%K T
)%%T U
{&& 
LogException(( 
((( 
	exception(( 
,(( 
context((  '
)((' (
;((( )
var++ !
problemDetailsService++ !
=++" #
context++$ +
.+++ ,
RequestServices++, ;
.++; <
GetRequiredService++< N
<++N O"
IProblemDetailsService++O e
>++e f
(++f g
)++g h
;++h i
var,, '
customProblemDetailsService,, '
=,,( )
context,,* 1
.,,1 2
RequestServices,,2 A
.,,A B
GetRequiredService,,B T
<,,T U(
ICustomProblemDetailsService,,U q
>,,q r
(,,r s
),,s t
;,,t u
ProblemDetails// 
problemDetails// %
=//& '
	exception//( 1
switch//2 8
{00 	
ValidationException11 
validationEx11  ,
=>11- /'
customProblemDetailsService110 K
.11K L*
CreateValidationProblemDetails11L j
(11j k
validationEx11k w
,11w x
context	11y Ä
)
11Ä Å
,
11Å Ç
_22 
=>22 '
customProblemDetailsService22 ,
.22, - 
CreateProblemDetails22- A
(22A B
	exception22B K
,22K L
context22M T
)22T U
}33 	
;33	 

context66 
.66 
Response66 
.66 

StatusCode66 #
=66$ %
problemDetails66& 4
.664 5
Status665 ;
??66< >
$num66? B
;66B C
if99 

(99 
	exception99 
is99 
ValidationException99 ,
)99, -
{:: 	
await;; '
WriteProblemDetailsManually;; -
(;;- .
context;;. 5
,;;5 6
problemDetails;;7 E
);;E F
;;;F G
return<< 
;<< 
}== 	
var@@ !
problemDetailsContext@@ !
=@@" #
new@@$ '!
ProblemDetailsContext@@( =
{AA 	
HttpContextBB 
=BB 
contextBB !
,BB! "
ProblemDetailsCC 
=CC 
problemDetailsCC +
}DD 	
;DD	 

ifGG 

(GG 
!GG 
awaitGG !
problemDetailsServiceGG (
.GG( )
TryWriteAsyncGG) 6
(GG6 7!
problemDetailsContextGG7 L
)GGL M
)GGM N
{HH 	
awaitJJ '
WriteProblemDetailsManuallyJJ -
(JJ- .
contextJJ. 5
,JJ5 6
problemDetailsJJ7 E
)JJE F
;JJF G
}KK 	
}LL 
privateTT 
voidTT 
LogExceptionTT 
(TT 
	ExceptionTT '
	exceptionTT( 1
,TT1 2
HttpContextTT3 >
contextTT? F
)TTF G
{UU 
varVV 
pathVV 
=VV 
contextVV 
.VV 
RequestVV "
.VV" #
PathVV# '
;VV' (
switchXX 
(XX 
	exceptionXX 
)XX 
{YY 	
caseZZ 
ValidationExceptionZZ $
:ZZ$ %
_logger[[ 
.[[ 

LogWarning[[ "
([[" #
	exception[[# ,
,[[, -
$str[[. S
,[[S T
path[[U Y
)[[Y Z
;[[Z [
break\\ 
;\\ 
case^^ '
UnauthorizedAccessException^^ ,
:^^, -
_logger__ 
.__ 

LogWarning__ "
(__" #
	exception__# ,
,__, -
$str__. U
,__U V
path__W [
)__[ \
;__\ ]
break`` 
;`` 
casebb  
KeyNotFoundExceptionbb %
:bb% &
_loggercc 
.cc 

LogWarningcc "
(cc" #
	exceptioncc# ,
,cc, -
$strcc. L
,ccL M
pathccN R
)ccR S
;ccS T
breakdd 
;dd 
caseff %
InvalidOperationExceptionff *
invalidOpExff+ 6
whenff7 ;
invalidOpExff< G
.ffG H
MessageffH O
.ffO P
ContainsffP X
(ffX Y
$strffY i
)ffi j
:ffj k
_loggergg 
.gg 

LogWarninggg "
(gg" #
	exceptiongg# ,
,gg, -
$strgg. H
,ggH I
pathggJ N
)ggN O
;ggO P
breakhh 
;hh 
casejj 
ArgumentExceptionjj "
:jj" #
_loggerkk 
.kk 

LogWarningkk "
(kk" #
	exceptionkk# ,
,kk, -
$strkk. E
,kkE F
pathkkG K
)kkK L
;kkL M
breakll 
;ll 
defaultnn 
:nn 
_loggeroo 
.oo 
LogErroroo  
(oo  !
	exceptionoo! *
,oo* +
$stroo, T
,ooT U
pathooV Z
)ooZ [
;oo[ \
breakpp 
;pp 
}qq 	
}rr 
privatezz 
staticzz 
asynczz 
Taskzz '
WriteProblemDetailsManuallyzz 9
(zz9 :
HttpContextzz: E
contextzzF M
,zzM N
ProblemDetailszzO ]
problemDetailszz^ l
)zzl m
{{{ 
context|| 
.|| 
Response|| 
.|| 
ContentType|| $
=||% &
$str||' A
;||A B
var~~ 
jsonOptions~~ 
=~~ 
new~~ !
JsonSerializerOptions~~ 3
{ 	"
PropertyNamingPolicy
ÄÄ  
=
ÄÄ! "
JsonNamingPolicy
ÄÄ# 3
.
ÄÄ3 4
	CamelCase
ÄÄ4 =
,
ÄÄ= >
WriteIndented
ÅÅ 
=
ÅÅ 
false
ÅÅ !
}
ÇÇ 	
;
ÇÇ	 

if
ÖÖ 

(
ÖÖ 
problemDetails
ÖÖ 
is
ÖÖ &
ValidationProblemDetails
ÖÖ 6&
validationProblemDetails
ÖÖ7 O
)
ÖÖO P
{
ÜÜ 	
var
àà 
responseObject
àà 
=
àà  
new
àà! $
{
ââ 
type
ää 
=
ää &
validationProblemDetails
ää /
.
ää/ 0
Type
ää0 4
,
ää4 5
title
ãã 
=
ãã &
validationProblemDetails
ãã 0
.
ãã0 1
Title
ãã1 6
,
ãã6 7
status
åå 
=
åå &
validationProblemDetails
åå 1
.
åå1 2
Status
åå2 8
,
åå8 9
detail
çç 
=
çç &
validationProblemDetails
çç 1
.
çç1 2
Detail
çç2 8
,
çç8 9
instance
éé 
=
éé &
validationProblemDetails
éé 3
.
éé3 4
Instance
éé4 <
,
éé< =
errors
èè 
=
èè &
validationProblemDetails
èè 1
.
èè1 2
Errors
èè2 8
,
èè8 9
	timestamp
êê 
=
êê &
validationProblemDetails
êê 4
.
êê4 5

Extensions
êê5 ?
.
êê? @
ContainsKey
êê@ K
(
êêK L
$str
êêL W
)
êêW X
?
êêY Z&
validationProblemDetails
êê[ s
.
êês t

Extensions
êêt ~
[
êê~ 
$strêê ä
]êêä ã
:êêå ç
nullêêé í
,êêí ì
traceId
ëë 
=
ëë &
validationProblemDetails
ëë 2
.
ëë2 3

Extensions
ëë3 =
.
ëë= >
ContainsKey
ëë> I
(
ëëI J
$str
ëëJ S
)
ëëS T
?
ëëU V&
validationProblemDetails
ëëW o
.
ëëo p

Extensions
ëëp z
[
ëëz {
$strëë{ Ñ
]ëëÑ Ö
:ëëÜ á
nullëëà å
}
íí 
;
íí 
await
îî 
context
îî 
.
îî 
Response
îî "
.
îî" #
WriteAsJsonAsync
îî# 3
(
îî3 4
responseObject
îî4 B
,
îîB C
jsonOptions
îîD O
)
îîO P
;
îîP Q
}
ïï 	
else
ññ 
{
óó 	
await
òò 
context
òò 
.
òò 
Response
òò "
.
òò" #
WriteAsJsonAsync
òò# 3
(
òò3 4
problemDetails
òò4 B
,
òòB C
jsonOptions
òòD O
)
òòO P
;
òòP Q
}
ôô 	
}
öö 
}õõ …â
B/usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs
	namespace 	

GeoQuizApi
 
. 

Middleware 
;  
public 
class $
RequestLoggingMiddleware %
{ 
private 
readonly 
RequestDelegate $
_next% *
;* +
private		 
readonly		 
ILogger		 
<		 $
RequestLoggingMiddleware		 5
>		5 6
_logger		7 >
;		> ?
public 
$
RequestLoggingMiddleware #
(# $
RequestDelegate$ 3
next4 8
,8 9
ILogger: A
<A B$
RequestLoggingMiddlewareB Z
>Z [
logger\ b
)b c
{ 
_next 
= 
next 
; 
_logger 
= 
logger 
; 
} 
public 

async 
Task 
InvokeAsync !
(! "
HttpContext" -
context. 5
)5 6
{ 
var 
	stopwatch 
= 
	Stopwatch !
.! "
StartNew" *
(* +
)+ ,
;, -
var 
	requestId 
= 
Guid 
. 
NewGuid $
($ %
)% &
.& '
ToString' /
(/ 0
$str0 3
)3 4
[4 5
..5 7
$num7 8
]8 9
;9 :
context 
. 
Items 
[ 
$str !
]! "
=# $
	requestId% .
;. /
await 
LogRequestAsync 
( 
context %
,% &
	requestId' 0
)0 1
;1 2
var 
path 
= 
context 
. 
Request "
." #
Path# '
.' (
Value( -
?- .
.. /
ToLowerInvariant/ ?
(? @
)@ A
;A B
var 
isScalarEndpoint 
= 
path #
?# $
.$ %

StartsWith% /
(/ 0
$str0 9
)9 :
==; =
true> B
||C E
pathF J
?J K
.K L

StartsWithL V
(V W
$strW a
)a b
==c e
truef j
;j k
if   

(   
isScalarEndpoint   
)   
{!! 	
try## 
{$$ 
await%% 
_next%% 
(%% 
context%% #
)%%# $
;%%$ %
}&& 
finally'' 
{(( 
	stopwatch)) 
.)) 
Stop)) 
()) 
)))  
;))  !
LogSimpleResponse** !
(**! "
context**" )
,**) *
	requestId**+ 4
,**4 5
	stopwatch**6 ?
.**? @
ElapsedMilliseconds**@ S
)**S T
;**T U
}++ 
},, 	
else-- 
{.. 	
var00 
originalBodyStream00 "
=00# $
context00% ,
.00, -
Response00- 5
.005 6
Body006 :
;00: ;
using11 
var11 
responseBody11 "
=11# $
new11% (
MemoryStream11) 5
(115 6
)116 7
;117 8
context22 
.22 
Response22 
.22 
Body22 !
=22" #
responseBody22$ 0
;220 1
try44 
{55 
await66 
_next66 
(66 
context66 #
)66# $
;66$ %
}77 
finally88 
{99 
	stopwatch:: 
.:: 
Stop:: 
(:: 
)::  
;::  !
await== 
LogResponseAsync== &
(==& '
context==' .
,==. /
	requestId==0 9
,==9 :
	stopwatch==; D
.==D E
ElapsedMilliseconds==E X
)==X Y
;==Y Z
await@@ 
responseBody@@ "
.@@" #
CopyToAsync@@# .
(@@. /
originalBodyStream@@/ A
)@@A B
;@@B C
}AA 
}BB 	
}CC 
privateEE 
asyncEE 
TaskEE 
LogRequestAsyncEE &
(EE& '
HttpContextEE' 2
contextEE3 :
,EE: ;
stringEE< B
	requestIdEEC L
)EEL M
{FF 
varGG 
requestGG 
=GG 
contextGG 
.GG 
RequestGG %
;GG% &
varJJ 
shouldLogBodyJJ 
=JJ  
ShouldLogRequestBodyJJ 0
(JJ0 1
requestJJ1 8
)JJ8 9
;JJ9 :
stringKK 
?KK 
requestBodyKK 
=KK 
nullKK "
;KK" #
ifMM 

(MM 
shouldLogBodyMM 
&&MM 
requestMM $
.MM$ %
ContentLengthMM% 2
>MM3 4
$numMM5 6
)MM6 7
{NN 	
requestOO 
.OO 
EnableBufferingOO #
(OO# $
)OO$ %
;OO% &
varPP 
bufferPP 
=PP 
newPP 
bytePP !
[PP! "
ConvertPP" )
.PP) *
ToInt32PP* 1
(PP1 2
requestPP2 9
.PP9 :
ContentLengthPP: G
)PPG H
]PPH I
;PPI J
awaitQQ 
requestQQ 
.QQ 
BodyQQ 
.QQ 
ReadExactlyAsyncQQ /
(QQ/ 0
bufferQQ0 6
,QQ6 7
$numQQ8 9
,QQ9 :
bufferQQ; A
.QQA B
LengthQQB H
)QQH I
;QQI J
requestBodyRR 
=RR 
EncodingRR "
.RR" #
UTF8RR# '
.RR' (
	GetStringRR( 1
(RR1 2
bufferRR2 8
)RR8 9
;RR9 :
requestSS 
.SS 
BodySS 
.SS 
PositionSS !
=SS" #
$numSS$ %
;SS% &
requestBodyVV 
=VV 
MaskSensitiveDataVV +
(VV+ ,
requestBodyVV, 7
)VV7 8
;VV8 9
}WW 	
_loggerYY 
.YY 
LogInformationYY 
(YY 
$str	ZZ ¨
,
ZZ¨ ≠
request[[ 
.[[ 
Method[[ 
,[[ 
request\\ 
.\\ 
Path\\ 
+\\ 
request\\ "
.\\" #
QueryString\\# .
,\\. /
	requestId]] 
,]] 
request^^ 
.^^ 
Headers^^ 
.^^ 
	UserAgent^^ %
.^^% &
ToString^^& .
(^^. /
)^^/ 0
,^^0 1
GetClientIpAddress__ 
(__ 
context__ &
)__& '
,__' (
request`` 
.`` 
ContentType`` 
,``  
requestaa 
.aa 
ContentLengthaa !
)aa! "
;aa" #
ifcc 

(cc 
!cc 
stringcc 
.cc 
IsNullOrEmptycc !
(cc! "
requestBodycc" -
)cc- .
)cc. /
{dd 	
_loggeree 
.ee 
LogDebugee 
(ee 
$stree J
,eeJ K
	requestIdeeL U
,eeU V
requestBodyeeW b
)eeb c
;eec d
}ff 	
}gg 
privateii 
asyncii 
Taskii 
LogResponseAsyncii '
(ii' (
HttpContextii( 3
contextii4 ;
,ii; <
stringii= C
	requestIdiiD M
,iiM N
longiiO S
	elapsedMsiiT ]
)ii] ^
{jj 
varkk 
responsekk 
=kk 
contextkk 
.kk 
Responsekk '
;kk' (
_loggermm 
.mm 
LogInformationmm 
(mm 
$str	nn ≤
,
nn≤ ≥
contextoo 
.oo 
Requestoo 
.oo 
Methodoo "
,oo" #
contextpp 
.pp 
Requestpp 
.pp 
Pathpp  
+pp! "
contextpp# *
.pp* +
Requestpp+ 2
.pp2 3
QueryStringpp3 >
,pp> ?
	requestIdqq 
,qq 
responserr 
.rr 

StatusCoderr 
,rr  
	elapsedMsss 
,ss 
responsett 
.tt 
ContentTypett  
,tt  !
responseuu 
.uu 
ContentLengthuu "
)uu" #
;uu# $
ifxx 

(xx 
responsexx 
.xx 

StatusCodexx 
>=xx  "
$numxx# &
)xx& '
{yy 	
responsezz 
.zz 
Bodyzz 
.zz 
Seekzz 
(zz 
$numzz  
,zz  !

SeekOriginzz" ,
.zz, -
Beginzz- 2
)zz2 3
;zz3 4
var{{ 
responseBody{{ 
={{ 
await{{ $
new{{% (
StreamReader{{) 5
({{5 6
response{{6 >
.{{> ?
Body{{? C
){{C D
.{{D E
ReadToEndAsync{{E S
({{S T
){{T U
;{{U V
response|| 
.|| 
Body|| 
.|| 
Seek|| 
(|| 
$num||  
,||  !

SeekOrigin||" ,
.||, -
Begin||- 2
)||2 3
;||3 4
if~~ 
(~~ 
!~~ 
string~~ 
.~~ 
IsNullOrEmpty~~ %
(~~% &
responseBody~~& 2
)~~2 3
)~~3 4
{ 
_logger
ÄÄ 
.
ÄÄ 

LogWarning
ÄÄ "
(
ÄÄ" #
$str
ÄÄ# S
,
ÄÄS T
	requestId
ÄÄU ^
,
ÄÄ^ _
responseBody
ÄÄ` l
)
ÄÄl m
;
ÄÄm n
}
ÅÅ 
}
ÇÇ 	
}
ÉÉ 
private
ÖÖ 
static
ÖÖ 
bool
ÖÖ "
ShouldLogRequestBody
ÖÖ ,
(
ÖÖ, -
HttpRequest
ÖÖ- 8
request
ÖÖ9 @
)
ÖÖ@ A
{
ÜÜ 
var
àà 
path
àà 
=
àà 
request
àà 
.
àà 
Path
àà 
.
àà  
Value
àà  %
?
àà% &
.
àà& '
ToLowerInvariant
àà' 7
(
àà7 8
)
àà8 9
??
àà: <
string
àà= C
.
ààC D
Empty
ààD I
;
ààI J
if
ãã 

(
ãã 
request
ãã 
.
ãã 
ContentType
ãã 
?
ãã  
.
ãã  !
Contains
ãã! )
(
ãã) *
$str
ãã* ?
)
ãã? @
==
ããA C
true
ããD H
||
ããI K
request
åå 
.
åå 
ContentType
åå 
?
åå  
.
åå  !
Contains
åå! )
(
åå) *
$str
åå* D
)
ååD E
==
ååF H
true
ååI M
||
ååN P
request
çç 
.
çç 
ContentLength
çç !
>
çç" #
$num
çç$ )
)
çç) *
{
éé 	
return
èè 
false
èè 
;
èè 
}
êê 	
if
ìì 

(
ìì 
path
ìì 
.
ìì 
Contains
ìì 
(
ìì 
$str
ìì "
)
ìì" #
||
ìì$ &
path
ìì' +
.
ìì+ ,
Contains
ìì, 4
(
ìì4 5
$str
ìì5 ;
)
ìì; <
)
ìì< =
{
îî 	
return
ïï 
false
ïï 
;
ïï 
}
ññ 	
return
òò 
request
òò 
.
òò 
ContentType
òò "
?
òò" #
.
òò# $
Contains
òò$ ,
(
òò, -
$str
òò- ?
)
òò? @
==
òòA C
true
òòD H
||
òòI K
request
ôô 
.
ôô 
ContentType
ôô "
?
ôô" #
.
ôô# $
Contains
ôô$ ,
(
ôô, -
$str
ôô- P
)
ôôP Q
==
ôôR T
true
ôôU Y
;
ôôY Z
}
öö 
private
úú 
static
úú 
string
úú 
MaskSensitiveData
úú +
(
úú+ ,
string
úú, 2
requestBody
úú3 >
)
úú> ?
{
ùù 
if
ûû 

(
ûû 
string
ûû 
.
ûû 
IsNullOrEmpty
ûû  
(
ûû  !
requestBody
ûû! ,
)
ûû, -
)
ûû- .
return
üü 
requestBody
üü 
;
üü 
var
¢¢ 
sensitiveFields
¢¢ 
=
¢¢ 
new
¢¢ !
[
¢¢! "
]
¢¢" #
{
¢¢$ %
$str
¢¢& 0
,
¢¢0 1
$str
¢¢2 C
,
¢¢C D
$str
¢¢E R
,
¢¢R S
$str
¢¢T e
,
¢¢e f
$str
¢¢g n
,
¢¢n o
$str
¢¢p ~
}¢¢ Ä
;¢¢Ä Å
foreach
§§ 
(
§§ 
var
§§ 
field
§§ 
in
§§ 
sensitiveFields
§§ -
)
§§- .
{
•• 	
var
ßß 
pattern
ßß 
=
ßß 
$@"
ßß 
$str
ßß  
{
ßß  !
field
ßß! &
}
ßß& '
$str
ßß' :
"
ßß: ;
;
ßß; <
requestBody
®® 
=
®® 
System
®®  
.
®®  !
Text
®®! %
.
®®% & 
RegularExpressions
®®& 8
.
®®8 9
Regex
®®9 >
.
®®> ?
Replace
®®? F
(
®®F G
requestBody
©© 
,
©© 
pattern
™™ 
,
™™ 
$"
´´ 
$str
´´ "
"
´´" #
,
´´# $
System
¨¨ 
.
¨¨ 
Text
¨¨ 
.
¨¨  
RegularExpressions
¨¨ .
.
¨¨. /
RegexOptions
¨¨/ ;
.
¨¨; <

IgnoreCase
¨¨< F
)
¨¨F G
;
¨¨G H
}
≠≠ 	
return
ØØ 
requestBody
ØØ 
;
ØØ 
}
∞∞ 
private
≤≤ 
void
≤≤ 
LogSimpleResponse
≤≤ "
(
≤≤" #
HttpContext
≤≤# .
context
≤≤/ 6
,
≤≤6 7
string
≤≤8 >
	requestId
≤≤? H
,
≤≤H I
long
≤≤J N
	elapsedMs
≤≤O X
)
≤≤X Y
{
≥≥ 
var
¥¥ 
response
¥¥ 
=
¥¥ 
context
¥¥ 
.
¥¥ 
Response
¥¥ '
;
¥¥' (
_logger
∂∂ 
.
∂∂ 
LogInformation
∂∂ 
(
∂∂ 
$str∑∑ ≤
,∑∑≤ ≥
context
∏∏ 
.
∏∏ 
Request
∏∏ 
.
∏∏ 
Method
∏∏ "
,
∏∏" #
context
ππ 
.
ππ 
Request
ππ 
.
ππ 
Path
ππ  
+
ππ! "
context
ππ# *
.
ππ* +
Request
ππ+ 2
.
ππ2 3
QueryString
ππ3 >
,
ππ> ?
	requestId
∫∫ 
,
∫∫ 
response
ªª 
.
ªª 

StatusCode
ªª 
,
ªª  
	elapsedMs
ºº 
,
ºº 
response
ΩΩ 
.
ΩΩ 
ContentType
ΩΩ  
,
ΩΩ  !
response
ææ 
.
ææ 
ContentLength
ææ "
)
ææ" #
;
ææ# $
}
øø 
private
¡¡ 
static
¡¡ 
string
¡¡  
GetClientIpAddress
¡¡ ,
(
¡¡, -
HttpContext
¡¡- 8
context
¡¡9 @
)
¡¡@ A
{
¬¬ 
var
ƒƒ 
forwardedFor
ƒƒ 
=
ƒƒ 
context
ƒƒ "
.
ƒƒ" #
Request
ƒƒ# *
.
ƒƒ* +
Headers
ƒƒ+ 2
[
ƒƒ2 3
$str
ƒƒ3 D
]
ƒƒD E
.
ƒƒE F
FirstOrDefault
ƒƒF T
(
ƒƒT U
)
ƒƒU V
;
ƒƒV W
if
≈≈ 

(
≈≈ 
!
≈≈ 
string
≈≈ 
.
≈≈ 
IsNullOrEmpty
≈≈ !
(
≈≈! "
forwardedFor
≈≈" .
)
≈≈. /
)
≈≈/ 0
{
∆∆ 	
return
«« 
forwardedFor
«« 
.
««  
Split
««  %
(
««% &
$char
««& )
)
««) *
[
««* +
$num
««+ ,
]
««, -
.
««- .
Trim
««. 2
(
««2 3
)
««3 4
;
««4 5
}
»» 	
var
   
realIp
   
=
   
context
   
.
   
Request
   $
.
  $ %
Headers
  % ,
[
  , -
$str
  - 8
]
  8 9
.
  9 :
FirstOrDefault
  : H
(
  H I
)
  I J
;
  J K
if
ÀÀ 

(
ÀÀ 
!
ÀÀ 
string
ÀÀ 
.
ÀÀ 
IsNullOrEmpty
ÀÀ !
(
ÀÀ! "
realIp
ÀÀ" (
)
ÀÀ( )
)
ÀÀ) *
{
ÃÃ 	
return
ÕÕ 
realIp
ÕÕ 
;
ÕÕ 
}
ŒŒ 	
return
–– 
context
–– 
.
–– 

Connection
–– !
.
––! "
RemoteIpAddress
––" 1
?
––1 2
.
––2 3
ToString
––3 ;
(
––; <
)
––< =
??
––> @
$str
––A J
;
––J K
}
—— 
}““ ¶O
@/usr/src/backend/GeoQuizApi/Middleware/RateLimitingMiddleware.cs
	namespace 	

GeoQuizApi
 
. 

Middleware 
;  
public 
class "
RateLimitingMiddleware #
{		 
private

 
readonly

 
RequestDelegate

 $
_next

% *
;

* +
private 
readonly 
SecuritySettings %
_securitySettings& 7
;7 8
private 
readonly 
ILogger 
< "
RateLimitingMiddleware 3
>3 4
_logger5 <
;< =
private 
static 
readonly  
ConcurrentDictionary 0
<0 1
string1 7
,7 8
ClientRequestInfo9 J
>J K
_clientsL T
=U V
newW Z
(Z [
)[ \
;\ ]
public 
"
RateLimitingMiddleware !
(! "
RequestDelegate 
next 
, 
IOptions 
< 
SecuritySettings !
>! "
securitySettings# 3
,3 4
ILogger 
< "
RateLimitingMiddleware &
>& '
logger( .
). /
{ 
_next 
= 
next 
; 
_securitySettings 
= 
securitySettings ,
., -
Value- 2
;2 3
_logger 
= 
logger 
; 
} 
public 

async 
Task 
InvokeAsync !
(! "
HttpContext" -
context. 5
)5 6
{ 
if 

( 
! 
_securitySettings 
. 
EnableRateLimiting 1
)1 2
{ 	
await 
_next 
( 
context 
)  
;  !
return 
; 
} 	
var!! 
clientId!! 
=!! 
GetClientIdentifier!! *
(!!* +
context!!+ 2
)!!2 3
;!!3 4
var"" 
isAuthEndpoint"" 
="" 
IsAuthEndpoint"" +
(""+ ,
context"", 3
.""3 4
Request""4 ;
.""; <
Path""< @
)""@ A
;""A B
if$$ 

($$ 
IsRateLimited$$ 
($$ 
clientId$$ "
,$$" #
isAuthEndpoint$$$ 2
)$$2 3
)$$3 4
{%% 	
_logger&& 
.&& 

LogWarning&& 
(&& 
$str&& Y
,&&Y Z
clientId'' 
,'' 
context'' !
.''! "
Request''" )
.'') *
Path''* .
)''. /
;''/ 0
context)) 
.)) 
Response)) 
.)) 

StatusCode)) '
=))( )
())* +
int))+ .
))). /
HttpStatusCode))/ =
.))= >
TooManyRequests))> M
;))M N
context** 
.** 
Response** 
.** 
Headers** $
.**$ %
Append**% +
(**+ ,
$str**, 9
,**9 :
$str**; ?
)**? @
;**@ A
await,, 
context,, 
.,, 
Response,, "
.,," #

WriteAsync,,# -
(,,- .
$str,,. \
),,\ ]
;,,] ^
return-- 
;-- 
}.. 	
await00 
_next00 
(00 
context00 
)00 
;00 
}11 
private33 
string33 
GetClientIdentifier33 &
(33& '
HttpContext33' 2
context333 :
)33: ;
{44 
var66 
clientIp66 
=66 
context66 
.66 
Request66 &
.66& '
Headers66' .
[66. /
$str66/ @
]66@ A
.66A B
FirstOrDefault66B P
(66P Q
)66Q R
?66R S
.66S T
Split66T Y
(66Y Z
$char66Z ]
)66] ^
.66^ _
FirstOrDefault66_ m
(66m n
)66n o
?66o p
.66p q
Trim66q u
(66u v
)66v w
??77 
context77  
.77  !
Request77! (
.77( )
Headers77) 0
[770 1
$str771 <
]77< =
.77= >
FirstOrDefault77> L
(77L M
)77M N
??88 
context88  
.88  !

Connection88! +
.88+ ,
RemoteIpAddress88, ;
?88; <
.88< =
ToString88= E
(88E F
)88F G
??99 
$str99 "
;99" #
return;; 
clientIp;; 
;;; 
}<< 
private>> 
bool>> 
IsAuthEndpoint>> 
(>>  

PathString>>  *
path>>+ /
)>>/ 0
{?? 
return@@ 
path@@ 
.@@ 
StartsWithSegments@@ &
(@@& '
$str@@' 2
)@@2 3
;@@3 4
}AA 
privateCC 
boolCC 
IsRateLimitedCC 
(CC 
stringCC %
clientIdCC& .
,CC. /
boolCC0 4
isAuthEndpointCC5 C
)CCC D
{DD 
varEE 
nowEE 
=EE 
DateTimeEE 
.EE 
UtcNowEE !
;EE! "
varFF 
windowStartFF 
=FF 
nowFF 
.FF 

AddMinutesFF (
(FF( )
-FF) *
_securitySettingsFF* ;
.FF; <
	RateLimitFF< E
.FFE F
WindowSizeMinutesFFF W
)FFW X
;FFX Y
varHH 

clientInfoHH 
=HH 
_clientsHH !
.HH! "
AddOrUpdateHH" -
(HH- .
clientIdHH. 6
,HH6 7
newII 
ClientRequestInfoII !
{II" #
RequestsII$ ,
=II- .
newII/ 2
ListII3 7
<II7 8
DateTimeII8 @
>II@ A
{IIB C
nowIID G
}IIH I
}IIJ K
,IIK L
(JJ 
keyJJ 
,JJ 
existingJJ 
)JJ 
=>JJ 
{KK 
existingMM 
.MM 
RequestsMM !
.MM! "
	RemoveAllMM" +
(MM+ ,
rMM, -
=>MM. 0
rMM1 2
<MM3 4
windowStartMM5 @
)MM@ A
;MMA B
existingNN 
.NN 
RequestsNN !
.NN! "
AddNN" %
(NN% &
nowNN& )
)NN) *
;NN* +
returnOO 
existingOO 
;OO  
}PP 
)PP 
;PP 
varRR 
limitRR 
=RR 
isAuthEndpointRR "
?SS 
_securitySettingsSS 
.SS  
	RateLimitSS  )
.SS) *"
AuthEndpointsPerMinuteSS* @
:TT 
_securitySettingsTT 
.TT  
	RateLimitTT  )
.TT) *%
GeneralEndpointsPerMinuteTT* C
;TTC D
returnVV 

clientInfoVV 
.VV 
RequestsVV "
.VV" #
CountVV# (
>VV) *
limitVV+ 0
;VV0 1
}WW 
staticZZ 
"
RateLimitingMiddlewareZZ !
(ZZ! "
)ZZ" #
{[[ 
_]] 	
=]]
 
new]] 
Timer]] 
(]] 
CleanupOldEntries]] '
,]]' (
null]]) -
,]]- .
TimeSpan]]/ 7
.]]7 8
FromMinutes]]8 C
(]]C D
$num]]D E
)]]E F
,]]F G
TimeSpan]]H P
.]]P Q
FromMinutes]]Q \
(]]\ ]
$num]]] ^
)]]^ _
)]]_ `
;]]` a
}^^ 
private`` 
static`` 
void`` 
CleanupOldEntries`` )
(``) *
object``* 0
?``0 1
state``2 7
)``7 8
{aa 
varbb 
cutoffbb 
=bb 
DateTimebb 
.bb 
UtcNowbb $
.bb$ %

AddMinutesbb% /
(bb/ 0
-bb0 1
$numbb1 3
)bb3 4
;bb4 5
varcc 
keysToRemovecc 
=cc 
newcc 
Listcc #
<cc# $
stringcc$ *
>cc* +
(cc+ ,
)cc, -
;cc- .
foreachee 
(ee 
varee 
kvpee 
inee 
_clientsee $
)ee$ %
{ff 	
kvpgg 
.gg 
Valuegg 
.gg 
Requestsgg 
.gg 
	RemoveAllgg (
(gg( )
rgg) *
=>gg+ -
rgg. /
<gg0 1
cutoffgg2 8
)gg8 9
;gg9 :
ifhh 
(hh 
kvphh 
.hh 
Valuehh 
.hh 
Requestshh "
.hh" #
Counthh# (
==hh) +
$numhh, -
)hh- .
{ii 
keysToRemovejj 
.jj 
Addjj  
(jj  !
kvpjj! $
.jj$ %
Keyjj% (
)jj( )
;jj) *
}kk 
}ll 	
foreachnn 
(nn 
varnn 
keynn 
innn 
keysToRemovenn (
)nn( )
{oo 	
_clientspp 
.pp 
	TryRemovepp 
(pp 
keypp "
,pp" #
outpp$ '
_pp( )
)pp) *
;pp* +
}qq 	
}rr 
}ss 
publicuu 
classuu 
ClientRequestInfouu 
{vv 
publicww 

Listww 
<ww 
DateTimeww 
>ww 
Requestsww "
{ww# $
getww% (
;ww( )
setww* -
;ww- .
}ww/ 0
=ww1 2
newww3 6
(ww6 7
)ww7 8
;ww8 9
}xx ÖU
C/usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs
	namespace 	

GeoQuizApi
 
. 

Middleware 
;  
public		 
class		 %
InputValidationMiddleware		 &
{

 
private 
readonly 
RequestDelegate $
_next% *
;* +
private 
readonly 
SecuritySettings %
_securitySettings& 7
;7 8
private 
readonly 
ILogger 
< %
InputValidationMiddleware 6
>6 7
_logger8 ?
;? @
private 
static 
readonly 
Regex !
[! "
]" #
MaliciousPatterns$ 5
=6 7
new8 ;
[; <
]< =
{ 
new 
Regex 
( 
$str .
,. /
RegexOptions0 <
.< =

IgnoreCase= G
|H I
RegexOptionsJ V
.V W
CompiledW _
)_ `
,` a
new 
Regex 
( 
$str  
,  !
RegexOptions" .
.. /

IgnoreCase/ 9
|: ;
RegexOptions< H
.H I
CompiledI Q
)Q R
,R S
new 
Regex 
( 
$str 
, 
RegexOptions  ,
., -

IgnoreCase- 7
|8 9
RegexOptions: F
.F G
CompiledG O
)O P
,P Q
new 
Regex 
( 
$str .
,. /
RegexOptions0 <
.< =

IgnoreCase= G
|H I
RegexOptionsJ V
.V W
CompiledW _
)_ `
,` a
new 
Regex 
( 
$str .
,. /
RegexOptions0 <
.< =

IgnoreCase= G
|H I
RegexOptionsJ V
.V W
CompiledW _
)_ `
,` a
new 
Regex 
( 
$str ,
,, -
RegexOptions. :
.: ;

IgnoreCase; E
|F G
RegexOptionsH T
.T U
CompiledU ]
)] ^
,^ _
new 
Regex 
( 
$str  
,  !
RegexOptions" .
.. /

IgnoreCase/ 9
|: ;
RegexOptions< H
.H I
CompiledI Q
)Q R
,R S
new 
Regex 
( 
$str  
,  !
RegexOptions" .
.. /

IgnoreCase/ 9
|: ;
RegexOptions< H
.H I
CompiledI Q
)Q R
} 
; 
public 
%
InputValidationMiddleware $
($ %
RequestDelegate 
next 
, 
IOptions 
< 
SecuritySettings !
>! "
securitySettings# 3
,3 4
ILogger 
< %
InputValidationMiddleware )
>) *
logger+ 1
)1 2
{   
_next!! 
=!! 
next!! 
;!! 
_securitySettings"" 
="" 
securitySettings"" ,
."", -
Value""- 2
;""2 3
_logger## 
=## 
logger## 
;## 
}$$ 
public&& 

async&& 
Task&& 
InvokeAsync&& !
(&&! "
HttpContext&&" -
context&&. 5
)&&5 6
{'' 
if)) 

()) 
!)) 
_securitySettings)) 
.)) !
EnableInputValidation)) 4
)))4 5
{** 	
await++ 
_next++ 
(++ 
context++ 
)++  
;++  !
return,, 
;,, 
}-- 	
if00 

(00 !
ShouldValidateRequest00 !
(00! "
context00" )
.00) *
Request00* 1
)001 2
)002 3
{11 	
try22 
{33 
context44 
.44 
Request44 
.44  
EnableBuffering44  /
(44/ 0
)440 1
;441 2
using66 
var66 
reader66  
=66! "
new66# &
StreamReader66' 3
(663 4
context664 ;
.66; <
Request66< C
.66C D
Body66D H
,66H I
Encoding66J R
.66R S
UTF866S W
,66W X
	leaveOpen66Y b
:66b c
true66d h
)66h i
;66i j
var77 
body77 
=77 
await77  
reader77! '
.77' (
ReadToEndAsync77( 6
(776 7
)777 8
;778 9
context88 
.88 
Request88 
.88  
Body88  $
.88$ %
Position88% -
=88. /
$num880 1
;881 2
if:: 
(:: 
!:: 
string:: 
.:: 
IsNullOrEmpty:: )
(::) *
body::* .
)::. /
&&::0 2$
ContainsMaliciousContent::3 K
(::K L
body::L P
)::P Q
)::Q R
{;; 
_logger<< 
.<< 

LogWarning<< &
(<<& '
$str<<' c
,<<c d
GetClientIpAddress== *
(==* +
context==+ 2
)==2 3
,==3 4
context==5 <
.==< =
Request=== D
.==D E
Path==E I
,==I J
body==K O
)==O P
;==P Q
context?? 
.?? 
Response?? $
.??$ %

StatusCode??% /
=??0 1
$num??2 5
;??5 6
await@@ 
context@@ !
.@@! "
Response@@" *
.@@* +

WriteAsync@@+ 5
(@@5 6
$str@@6 O
)@@O P
;@@P Q
returnAA 
;AA 
}BB 
}CC 
catchDD 
(DD 
	ExceptionDD 
exDD 
)DD  
{EE 
_loggerFF 
.FF 
LogErrorFF  
(FF  !
exFF! #
,FF# $
$strFF% D
)FFD E
;FFE F
}HH 
}II 	
awaitKK 
_nextKK 
(KK 
contextKK 
)KK 
;KK 
}LL 
privateNN 
staticNN 
boolNN !
ShouldValidateRequestNN -
(NN- .
HttpRequestNN. 9
requestNN: A
)NNA B
{OO 
varPP 
methodPP 
=PP 
requestPP 
.PP 
MethodPP #
.PP# $
ToUpperInvariantPP$ 4
(PP4 5
)PP5 6
;PP6 7
varQQ 
contentTypeQQ 
=QQ 
requestQQ !
.QQ! "
ContentTypeQQ" -
?QQ- .
.QQ. /
ToLowerInvariantQQ/ ?
(QQ? @
)QQ@ A
;QQA B
returnSS 
(SS 
methodSS 
==SS 
$strSS  
||SS! #
methodSS$ *
==SS+ -
$strSS. 3
||SS4 6
methodSS7 =
==SS> @
$strSSA H
)SSH I
&&SSJ L
(TT 
contentTypeTT 
?TT 
.TT 
ContainsTT %
(TT% &
$strTT& 8
)TT8 9
==TT: <
trueTT= A
||TTB D
contentTypeUU 
?UU 
.UU 
ContainsUU %
(UU% &
$strUU& I
)UUI J
==UUK M
trueUUN R
)UUR S
;UUS T
}VV 
privateXX 
staticXX 
boolXX $
ContainsMaliciousContentXX 0
(XX0 1
stringXX1 7
inputXX8 =
)XX= >
{YY 
ifZZ 

(ZZ 
stringZZ 
.ZZ 
IsNullOrEmptyZZ  
(ZZ  !
inputZZ! &
)ZZ& '
)ZZ' (
return[[ 
false[[ 
;[[ 
foreach^^ 
(^^ 
var^^ 
pattern^^ 
in^^ 
MaliciousPatterns^^  1
)^^1 2
{__ 	
if`` 
(`` 
pattern`` 
.`` 
IsMatch`` 
(``  
input``  %
)``% &
)``& '
returnaa 
trueaa 
;aa 
}bb 	
varee 
sqlPatternsee 
=ee 
newee 
[ee 
]ee 
{ff 	
$strgg 
,gg 
$strgg (
,gg( )
$strgg* 7
,gg7 8
$strgg9 F
,ggF G
$strhh 
,hh 
$strhh !
,hh! "
$strhh# -
,hh- .
$strhh/ 4
,hh4 5
$strhh6 ;
}ii 	
;ii	 

varkk 

lowerInputkk 
=kk 
inputkk 
.kk 
ToLowerInvariantkk /
(kk/ 0
)kk0 1
;kk1 2
foreachll 
(ll 
varll 
patternll 
inll 
sqlPatternsll  +
)ll+ ,
{mm 	
ifnn 
(nn 

lowerInputnn 
.nn 
Containsnn #
(nn# $
patternnn$ +
)nn+ ,
)nn, -
returnoo 
trueoo 
;oo 
}pp 	
returnrr 
falserr 
;rr 
}ss 
privateuu 
staticuu 
stringuu 
GetClientIpAddressuu ,
(uu, -
HttpContextuu- 8
contextuu9 @
)uu@ A
{vv 
returnww 
contextww 
.ww 
Requestww 
.ww 
Headersww &
[ww& '
$strww' 8
]ww8 9
.ww9 :
FirstOrDefaultww: H
(wwH I
)wwI J
?wwJ K
.wwK L
SplitwwL Q
(wwQ R
$charwwR U
)wwU V
.wwV W
FirstOrDefaultwwW e
(wwe f
)wwf g
?wwg h
.wwh i
Trimwwi m
(wwm n
)wwn o
??xx 
contextxx 
.xx 
Requestxx !
.xx! "
Headersxx" )
[xx) *
$strxx* 5
]xx5 6
.xx6 7
FirstOrDefaultxx7 E
(xxE F
)xxF G
??yy 
contextyy 
.yy 

Connectionyy $
.yy$ %
RemoteIpAddressyy% 4
?yy4 5
.yy5 6
ToStringyy6 >
(yy> ?
)yy? @
??zz 
$strzz 
;zz 
}{{ 
}|| ÙN
4/usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs
	namespace 	

GeoQuizApi
 
. 
Data 
; 
public 
class 
GeoQuizDbContext 
: 
	DbContext  )
{ 
public 

GeoQuizDbContext 
( 
DbContextOptions ,
<, -
GeoQuizDbContext- =
>= >
options? F
)F G
:H I
baseJ N
(N O
optionsO V
)V W
{		 
}

 
public 

DbSet 
< 
User 
> 
Users 
{ 
get "
;" #
set$ '
;' (
}) *
public 

DbSet 
< 
GameSession 
> 
GameSessions *
{+ ,
get- 0
;0 1
set2 5
;5 6
}7 8
public 

DbSet 
< 
RefreshToken 
> 
RefreshTokens ,
{- .
get/ 2
;2 3
set4 7
;7 8
}9 :
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +
modelBuilder 
. 
Entity 
< 
User  
>  !
(! "
entity" (
=>) +
{ 	
entity 
. 
HasKey 
( 
e 
=> 
e  
.  !
Id! #
)# $
;$ %
entity 
. 
HasIndex 
( 
e 
=>  
e! "
." #
Email# (
)( )
.) *
IsUnique* 2
(2 3
)3 4
;4 5
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Email# (
)( )
.) *

IsRequired* 4
(4 5
)5 6
.6 7
HasMaxLength7 C
(C D
$numD G
)G H
;H I
entity 
. 
Property 
( 
e 
=>  
e! "
." #
PasswordHash# /
)/ 0
.0 1

IsRequired1 ;
(; <
)< =
;= >
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Name# '
)' (
.( )
HasMaxLength) 5
(5 6
$num6 9
)9 :
;: ;
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Avatar# )
)) *
.* +
HasMaxLength+ 7
(7 8
$num8 ;
); <
;< =
entity 
. 
Property 
( 
e 
=>  
e! "
." #
Provider# +
)+ ,
., -

IsRequired- 7
(7 8
)8 9
.9 :
HasMaxLength: F
(F G
$numG I
)I J
.J K
HasDefaultValueK Z
(Z [
$str[ b
)b c
;c d
entity 
. 
Property 
( 
e 
=>  
e! "
." #
	CreatedAt# ,
), -
.- .

IsRequired. 8
(8 9
)9 :
;: ;
entity 
. 
Property 
( 
e 
=>  
e! "
." #
PreferencesJson# 2
)2 3
.3 4
HasColumnType4 A
(A B
$strB H
)H I
;I J
}   	
)  	 

;  
 
modelBuilder## 
.## 
Entity## 
<## 
GameSession## '
>##' (
(##( )
entity##) /
=>##0 2
{$$ 	
entity%% 
.%% 
HasKey%% 
(%% 
e%% 
=>%% 
e%%  
.%%  !
Id%%! #
)%%# $
;%%$ %
entity&& 
.&& 
HasIndex&& 
(&& 
e&& 
=>&&  
e&&! "
.&&" #
UserId&&# )
)&&) *
;&&* +
entity'' 
.'' 
HasIndex'' 
('' 
e'' 
=>''  
e''! "
.''" #
GameType''# +
)''+ ,
;'', -
entity(( 
.(( 
HasIndex(( 
((( 
e(( 
=>((  
e((! "
.((" #
	CreatedAt((# ,
)((, -
;((- .
entity)) 
.)) 
Property)) 
()) 
e)) 
=>))  
e))! "
.))" #
GameType))# +
)))+ ,
.)), -

IsRequired))- 7
())7 8
)))8 9
.))9 :
HasMaxLength)): F
())F G
$num))G I
)))I J
;))J K
entity** 
.** 
Property** 
(** 
e** 
=>**  
e**! "
.**" #
CorrectAnswers**# 1
)**1 2
.**2 3

IsRequired**3 =
(**= >
)**> ?
;**? @
entity++ 
.++ 
Property++ 
(++ 
e++ 
=>++  
e++! "
.++" #
WrongAnswers++# /
)++/ 0
.++0 1

IsRequired++1 ;
(++; <
)++< =
;++= >
entity,, 
.,, 
Property,, 
(,, 
e,, 
=>,,  
e,,! "
.,," #
SessionStartTime,,# 3
),,3 4
.,,4 5

IsRequired,,5 ?
(,,? @
),,@ A
;,,A B
entity-- 
.-- 
Property-- 
(-- 
e-- 
=>--  
e--! "
.--" #
	CreatedAt--# ,
)--, -
.--- .

IsRequired--. 8
(--8 9
)--9 :
;--: ;
entity00 
.00 
HasOne00 
(00 
e00 
=>00 
e00  
.00  !
User00! %
)00% &
.11 
WithMany11 
(11 
u11 
=>11  
u11! "
.11" #
GameSessions11# /
)11/ 0
.22 
HasForeignKey22  
(22  !
e22! "
=>22# %
e22& '
.22' (
UserId22( .
)22. /
.33 
OnDelete33 
(33 
DeleteBehavior33 *
.33* +
Cascade33+ 2
)332 3
;333 4
}44 	
)44	 

;44
 
modelBuilder77 
.77 
Entity77 
<77 
RefreshToken77 (
>77( )
(77) *
entity77* 0
=>771 3
{88 	
entity99 
.99 
HasKey99 
(99 
e99 
=>99 
e99  
.99  !
Id99! #
)99# $
;99$ %
entity:: 
.:: 
HasIndex:: 
(:: 
e:: 
=>::  
e::! "
.::" #
Token::# (
)::( )
.::) *
IsUnique::* 2
(::2 3
)::3 4
;::4 5
entity;; 
.;; 
HasIndex;; 
(;; 
e;; 
=>;;  
e;;! "
.;;" #
UserId;;# )
);;) *
;;;* +
entity<< 
.<< 
HasIndex<< 
(<< 
e<< 
=><<  
e<<! "
.<<" #
	ExpiresAt<<# ,
)<<, -
;<<- .
entity== 
.== 
Property== 
(== 
e== 
=>==  
e==! "
.==" #
Token==# (
)==( )
.==) *

IsRequired==* 4
(==4 5
)==5 6
.==6 7
HasMaxLength==7 C
(==C D
$num==D G
)==G H
;==H I
entity>> 
.>> 
Property>> 
(>> 
e>> 
=>>>  
e>>! "
.>>" #
	ExpiresAt>># ,
)>>, -
.>>- .

IsRequired>>. 8
(>>8 9
)>>9 :
;>>: ;
entity?? 
.?? 
Property?? 
(?? 
e?? 
=>??  
e??! "
.??" #
	CreatedAt??# ,
)??, -
.??- .

IsRequired??. 8
(??8 9
)??9 :
;??: ;
entity@@ 
.@@ 
Property@@ 
(@@ 
e@@ 
=>@@  
e@@! "
.@@" #
	IsRevoked@@# ,
)@@, -
.@@- .

IsRequired@@. 8
(@@8 9
)@@9 :
.@@: ;
HasDefaultValue@@; J
(@@J K
false@@K P
)@@P Q
;@@Q R
entityCC 
.CC 
HasOneCC 
(CC 
eCC 
=>CC 
eCC  
.CC  !
UserCC! %
)CC% &
.DD 
WithManyDD 
(DD 
uDD 
=>DD  
uDD! "
.DD" #
RefreshTokensDD# 0
)DD0 1
.EE 
HasForeignKeyEE  
(EE  !
eEE! "
=>EE# %
eEE& '
.EE' (
UserIdEE( .
)EE. /
.FF 
OnDeleteFF 
(FF 
DeleteBehaviorFF *
.FF* +
CascadeFF+ 2
)FF2 3
;FF3 4
}GG 	
)GG	 

;GG
 
}HH 
}II í/
,/usr/src/backend/GeoQuizApi/Data/DbSeeder.cs
	namespace 	

GeoQuizApi
 
. 
Data 
; 
public 
static 
class 
DbSeeder 
{ 
public 

static 
async 
Task 
	SeedAsync &
(& '
GeoQuizDbContext' 7
context8 ?
)? @
{		 
await 
context 
. 
Database 
. 
EnsureCreatedAsync 1
(1 2
)2 3
;3 4
if 

( 
await 
context 
. 
Users 
.  
AnyAsync  (
(( )
)) *
)* +
{ 	
return 
; 
} 	
var 
	testUsers 
= 
new 
List  
<  !
User! %
>% &
{ 	
new 
User 
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
Email 
= 
$str *
,* +
PasswordHash 
= 
BCrypt %
.% &
Net& )
.) *
BCrypt* 0
.0 1
HashPassword1 =
(= >
$str> K
)K L
,L M
Name 
= 
$str "
," #
Provider 
= 
$str "
," #
	CreatedAt 
= 
DateTime $
.$ %
UtcNow% +
} 
, 
new 
User 
{   
Id!! 
=!! 
Guid!! 
.!! 
NewGuid!! !
(!!! "
)!!" #
,!!# $
Email"" 
="" 
$str"" +
,""+ ,
PasswordHash## 
=## 
BCrypt## %
.##% &
Net##& )
.##) *
BCrypt##* 0
.##0 1
HashPassword##1 =
(##= >
$str##> H
)##H I
,##I J
Name$$ 
=$$ 
$str$$ #
,$$# $
Provider%% 
=%% 
$str%% "
,%%" #
	CreatedAt&& 
=&& 
DateTime&& $
.&&$ %
UtcNow&&% +
}'' 
}(( 	
;((	 

await** 
context** 
.** 
Users** 
.** 
AddRangeAsync** )
(**) *
	testUsers*** 3
)**3 4
;**4 5
await++ 
context++ 
.++ 
SaveChangesAsync++ &
(++& '
)++' (
;++( )
var.. 
testSessions.. 
=.. 
new.. 
List.. #
<..# $
GameSession..$ /
>../ 0
{// 	
new00 
GameSession00 
{11 
Id22 
=22 
Guid22 
.22 
NewGuid22 !
(22! "
)22" #
,22# $
UserId33 
=33 
	testUsers33 "
[33" #
$num33# $
]33$ %
.33% &
Id33& (
,33( )
GameType44 
=44 
$str44 &
,44& '
CorrectAnswers55 
=55  
$num55! "
,55" #
WrongAnswers66 
=66 
$num66  
,66  !
SessionStartTime77  
=77! "
DateTime77# +
.77+ ,
UtcNow77, 2
.772 3
AddHours773 ;
(77; <
-77< =
$num77= >
)77> ?
,77? @
SessionEndTime88 
=88  
DateTime88! )
.88) *
UtcNow88* 0
.880 1

AddMinutes881 ;
(88; <
-88< =
$num88= ?
)88? @
,88@ A
SessionDurationMs99 !
=99" #
$num99$ +
,99+ ,
	CreatedAt:: 
=:: 
DateTime:: $
.::$ %
UtcNow::% +
.::+ ,
AddHours::, 4
(::4 5
-::5 6
$num::6 7
)::7 8
};; 
,;; 
new<< 
GameSession<< 
{== 
Id>> 
=>> 
Guid>> 
.>> 
NewGuid>> !
(>>! "
)>>" #
,>># $
UserId?? 
=?? 
	testUsers?? "
[??" #
$num??# $
]??$ %
.??% &
Id??& (
,??( )
GameType@@ 
=@@ 
$str@@ "
,@@" #
CorrectAnswersAA 
=AA  
$numAA! #
,AA# $
WrongAnswersBB 
=BB 
$numBB  
,BB  !
SessionStartTimeCC  
=CC! "
DateTimeCC# +
.CC+ ,
UtcNowCC, 2
.CC2 3
AddHoursCC3 ;
(CC; <
-CC< =
$numCC= >
)CC> ?
,CC? @
SessionEndTimeDD 
=DD  
DateTimeDD! )
.DD) *
UtcNowDD* 0
.DD0 1
AddHoursDD1 9
(DD9 :
-DD: ;
$numDD; <
)DD< =
.DD= >

AddMinutesDD> H
(DDH I
-DDI J
$numDDJ L
)DDL M
,DDM N
SessionDurationMsEE !
=EE" #
$numEE$ *
,EE* +
	CreatedAtFF 
=FF 
DateTimeFF $
.FF$ %
UtcNowFF% +
.FF+ ,
AddHoursFF, 4
(FF4 5
-FF5 6
$numFF6 7
)FF7 8
}GG 
}HH 	
;HH	 

awaitJJ 
contextJJ 
.JJ 
GameSessionsJJ "
.JJ" #
AddRangeAsyncJJ# 0
(JJ0 1
testSessionsJJ1 =
)JJ= >
;JJ> ?
awaitKK 
contextKK 
.KK 
SaveChangesAsyncKK &
(KK& '
)KK' (
;KK( )
}LL 
}MM ÂX
@/usr/src/backend/GeoQuizApi/Controllers/LeaderboardController.cs
	namespace 	

GeoQuizApi
 
. 
Controllers  
;  !
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
[ 
Produces 	
(	 

$str
 
) 
] 
[ 
Tags 
( 
$str 
) 
] 
public 
class !
LeaderboardController "
:# $
ControllerBase% 3
{ 
private 
readonly 
ILeaderboardService (
_leaderboardService) <
;< =
private 
readonly 
ILogger 
< !
LeaderboardController 2
>2 3
_logger4 ;
;; <
public 
!
LeaderboardController  
(  !
ILeaderboardService! 4
leaderboardService5 G
,G H
ILoggerI P
<P Q!
LeaderboardControllerQ f
>f g
loggerh n
)n o
{ 
_leaderboardService 
= 
leaderboardService 0
;0 1
_logger 
= 
logger 
; 
} 
[## 
HttpGet## 
]## 
public$$ 

async$$ 
Task$$ 
<$$ 
ActionResult$$ "
<$$" #
LeaderboardResponse$$# 6
>$$6 7
>$$7 8 
GetGlobalLeaderboard$$9 M
($$M N
[%% 	
	FromQuery%%	 
]%% 
int%% 
page%% 
=%% 
$num%%  
,%%  !
[&& 	
	FromQuery&&	 
]&& 
int&& 
pageSize&&  
=&&! "
$num&&# %
)&&% &
{'' 
var(( 
currentUserId(( 
=(( 
GetCurrentUserId(( ,
(((, -
)((- .
;((. /
var)) 
leaderboard)) 
=)) 
await)) 
_leaderboardService))  3
.))3 4%
GetGlobalLeaderboardAsync))4 M
())M N
page))N R
,))R S
pageSize))T \
,))\ ]
currentUserId))^ k
)))k l
;))l m
_logger++ 
.++ 
LogInformation++ 
(++ 
$str++ n
,++n o
page,, 
,,, 
pageSize,, 
,,, 
leaderboard,, '
.,,' (
TotalPlayers,,( 4
),,4 5
;,,5 6
return.. 
Ok.. 
(.. 
leaderboard.. 
).. 
;.. 
}// 
[:: 
HttpGet:: 
(:: 
$str:: #
)::# $
]::$ %
public;; 

async;; 
Task;; 
<;; 
ActionResult;; "
<;;" #
LeaderboardResponse;;# 6
>;;6 7
>;;7 8$
GetLeaderboardByGameType;;9 Q
(;;Q R
string<< 
gameType<< 
,<< 
[== 	
	FromQuery==	 
]== 
int== 
page== 
=== 
$num==  
,==  !
[>> 	
	FromQuery>>	 
]>> 
int>> 
pageSize>>  
=>>! "
$num>># %
)>>% &
{?? 
var@@ 
currentUserId@@ 
=@@ 
GetCurrentUserId@@ ,
(@@, -
)@@- .
;@@. /
varAA 
leaderboardAA 
=AA 
awaitAA 
_leaderboardServiceAA  3
.AA3 4)
GetLeaderboardByGameTypeAsyncAA4 Q
(AAQ R
gameTypeAAR Z
,AAZ [
pageAA\ `
,AA` a
pageSizeAAb j
,AAj k
currentUserIdAAl y
)AAy z
;AAz {
_loggerCC 
.CC 
LogInformationCC 
(CC 
$str	CC Ä
,
CCÄ Å
gameTypeDD 
,DD 
pageDD 
,DD 
pageSizeDD $
,DD$ %
leaderboardDD& 1
.DD1 2
TotalPlayersDD2 >
)DD> ?
;DD? @
returnFF 
OkFF 
(FF 
leaderboardFF 
)FF 
;FF 
}GG 
[RR 
HttpGetRR 
(RR 
$strRR 
)RR 
]RR  
publicSS 

asyncSS 
TaskSS 
<SS 
ActionResultSS "
<SS" #
LeaderboardResponseSS# 6
>SS6 7
>SS7 8"
GetLeaderboardByPeriodSS9 O
(SSO P
stringTT 
periodTT 
,TT 
[UU 	
	FromQueryUU	 
]UU 
intUU 
pageUU 
=UU 
$numUU  
,UU  !
[VV 	
	FromQueryVV	 
]VV 
intVV 
pageSizeVV  
=VV! "
$numVV# %
)VV% &
{WW 
varXX 
currentUserIdXX 
=XX 
GetCurrentUserIdXX ,
(XX, -
)XX- .
;XX. /
varYY 
leaderboardYY 
=YY 
awaitYY 
_leaderboardServiceYY  3
.YY3 4'
GetLeaderboardByPeriodAsyncYY4 O
(YYO P
periodYYP V
,YYV W
pageYYX \
,YY\ ]
pageSizeYY^ f
,YYf g
currentUserIdYYh u
)YYu v
;YYv w
_logger[[ 
.[[ 
LogInformation[[ 
([[ 
$str[[ {
,[[{ |
period\\ 
,\\ 
page\\ 
,\\ 
pageSize\\ "
,\\" #
leaderboard\\$ /
.\\/ 0
TotalPlayers\\0 <
)\\< =
;\\= >
return^^ 
Ok^^ 
(^^ 
leaderboard^^ 
)^^ 
;^^ 
}__ 
[kk 
HttpGetkk 
(kk 
$strkk 
)kk 
]kk 
publicll 

asyncll 
Taskll 
<ll 
ActionResultll "
<ll" #
LeaderboardResponsell# 6
>ll6 7
>ll7 8"
GetFilteredLeaderboardll9 O
(llO P
[mm 	
	FromQuerymm	 
]mm 
stringmm 
?mm 
gameTypemm $
=mm% &
nullmm' +
,mm+ ,
[nn 	
	FromQuerynn	 
]nn 
stringnn 
?nn 
periodnn "
=nn# $
nullnn% )
,nn) *
[oo 	
	FromQueryoo	 
]oo 
intoo 
pageoo 
=oo 
$numoo  
,oo  !
[pp 	
	FromQuerypp	 
]pp 
intpp 
pageSizepp  
=pp! "
$numpp# %
)pp% &
{qq 
varrr 
currentUserIdrr 
=rr 
GetCurrentUserIdrr ,
(rr, -
)rr- .
;rr. /
varss 
leaderboardss 
=ss 
awaitss 
_leaderboardServicess  3
.ss3 4'
GetFilteredLeaderboardAsyncss4 O
(ssO P
gameTypessP X
,ssX Y
periodssZ `
,ss` a
pagessb f
,ssf g
pageSizessh p
,ssp q
currentUserIdssr 
)	ss Ä
;
ssÄ Å
_loggeruu 
.uu 
LogInformationuu 
(uu 
$str	uu ò
,
uuò ô
gameTypevv 
??vv 
$strvv 
,vv 
periodvv %
??vv& (
$strvv) 3
,vv3 4
pagevv5 9
,vv9 :
pageSizevv; C
,vvC D
leaderboardvvE P
.vvP Q
TotalPlayersvvQ ]
)vv] ^
;vv^ _
returnxx 
Okxx 
(xx 
leaderboardxx 
)xx 
;xx 
}yy 
[
ÅÅ 
HttpPost
ÅÅ 
(
ÅÅ 
$str
ÅÅ 
)
ÅÅ 
]
ÅÅ 
[
ÇÇ 
	Authorize
ÇÇ 
]
ÇÇ 
public
ÉÉ 

ActionResult
ÉÉ #
ClearLeaderboardCache
ÉÉ -
(
ÉÉ- .
)
ÉÉ. /
{
ÑÑ !
_leaderboardService
ÖÖ 
.
ÖÖ 

ClearCache
ÖÖ &
(
ÖÖ& '
)
ÖÖ' (
;
ÖÖ( )
_logger
ÜÜ 
.
ÜÜ 
LogInformation
ÜÜ 
(
ÜÜ 
$str
ÜÜ K
,
ÜÜK L
GetCurrentUserId
ÜÜM ]
(
ÜÜ] ^
)
ÜÜ^ _
)
ÜÜ_ `
;
ÜÜ` a
return
áá 
Ok
áá 
(
áá 
new
áá 
{
áá 
message
áá 
=
áá  !
$str
áá" J
}
ááK L
)
ááL M
;
ááM N
}
àà 
[
èè 
HttpGet
èè 
(
èè 
$str
èè 
)
èè 
]
èè 
public
êê 

ActionResult
êê 
<
êê 
object
êê 
>
êê 
GetGameTypes
êê  ,
(
êê, -
)
êê- .
{
ëë 
return
íí 
Ok
íí 
(
íí 
new
íí 
{
ìì 	
	gameTypes
îî 
=
îî 

GeoQuizApi
îî "
.
îî" #
Models
îî# )
.
îî) *
	GameTypes
îî* 3
.
îî3 4
ValidGameTypes
îî4 B
,
îîB C
description
ïï 
=
ïï 
$str
ïï F
}
ññ 	
)
ññ	 

;
ññ
 
}
óó 
[
ûû 
HttpGet
ûû 
(
ûû 
$str
ûû 
)
ûû 
]
ûû 
public
üü 

ActionResult
üü 
<
üü 
object
üü 
>
üü 

GetPeriods
üü  *
(
üü* +
)
üü+ ,
{
†† 
return
°° 
Ok
°° 
(
°° 
new
°° 
{
¢¢ 	
periods
££ 
=
££ 

GeoQuizApi
££  
.
££  !
Models
££! '
.
££' ( 
LeaderboardPeriods
££( :
.
££: ;
ValidPeriods
££; G
,
££G H
description
§§ 
=
§§ 
$str
§§ H
}
•• 	
)
••	 

;
••
 
}
¶¶ 
private
®® 
Guid
®® 
?
®® 
GetCurrentUserId
®® "
(
®®" #
)
®®# $
{
©© 
var
™™ 
userIdClaim
™™ 
=
™™ 
User
™™ 
.
™™ 
	FindFirst
™™ (
(
™™( )

ClaimTypes
™™) 3
.
™™3 4
NameIdentifier
™™4 B
)
™™B C
?
™™C D
.
™™D E
Value
™™E J
;
™™J K
if
´´ 

(
´´ 
string
´´ 
.
´´ 
IsNullOrEmpty
´´  
(
´´  !
userIdClaim
´´! ,
)
´´, -
||
´´. 0
!
´´1 2
Guid
´´2 6
.
´´6 7
TryParse
´´7 ?
(
´´? @
userIdClaim
´´@ K
,
´´K L
out
´´M P
var
´´Q T
userId
´´U [
)
´´[ \
)
´´\ ]
{
¨¨ 	
return
≠≠ 
null
≠≠ 
;
≠≠ 
}
ÆÆ 	
return
ØØ 
userId
ØØ 
;
ØØ 
}
∞∞ 
}±± ñ/
;/usr/src/backend/GeoQuizApi/Controllers/HealthController.cs
	namespace 	

GeoQuizApi
 
. 
Controllers  
;  !
[

 
ApiController

 
]

 
[ 
Route 
( 
$str 
) 
] 
public 
class 
HealthController 
: 
ControllerBase  .
{ 
private 
readonly 
GeoQuizDbContext %
_context& .
;. /
public 

HealthController 
( 
GeoQuizDbContext ,
context- 4
)4 5
{ 
_context 
= 
context 
; 
} 
[ 
HttpGet 
] 
public 

async 
Task 
< 
IActionResult #
># $
Get% (
(( )
)) *
{ 
await 
_context 
. 
Database 
.  
CanConnectAsync  /
(/ 0
)0 1
;1 2
var 
healthStatus 
= 
new 
{   	
Status!! 
=!! 
$str!! 
,!! 
	Timestamp"" 
="" 
DateTime""  
.""  !
UtcNow""! '
,""' (
Version## 
=## 
$str## 
,## 
Environment$$ 
=$$ 
Environment$$ %
.$$% &"
GetEnvironmentVariable$$& <
($$< =
$str$$= U
)$$U V
??$$W Y
$str$$Z c
}%% 	
;%%	 

return'' 
Ok'' 
('' 
healthStatus'' 
)'' 
;''  
}(( 
[.. 
HttpGet.. 
(.. 
$str.. 
).. 
].. 
public// 

async// 
Task// 
<// 
IActionResult// #
>//# $
GetDetailed//% 0
(//0 1
)//1 2
{00 
var11 
healthChecks11 
=11 
new11 

Dictionary11 )
<11) *
string11* 0
,110 1
object112 8
>118 9
(119 :
)11: ;
;11; <
var22 
overallStatus22 
=22 
$str22 %
;22% &
var55 
dbStartTime55 
=55 
DateTime55 "
.55" #
UtcNow55# )
;55) *
var66 

canConnect66 
=66 
await66 
_context66 '
.66' (
Database66( 0
.660 1
CanConnectAsync661 @
(66@ A
)66A B
;66B C
var77 
dbResponseTime77 
=77 
(77 
DateTime77 &
.77& '
UtcNow77' -
-77. /
dbStartTime770 ;
)77; <
.77< =
TotalMilliseconds77= N
;77N O
healthChecks99 
[99 
$str99 
]99  
=99! "
new99# &
{:: 	
Status;; 
=;; 

canConnect;; 
?;;  !
$str;;" +
:;;, -
$str;;. 9
,;;9 :
ResponseTime<< 
=<< 
$"<< 
{<< 
dbResponseTime<< ,
:<<, -
$str<<- /
}<</ 0
$str<<0 2
"<<2 3
}== 	
;==	 

if?? 

(?? 
!?? 

canConnect?? 
)?? 
{@@ 	
overallStatusAA 
=AA 
$strAA '
;AA' (
}BB 	
varEE 

workingSetEE 
=EE 
GCEE 
.EE 
GetTotalMemoryEE *
(EE* +
falseEE+ 0
)EE0 1
;EE1 2
healthChecksFF 
[FF 
$strFF 
]FF 
=FF  
newFF! $
{GG 	
StatusHH 
=HH 
$strHH 
,HH 

WorkingSetII 
=II 
$"II 
{II 

workingSetII &
/II' (
$numII) -
/II. /
$numII0 4
:II4 5
$strII5 7
}II7 8
$strII8 ;
"II; <
}JJ 	
;JJ	 

varMM 
processStartTimeMM 
=MM 
EnvironmentMM *
.MM* +
TickCount64MM+ 6
;MM6 7
varNN 
uptimeNN 
=NN 
TimeSpanNN 
.NN 
FromMillisecondsNN .
(NN. /
processStartTimeNN/ ?
)NN? @
;NN@ A
healthChecksOO 
[OO 
$strOO 
]OO 
=OO  
newOO! $
{PP 	
StatusQQ 
=QQ 
$strQQ 
,QQ 
DurationRR 
=RR 
uptimeRR 
.RR 
ToStringRR &
(RR& '
$strRR' 8
)RR8 9
}SS 	
;SS	 

varUU 
responseUU 
=UU 
newUU 
{VV 	
StatusWW 
=WW 
overallStatusWW "
,WW" #
	TimestampXX 
=XX 
DateTimeXX  
.XX  !
UtcNowXX! '
,XX' (
VersionYY 
=YY 
$strYY 
,YY 
EnvironmentZZ 
=ZZ 
EnvironmentZZ %
.ZZ% &"
GetEnvironmentVariableZZ& <
(ZZ< =
$strZZ= U
)ZZU V
??ZZW Y
$strZZZ c
,ZZc d
Checks[[ 
=[[ 
healthChecks[[ !
}\\ 	
;\\	 

return^^ 
overallStatus^^ 
==^^ 
$str^^  )
?^^* +
Ok^^, .
(^^. /
response^^/ 7
)^^7 8
:^^9 :

StatusCode^^; E
(^^E F
$num^^F I
,^^I J
response^^K S
)^^S T
;^^T U
}__ 
}`` ß
>/usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs
	namespace		 	

GeoQuizApi		
 
.		 
Controllers		  
;		  !
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
[ 
	Authorize 

]
 
[ 
Produces 	
(	 

$str
 
) 
] 
[ 
Tags 
( 
$str 
) 
] 
public 
class 
GameStatsController  
:! "
ControllerBase# 1
{ 
private 
readonly 
IGameStatsService &
_gameStatsService' 8
;8 9
private 
readonly 
ILogger 
< 
GameStatsController 0
>0 1
_logger2 9
;9 :
public 

GameStatsController 
( 
IGameStatsService 
gameStatsService *
,* +
ILogger 
< 
GameStatsController #
># $
logger% +
)+ ,
{ 
_gameStatsService 
= 
gameStatsService ,
;, -
_logger 
= 
logger 
; 
} 
[)) 
HttpPost)) 
])) 
public** 

async** 
Task** 
<** 
ActionResult** "
<**" #
GameSessionDto**# 1
>**1 2
>**2 3
SaveGameSession**4 C
(**C D
[**D E
FromBody**E M
]**M N
GameSessionRequest**O a
request**b i
)**i j
{++ 
_logger,, 
.,, 
LogInformation,, 
(,, 
$str	,, ë
,
,,ë í
request-- 
?-- 
.-- 
GameType-- 
,-- 
request-- &
?--& '
.--' (
CorrectAnswers--( 6
,--6 7
request--8 ?
?--? @
.--@ A
WrongAnswers--A M
)--M N
;--N O
if00 

(00 
!00 

ModelState00 
.00 
IsValid00 
)00  
{11 	
_logger22 
.22 

LogWarning22 
(22 
$str22 R
,22R S
string33 
.33 
Join33 
(33 
$str33  
,33  !

ModelState33" ,
.33, -
Values33- 3
.333 4

SelectMany334 >
(33> ?
v33? @
=>33A C
v33D E
.33E F
Errors33F L
)33L M
.33M N
Select33N T
(33T U
e33U V
=>33W Y
e33Z [
.33[ \
ErrorMessage33\ h
)33h i
)33i j
)33j k
;33k l
return44 

BadRequest44 
(44 

ModelState44 (
)44( )
;44) *
}55 	
var77 
userId77 
=77 
GetCurrentUserId77 %
(77% &
)77& '
;77' (
_logger88 
.88 
LogInformation88 
(88 
$str88 C
,88C D
userId88E K
)88K L
;88L M
_logger:: 
.:: 
LogInformation:: 
(:: 
$str:: W
,::W X
request::Y `
.::` a
GameType::a i
)::i j
;::j k
var<< 
gameSession<< 
=<< 
await<< 
_gameStatsService<<  1
.<<1 2 
SaveGameSessionAsync<<2 F
(<<F G
userId== 
,== 
request>> 
.>> 
GameType>> 
,>> 
request?? 
.?? 
CorrectAnswers?? "
,??" #
request@@ 
.@@ 
WrongAnswers@@  
,@@  !
requestAA 
.AA 
SessionStartTimeAA $
,AA$ %
requestBB 
.BB 
SessionEndTimeBB "
)BB" #
;BB# $
_loggerDD 
.DD 
LogInformationDD 
(DD 
$strDD L
)DDL M
;DDM N
varFF 
responseFF 
=FF 
MapToGameSessionDtoFF *
(FF* +
gameSessionFF+ 6
)FF6 7
;FF7 8
returnGG 
OkGG 
(GG 
responseGG 
)GG 
;GG 
}HH 
[PP 
HttpGetPP 
(PP 
$strPP 
)PP 
]PP 
publicQQ 

asyncQQ 
TaskQQ 
<QQ 
ActionResultQQ "
<QQ" #
GameStatsResponseQQ# 4
>QQ4 5
>QQ5 6
GetUserStatsQQ7 C
(QQC D
)QQD E
{RR 
varSS 
userIdSS 
=SS 
GetCurrentUserIdSS %
(SS% &
)SS& '
;SS' (
varTT 
statsTT 
=TT 
awaitTT 
_gameStatsServiceTT +
.TT+ ,
GetUserStatsAsyncTT, =
(TT= >
userIdTT> D
)TTD E
;TTE F
varVV 
responseVV 
=VV 
newVV 
GameStatsResponseVV ,
{WW 	

TotalGamesXX 
=XX 
statsXX 
.XX 

TotalGamesXX )
,XX) *
TotalCorrectAnswersYY 
=YY  !
statsYY" '
.YY' (
TotalCorrectAnswersYY( ;
,YY; <
TotalWrongAnswersZZ 
=ZZ 
statsZZ  %
.ZZ% &
TotalWrongAnswersZZ& 7
,ZZ7 8

BestStreak[[ 
=[[ 
stats[[ 
.[[ 

BestStreak[[ )
,[[) *
AverageAccuracy\\ 
=\\ 
stats\\ #
.\\# $
AverageAccuracy\\$ 3
,\\3 4
LastPlayedAt]] 
=]] 
stats]]  
.]]  !
LastPlayedAt]]! -
,]]- .
GameTypeStats^^ 
=^^ 
stats^^ !
.^^! "
GameTypeStats^^" /
.^^/ 0
ToDictionary^^0 <
(^^< =
kvp__ 
=>__ 
kvp__ 
.__ 
Key__ 
,__ 
kvp`` 
=>`` 
new`` 
GameTypeStatsDto`` +
{aa 
Gamesbb 
=bb 
kvpbb 
.bb  
Valuebb  %
.bb% &
Gamesbb& +
,bb+ ,
CorrectAnswerscc "
=cc# $
kvpcc% (
.cc( )
Valuecc) .
.cc. /
CorrectAnswerscc/ =
,cc= >
WrongAnswersdd  
=dd! "
kvpdd# &
.dd& '
Valuedd' ,
.dd, -
WrongAnswersdd- 9
,dd9 :
Accuracyee 
=ee 
kvpee "
.ee" #
Valueee# (
.ee( )
Accuracyee) 1
,ee1 2

BestStreakff 
=ff  
kvpff! $
.ff$ %
Valueff% *
.ff* +

BestStreakff+ 5
}gg 
)gg 
}hh 	
;hh	 

returnjj 
Okjj 
(jj 
responsejj 
)jj 
;jj 
}kk 
[uu 
HttpGetuu 
(uu 
$struu 
)uu 
]uu 
publicvv 

asyncvv 
Taskvv 
<vv 
ActionResultvv "
<vv" #
GameHistoryResponsevv# 6
>vv6 7
>vv7 8
GetUserGameHistoryvv9 K
(vvK L
[ww 	
	FromQueryww	 
]ww 
intww 
pageww 
=ww 
$numww  
,ww  !
[xx 	
	FromQueryxx	 
]xx 
intxx 
pageSizexx  
=xx! "
$numxx# %
)xx% &
{yy 
varzz 
userIdzz 
=zz 
GetCurrentUserIdzz %
(zz% &
)zz& '
;zz' (
if}} 

(}} 
page}} 
<}} 
$num}} 
)}} 
page}} 
=}} 
$num}} 
;}} 
if~~ 

(~~ 
pageSize~~ 
<~~ 
$num~~ 
||~~ 
pageSize~~ $
>~~% &
$num~~' *
)~~* +
pageSize~~, 4
=~~5 6
$num~~7 9
;~~9 :
var
ÄÄ 
sessions
ÄÄ 
=
ÄÄ 
await
ÄÄ 
_gameStatsService
ÄÄ .
.
ÄÄ. /%
GetUserGameHistoryAsync
ÄÄ/ F
(
ÄÄF G
userId
ÄÄG M
,
ÄÄM N
page
ÄÄO S
,
ÄÄS T
pageSize
ÄÄU ]
)
ÄÄ] ^
;
ÄÄ^ _
var
ÉÉ 
allUserStats
ÉÉ 
=
ÉÉ 
await
ÉÉ  
_gameStatsService
ÉÉ! 2
.
ÉÉ2 3
GetUserStatsAsync
ÉÉ3 D
(
ÉÉD E
userId
ÉÉE K
)
ÉÉK L
;
ÉÉL M
var
ÑÑ 

totalCount
ÑÑ 
=
ÑÑ 
allUserStats
ÑÑ %
.
ÑÑ% &

TotalGames
ÑÑ& 0
;
ÑÑ0 1
var
ÜÜ 
response
ÜÜ 
=
ÜÜ 
new
ÜÜ !
GameHistoryResponse
ÜÜ .
{
áá 	
Sessions
àà 
=
àà 
sessions
àà 
.
àà  
Select
àà  &
(
àà& '!
MapToGameSessionDto
àà' :
)
àà: ;
.
àà; <
ToList
àà< B
(
ààB C
)
ààC D
,
ààD E

TotalCount
ââ 
=
ââ 

totalCount
ââ #
,
ââ# $
Page
ää 
=
ää 
page
ää 
,
ää 
PageSize
ãã 
=
ãã 
pageSize
ãã 
,
ãã  
HasNextPage
åå 
=
åå 
(
åå 
page
åå 
*
åå  !
pageSize
åå" *
)
åå* +
<
åå, -

totalCount
åå. 8
}
çç 	
;
çç	 

return
èè 
Ok
èè 
(
èè 
response
èè 
)
èè 
;
èè 
}
êê 
[
öö 
HttpPost
öö 
(
öö 
$str
öö 
)
öö 
]
öö 
public
õõ 

async
õõ 
Task
õõ 
<
õõ 
ActionResult
õõ "
>
õõ" #&
MigrateAnonymousProgress
õõ$ <
(
õõ< =
[
õõ= >
FromBody
õõ> F
]
õõF G$
MigrateProgressRequest
õõH ^
request
õõ_ f
)
õõf g
{
úú 
var
ùù 
userId
ùù 
=
ùù 
GetCurrentUserId
ùù %
(
ùù% &
)
ùù& '
;
ùù' (
var
†† 
anonymousSessions
†† 
=
†† 
request
††  '
.
††' (
AnonymousSessions
††( 9
.
††9 :
Select
††: @
(
††@ A
dto
††A D
=>
††E G
new
††H K"
AnonymousGameSession
††L `
{
°° 	
GameType
¢¢ 
=
¢¢ 
dto
¢¢ 
.
¢¢ 
GameType
¢¢ #
,
¢¢# $
CorrectAnswers
££ 
=
££ 
dto
££  
.
££  !
CorrectAnswers
££! /
,
££/ 0
WrongAnswers
§§ 
=
§§ 
dto
§§ 
.
§§ 
WrongAnswers
§§ +
,
§§+ ,
SessionStartTime
•• 
=
•• 
dto
•• "
.
••" #
SessionStartTime
••# 3
,
••3 4
SessionEndTime
¶¶ 
=
¶¶ 
dto
¶¶  
.
¶¶  !
SessionEndTime
¶¶! /
}
ßß 	
)
ßß	 

.
ßß
 
ToList
ßß 
(
ßß 
)
ßß 
;
ßß 
var
©© 
success
©© 
=
©© 
await
©© 
_gameStatsService
©© -
.
©©- .+
MigrateAnonymousProgressAsync
©©. K
(
©©K L
userId
©©L R
,
©©R S
anonymousSessions
©©T e
)
©©e f
;
©©f g
if
´´ 

(
´´ 
!
´´ 
success
´´ 
)
´´ 
{
¨¨ 	
return
≠≠ 

BadRequest
≠≠ 
(
≠≠ 
new
≠≠ !
{
≠≠" #
error
≠≠$ )
=
≠≠* +
$str
≠≠, J
}
≠≠K L
)
≠≠L M
;
≠≠M N
}
ÆÆ 	
return
∞∞ 
Ok
∞∞ 
(
∞∞ 
new
∞∞ 
{
∞∞ 
message
±± 
=
±± 
$str
±± @
,
±±@ A
migratedSessions
≤≤ 
=
≤≤ 
anonymousSessions
≤≤ 0
.
≤≤0 1
Count
≤≤1 6
}
≥≥ 	
)
≥≥	 

;
≥≥
 
}
¥¥ 
private
∂∂ 
Guid
∂∂ 
GetCurrentUserId
∂∂ !
(
∂∂! "
)
∂∂" #
{
∑∑ 
var
∏∏ 
userIdClaim
∏∏ 
=
∏∏ 
User
∏∏ 
.
∏∏ 
	FindFirst
∏∏ (
(
∏∏( )

ClaimTypes
∏∏) 3
.
∏∏3 4
NameIdentifier
∏∏4 B
)
∏∏B C
?
∏∏C D
.
∏∏D E
Value
∏∏E J
;
∏∏J K
if
ππ 

(
ππ 
string
ππ 
.
ππ 
IsNullOrEmpty
ππ  
(
ππ  !
userIdClaim
ππ! ,
)
ππ, -
||
ππ. 0
!
ππ1 2
Guid
ππ2 6
.
ππ6 7
TryParse
ππ7 ?
(
ππ? @
userIdClaim
ππ@ K
,
ππK L
out
ππM P
var
ππQ T
userId
ππU [
)
ππ[ \
)
ππ\ ]
{
∫∫ 	
throw
ªª 
new
ªª )
UnauthorizedAccessException
ªª 1
(
ªª1 2
$str
ªª2 F
)
ªªF G
;
ªªG H
}
ºº 	
return
ΩΩ 
userId
ΩΩ 
;
ΩΩ 
}
ææ 
private
¿¿ 
static
¿¿ 
GameSessionDto
¿¿ !!
MapToGameSessionDto
¿¿" 5
(
¿¿5 6
GameSession
¿¿6 A
gameSession
¿¿B M
)
¿¿M N
{
¡¡ 
var
¬¬ 
totalAnswers
¬¬ 
=
¬¬ 
gameSession
¬¬ &
.
¬¬& '
CorrectAnswers
¬¬' 5
+
¬¬6 7
gameSession
¬¬8 C
.
¬¬C D
WrongAnswers
¬¬D P
;
¬¬P Q
var
√√ 
accuracy
√√ 
=
√√ 
totalAnswers
√√ #
>
√√$ %
$num
√√& '
?
√√( )
Math
√√* .
.
√√. /
Round
√√/ 4
(
√√4 5
(
√√5 6
double
√√6 <
)
√√< =
gameSession
√√= H
.
√√H I
CorrectAnswers
√√I W
/
√√X Y
totalAnswers
√√Z f
*
√√g h
$num
√√i l
,
√√l m
$num
√√n o
)
√√o p
:
√√q r
$num
√√s t
;
√√t u
return
≈≈ 
new
≈≈ 
GameSessionDto
≈≈ !
{
∆∆ 	
Id
«« 
=
«« 
gameSession
«« 
.
«« 
Id
«« 
.
««  
ToString
««  (
(
««( )
)
««) *
,
««* +
GameType
»» 
=
»» 
gameSession
»» "
.
»»" #
GameType
»»# +
,
»»+ ,
CorrectAnswers
…… 
=
…… 
gameSession
…… (
.
……( )
CorrectAnswers
……) 7
,
……7 8
WrongAnswers
   
=
   
gameSession
   &
.
  & '
WrongAnswers
  ' 3
,
  3 4
Accuracy
ÀÀ 
=
ÀÀ 
accuracy
ÀÀ 
,
ÀÀ  
SessionStartTime
ÃÃ 
=
ÃÃ 
gameSession
ÃÃ *
.
ÃÃ* +
SessionStartTime
ÃÃ+ ;
,
ÃÃ; <
SessionEndTime
ÕÕ 
=
ÕÕ 
gameSession
ÕÕ (
.
ÕÕ( )
SessionEndTime
ÕÕ) 7
,
ÕÕ7 8
SessionDurationMs
ŒŒ 
=
ŒŒ 
gameSession
ŒŒ  +
.
ŒŒ+ ,
SessionDurationMs
ŒŒ, =
,
ŒŒ= >
	CreatedAt
œœ 
=
œœ 
gameSession
œœ #
.
œœ# $
	CreatedAt
œœ$ -
}
–– 	
;
––	 

}
—— 
}““ ˛y
9/usr/src/backend/GeoQuizApi/Controllers/AuthController.cs
	namespace

 	

GeoQuizApi


 
.

 
Controllers

  
;

  !
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
[ 
Produces 	
(	 

$str
 
) 
] 
[ 
Tags 
( 
$str 
) 
] 
public 
class 
AuthController 
: 
ControllerBase ,
{ 
private 
readonly 
IAuthService !
_authService" .
;. /
private 
readonly 
JwtSettings  
_jwtSettings! -
;- .
private 
readonly 
ILogger 
< 
AuthController +
>+ ,
_logger- 4
;4 5
public 

AuthController 
( 
IAuthService 
authService  
,  !
IOptions 
< 
JwtSettings 
> 
jwtSettings )
,) *
ILogger 
< 
AuthController 
> 
logger  &
)& '
{ 
_authService 
= 
authService "
;" #
_jwtSettings 
= 
jwtSettings "
." #
Value# (
;( )
_logger   
=   
logger   
;   
}!! 
[,, 
HttpPost,, 
(,, 
$str,, 
),, 
],, 
public-- 

async-- 
Task-- 
<-- 
ActionResult-- "
<--" #
AuthResponse--# /
>--/ 0
>--0 1
Register--2 :
(--: ;
[--; <
FromBody--< D
]--D E
RegisterRequest--F U
request--V ]
)--] ^
{.. 
var// 
(// 
user// 
,// 
accessToken// 
,// 
refreshToken//  ,
)//, -
=//. /
await//0 5
_authService//6 B
.//B C
RegisterAsync//C P
(//P Q
request00 
.00 
Email00 
,00 
request11 
.11 
Password11 
,11 
request22 
.22 
Name22 
)22 
;22 
var44 
response44 
=44 
new44 
AuthResponse44 '
{55 	
User66 
=66 
MapToUserDto66 
(66  
user66  $
)66$ %
,66% &
AccessToken77 
=77 
accessToken77 %
,77% &
RefreshToken88 
=88 
refreshToken88 '
,88' (
	ExpiresIn99 
=99 
_jwtSettings99 $
.99$ %(
AccessTokenExpirationMinutes99% A
*99B C
$num99D F
}:: 	
;::	 

_logger<< 
.<< 
LogInformation<< 
(<< 
$str<< g
,<<g h
request== 
.== 
Email== 
,== 
accessToken== &
?==& '
.==' (
Length==( .
??==/ 1
$num==2 3
)==3 4
;==4 5
return?? 

StatusCode?? 
(?? 
$num?? 
,?? 
response?? '
)??' (
;??( )
}@@ 
[EE 
HttpGetEE 
(EE 
$strEE 
)EE 
]EE 
publicFF 

ActionResultFF 
<FF 
objectFF 
>FF 
TestFF  $
(FF$ %
)FF% &
{GG 
returnHH 
OkHH 
(HH 
newHH 
{HH 
messageHH 
=HH  !
$strHH" 2
,HH2 3
	timestampHH4 =
=HH> ?
DateTimeHH@ H
.HHH I
UtcNowHHI O
}HHP Q
)HHQ R
;HHR S
}II 
[SS 
HttpPostSS 
(SS 
$strSS 
)SS 
]SS 
publicTT 

asyncTT 
TaskTT 
<TT 
ActionResultTT "
<TT" #
AuthResponseTT# /
>TT/ 0
>TT0 1
LoginTT2 7
(TT7 8
[TT8 9
FromBodyTT9 A
]TTA B
LoginRequestTTC O
requestTTP W
)TTW X
{UU 
_loggerVV 
.VV 
LogInformationVV 
(VV 
$strVV A
,VVA B
requestVVC J
.VVJ K
EmailVVK P
)VVP Q
;VVQ R
varXX 
(XX 
userXX 
,XX 
accessTokenXX 
,XX 
refreshTokenXX  ,
)XX, -
=XX. /
awaitXX0 5
_authServiceXX6 B
.XXB C

LoginAsyncXXC M
(XXM N
requestYY 
.YY 
EmailYY 
,YY 
requestZZ 
.ZZ 
PasswordZZ 
)ZZ 
;ZZ 
var\\ 
response\\ 
=\\ 
new\\ 
AuthResponse\\ '
{]] 	
User^^ 
=^^ 
MapToUserDto^^ 
(^^  
user^^  $
)^^$ %
,^^% &
AccessToken__ 
=__ 
accessToken__ %
,__% &
RefreshToken`` 
=`` 
refreshToken`` '
,``' (
	ExpiresInaa 
=aa 
_jwtSettingsaa $
.aa$ %(
AccessTokenExpirationMinutesaa% A
*aaB C
$numaaD F
}bb 	
;bb	 

_loggerdd 
.dd 
LogInformationdd 
(dd 
$strdd m
,ddm n
useree 
.ee 
Idee 
,ee 
accessTokenee  
?ee  !
.ee! "
Lengthee" (
??ee) +
$numee, -
)ee- .
;ee. /
returngg 
Okgg 
(gg 
responsegg 
)gg 
;gg 
}hh 
[rr 
HttpPostrr 
(rr 
$strrr 
)rr 
]rr 
publicss 

asyncss 
Taskss 
<ss 
ActionResultss "
<ss" #
AuthResponsess# /
>ss/ 0
>ss0 1
RefreshTokenss2 >
(ss> ?
[ss? @
FromBodyss@ H
]ssH I
RefreshTokenRequestssJ ]
requestss^ e
)sse f
{tt 
varuu 
(uu 
useruu 
,uu 
accessTokenuu 
,uu 
refreshTokenuu  ,
)uu, -
=uu. /
awaituu0 5
_authServiceuu6 B
.uuB C
RefreshTokenAsyncuuC T
(uuT U
requestuuU \
.uu\ ]
RefreshTokenuu] i
)uui j
;uuj k
varww 
responseww 
=ww 
newww 
AuthResponseww '
{xx 	
Useryy 
=yy 
MapToUserDtoyy 
(yy  
useryy  $
)yy$ %
,yy% &
AccessTokenzz 
=zz 
accessTokenzz %
,zz% &
RefreshToken{{ 
={{ 
refreshToken{{ '
,{{' (
	ExpiresIn|| 
=|| 
_jwtSettings|| $
.||$ %(
AccessTokenExpirationMinutes||% A
*||B C
$num||D F
}}} 	
;}}	 

return 
Ok 
( 
response 
) 
; 
}
ÄÄ 
[
ââ 
HttpPost
ââ 
(
ââ 
$str
ââ 
)
ââ 
]
ââ 
[
ää 
	Authorize
ää 
]
ää 
public
ãã 

async
ãã 
Task
ãã 
<
ãã 
ActionResult
ãã "
>
ãã" #
Logout
ãã$ *
(
ãã* +
[
ãã+ ,
FromBody
ãã, 4
]
ãã4 5!
RefreshTokenRequest
ãã6 I
request
ããJ Q
)
ããQ R
{
åå 
await
çç 
_authService
çç 
.
çç %
RevokeRefreshTokenAsync
çç 2
(
çç2 3
request
çç3 :
.
çç: ;
RefreshToken
çç; G
)
ççG H
;
ççH I
return
éé 
Ok
éé 
(
éé 
new
éé 
{
éé 
message
éé 
=
éé  !
$str
éé" ;
}
éé< =
)
éé= >
;
éé> ?
}
èè 
[
òò 
HttpGet
òò 
(
òò 
$str
òò 
)
òò 
]
òò 
[
ôô 
	Authorize
ôô 
]
ôô 
public
öö 

async
öö 
Task
öö 
<
öö 
ActionResult
öö "
<
öö" #
UserDto
öö# *
>
öö* +
>
öö+ ,
GetMe
öö- 2
(
öö2 3
)
öö3 4
{
õõ 
var
úú 
userId
úú 
=
úú 
GetCurrentUserId
úú %
(
úú% &
)
úú& '
;
úú' (
var
ùù 
user
ùù 
=
ùù 
await
ùù 
_authService
ùù %
.
ùù% &
GetUserByIdAsync
ùù& 6
(
ùù6 7
userId
ùù7 =
)
ùù= >
;
ùù> ?
if
üü 

(
üü 
user
üü 
==
üü 
null
üü 
)
üü 
{
†† 	
throw
°° 
new
°° "
KeyNotFoundException
°° *
(
°°* +
$str
°°+ ;
)
°°; <
;
°°< =
}
¢¢ 	
return
§§ 
Ok
§§ 
(
§§ 
MapToUserDto
§§ 
(
§§ 
user
§§ #
)
§§# $
)
§§$ %
;
§§% &
}
•• 
[
ØØ 
HttpPut
ØØ 
(
ØØ 
$str
ØØ 
)
ØØ 
]
ØØ 
[
∞∞ 
	Authorize
∞∞ 
]
∞∞ 
public
±± 

async
±± 
Task
±± 
<
±± 
ActionResult
±± "
<
±±" #
UserDto
±±# *
>
±±* +
>
±±+ ,
UpdateProfile
±±- :
(
±±: ;
[
±±; <
FromBody
±±< D
]
±±D E"
UpdateProfileRequest
±±F Z
request
±±[ b
)
±±b c
{
≤≤ 
var
≥≥ 
userId
≥≥ 
=
≥≥ 
GetCurrentUserId
≥≥ %
(
≥≥% &
)
≥≥& '
;
≥≥' (
var
¥¥ 
success
¥¥ 
=
¥¥ 
await
¥¥ 
_authService
¥¥ (
.
¥¥( )$
UpdateUserProfileAsync
¥¥) ?
(
¥¥? @
userId
¥¥@ F
,
¥¥F G
request
¥¥H O
.
¥¥O P
Name
¥¥P T
,
¥¥T U
request
¥¥V ]
.
¥¥] ^
Avatar
¥¥^ d
)
¥¥d e
;
¥¥e f
if
∂∂ 

(
∂∂ 
!
∂∂ 
success
∂∂ 
)
∂∂ 
{
∑∑ 	
throw
∏∏ 
new
∏∏ "
KeyNotFoundException
∏∏ *
(
∏∏* +
$str
∏∏+ ;
)
∏∏; <
;
∏∏< =
}
ππ 	
var
ªª 
user
ªª 
=
ªª 
await
ªª 
_authService
ªª %
.
ªª% &
GetUserByIdAsync
ªª& 6
(
ªª6 7
userId
ªª7 =
)
ªª= >
;
ªª> ?
return
ºº 
Ok
ºº 
(
ºº 
MapToUserDto
ºº 
(
ºº 
user
ºº #
!
ºº# $
)
ºº$ %
)
ºº% &
;
ºº& '
}
ΩΩ 
[
»» 
HttpPut
»» 
(
»» 
$str
»» 
)
»» 
]
»»  
[
…… 
	Authorize
…… 
]
…… 
public
   

async
   
Task
   
<
   
ActionResult
   "
>
  " #
ChangePassword
  $ 2
(
  2 3
[
  3 4
FromBody
  4 <
]
  < =#
ChangePasswordRequest
  > S
request
  T [
)
  [ \
{
ÀÀ 
var
ÃÃ 
userId
ÃÃ 
=
ÃÃ 
GetCurrentUserId
ÃÃ %
(
ÃÃ% &
)
ÃÃ& '
;
ÃÃ' (
var
ÕÕ 
success
ÕÕ 
=
ÕÕ 
await
ÕÕ 
_authService
ÕÕ (
.
ÕÕ( )!
ChangePasswordAsync
ÕÕ) <
(
ÕÕ< =
userId
ÕÕ= C
,
ÕÕC D
request
ÕÕE L
.
ÕÕL M
CurrentPassword
ÕÕM \
,
ÕÕ\ ]
request
ÕÕ^ e
.
ÕÕe f
NewPassword
ÕÕf q
)
ÕÕq r
;
ÕÕr s
if
œœ 

(
œœ 
!
œœ 
success
œœ 
)
œœ 
{
–– 	
throw
—— 
new
—— "
KeyNotFoundException
—— *
(
——* +
$str
——+ ;
)
——; <
;
——< =
}
““ 	
return
‘‘ 
Ok
‘‘ 
(
‘‘ 
new
‘‘ 
{
‘‘ 
message
‘‘ 
=
‘‘  !
$str
‘‘" A
}
‘‘B C
)
‘‘C D
;
‘‘D E
}
’’ 
private
◊◊ 
Guid
◊◊ 
GetCurrentUserId
◊◊ !
(
◊◊! "
)
◊◊" #
{
ÿÿ 
var
ŸŸ 
userIdClaim
ŸŸ 
=
ŸŸ 
User
ŸŸ 
.
ŸŸ 
	FindFirst
ŸŸ (
(
ŸŸ( )

ClaimTypes
ŸŸ) 3
.
ŸŸ3 4
NameIdentifier
ŸŸ4 B
)
ŸŸB C
?
ŸŸC D
.
ŸŸD E
Value
ŸŸE J
;
ŸŸJ K
if
⁄⁄ 

(
⁄⁄ 
string
⁄⁄ 
.
⁄⁄ 
IsNullOrEmpty
⁄⁄  
(
⁄⁄  !
userIdClaim
⁄⁄! ,
)
⁄⁄, -
||
⁄⁄. 0
!
⁄⁄1 2
Guid
⁄⁄2 6
.
⁄⁄6 7
TryParse
⁄⁄7 ?
(
⁄⁄? @
userIdClaim
⁄⁄@ K
,
⁄⁄K L
out
⁄⁄M P
var
⁄⁄Q T
userId
⁄⁄U [
)
⁄⁄[ \
)
⁄⁄\ ]
{
€€ 	
throw
‹‹ 
new
‹‹ )
UnauthorizedAccessException
‹‹ 1
(
‹‹1 2
$str
‹‹2 F
)
‹‹F G
;
‹‹G H
}
›› 	
return
ﬁﬁ 
userId
ﬁﬁ 
;
ﬁﬁ 
}
ﬂﬂ 
private
·· 
static
·· 
UserDto
·· 
MapToUserDto
·· '
(
··' (
User
··( ,
user
··- 1
)
··1 2
{
‚‚ 
return
„„ 
new
„„ 
UserDto
„„ 
{
‰‰ 	
Id
ÂÂ 
=
ÂÂ 
user
ÂÂ 
.
ÂÂ 
Id
ÂÂ 
.
ÂÂ 
ToString
ÂÂ !
(
ÂÂ! "
)
ÂÂ" #
,
ÂÂ# $
Email
ÊÊ 
=
ÊÊ 
user
ÊÊ 
.
ÊÊ 
Email
ÊÊ 
,
ÊÊ 
Name
ÁÁ 
=
ÁÁ 
user
ÁÁ 
.
ÁÁ 
Name
ÁÁ 
,
ÁÁ 
Avatar
ËË 
=
ËË 
user
ËË 
.
ËË 
Avatar
ËË  
,
ËË  !
Provider
ÈÈ 
=
ÈÈ 
user
ÈÈ 
.
ÈÈ 
Provider
ÈÈ $
,
ÈÈ$ %
	CreatedAt
ÍÍ 
=
ÍÍ 
user
ÍÍ 
.
ÍÍ 
	CreatedAt
ÍÍ &
,
ÍÍ& '
LastLoginAt
ÎÎ 
=
ÎÎ 
user
ÎÎ 
.
ÎÎ 
LastLoginAt
ÎÎ *
}
ÏÏ 	
;
ÏÏ	 

}
ÌÌ 
}ÓÓ ‚
=/usr/src/backend/GeoQuizApi/Configuration/SecuritySettings.cs
	namespace 	

GeoQuizApi
 
. 
Configuration "
;" #
public 
class 
SecuritySettings 
{ 
public 

const 
string 
SectionName #
=$ %
$str& 8
;8 9
public 

bool 
EnforceHttps 
{ 
get "
;" #
set$ '
;' (
}) *
=+ ,
true- 1
;1 2
public 

bool 

EnableHsts 
{ 
get  
;  !
set" %
;% &
}' (
=) *
true+ /
;/ 0
public		 

int		 

HstsMaxAge		 
{		 
get		 
;		  
set		! $
;		$ %
}		& '
=		( )
$num		* 2
;		2 3
public

 

bool

 
EnableRateLimiting

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
=

1 2
true

3 7
;

7 8
public 

bool !
EnableSecurityHeaders %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
true6 :
;: ;
public 

bool !
EnableInputValidation %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
true6 :
;: ;
public 

long 
MaxRequestSize 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
$num/ 7
;7 8
public 

int 
RequestTimeout 
{ 
get  #
;# $
set% (
;( )
}* +
=, -
$num. 0
;0 1
public 

RateLimitSettings 
	RateLimit &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
=5 6
new7 :
(: ;
); <
;< =
} 
public 
class 
RateLimitSettings 
{ 
public 

int "
AuthEndpointsPerMinute %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
$num6 8
;8 9
public 

int %
GeneralEndpointsPerMinute (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
=7 8
$num9 <
;< =
public 

int 
WindowSizeMinutes  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
$num1 2
;2 3
} É
8/usr/src/backend/GeoQuizApi/Configuration/JwtSettings.cs
	namespace 	

GeoQuizApi
 
. 
Configuration "
;" #
public 
class 
JwtSettings 
{ 
public 

const 
string 
SectionName #
=$ %
$str& 3
;3 4
public 

string 
	SecretKey 
{ 
get !
;! "
set# &
;& '
}( )
=* +
string, 2
.2 3
Empty3 8
;8 9
public 

string 
Issuer 
{ 
get 
; 
set  #
;# $
}% &
=' (
string) /
./ 0
Empty0 5
;5 6
public		 

string		 
Audience		 
{		 
get		  
;		  !
set		" %
;		% &
}		' (
=		) *
string		+ 1
.		1 2
Empty		2 7
;		7 8
public

 

int

 (
AccessTokenExpirationMinutes

 +
{

, -
get

. 1
;

1 2
set

3 6
;

6 7
}

8 9
=

: ;
$num

< >
;

> ?
public 

int &
RefreshTokenExpirationDays )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
=8 9
$num: ;
;; <
} ˘
9/usr/src/backend/GeoQuizApi/Configuration/CorsSettings.cs
	namespace 	

GeoQuizApi
 
. 
Configuration "
;" #
public 
class 
CorsSettings 
{ 
public 

const 
string 
SectionName #
=$ %
$str& 4
;4 5
public 

string 
[ 
] 
AllowedOrigins "
{# $
get% (
;( )
set* -
;- .
}/ 0
=1 2
Array3 8
.8 9
Empty9 >
<> ?
string? E
>E F
(F G
)G H
;H I
public 

bool 
AllowCredentials  
{! "
get# &
;& '
set( +
;+ ,
}- .
=/ 0
true1 5
;5 6
public		 

string		 
[		 
]		 
AllowedHeaders		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
=		1 2
Array		3 8
.		8 9
Empty		9 >
<		> ?
string		? E
>		E F
(		F G
)		G H
;		H I
public

 

string

 
[

 
]

 
AllowedMethods

 "
{

# $
get

% (
;

( )
set

* -
;

- .
}

/ 0
=

1 2
Array

3 8
.

8 9
Empty

9 >
<

> ?
string

? E
>

E F
(

F G
)

G H
;

H I
} 