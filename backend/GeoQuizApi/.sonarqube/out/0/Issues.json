{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "5.0.0.0",
        "fileVersion": "5.0.0-1.25358.103 (75972a5b)",
        "semanticVersion": "5.0.0"
      },
      "results": [
        {
          "ruleId": "CS8602",
          "level": "warning",
          "message": "Dereference of a possibly null reference.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 90,
                  "endLine": 58,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'Users' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 24,
                  "endLine": 12,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'GameSessions' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 31,
                  "endLine": 13,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable property 'RefreshTokens' must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring the property as nullable.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs",
                "region": {
                  "startLine": 8,
                  "startColumn": 12,
                  "endLine": 8,
                  "endColumn": 28
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Data/GeoQuizDbContext.cs",
                "region": {
                  "startLine": 14,
                  "startColumn": 32,
                  "endLine": 14,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 1,
                  "endLine": 325,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this top-level file to reduce its Cognitive Complexity from 38 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 5,
                  "endLine": 24,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 1,
                  "endLine": 138,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 1,
                  "endLine": 144,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 5,
                  "endLine": 146,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 146,
                  "startColumn": 53,
                  "endLine": 146,
                  "endColumn": 55
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 5,
                  "endLine": 152,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 240,
                  "startColumn": 1,
                  "endLine": 240,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 9,
                  "endLine": 249,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 9,
                  "endLine": 253,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 259,
                  "startColumn": 9,
                  "endLine": 259,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 9,
                  "endLine": 263,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 9,
                  "endLine": 268,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 9,
                  "endLine": 272,
                  "endColumn": 13
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 9,
                  "endLine": 277,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 43,
                  "endLine": 277,
                  "endColumn": 45
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 5,
                  "endLine": 296,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 5,
                  "endLine": 300,
                  "endColumn": 9
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 307,
                  "startColumn": 5,
                  "endLine": 307,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 314,
                  "startColumn": 1,
                  "endLine": 314,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 334,
                  "startColumn": 5,
                  "endLine": 334,
                  "endColumn": 7
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 359,
                  "startColumn": 1,
                  "endLine": 359,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 364,
                  "startColumn": 1,
                  "endLine": 364,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 1,
                  "endLine": 369,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 375,
                  "startColumn": 1,
                  "endLine": 375,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 1,
                  "endLine": 380,
                  "endColumn": 3
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 380,
                  "startColumn": 42,
                  "endLine": 380,
                  "endColumn": 44
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+2 (incl 1 for nesting)",
              "1": "+1",
              "10": "+1",
              "11": "+3 (incl 2 for nesting)",
              "12": "+1",
              "13": "+3 (incl 2 for nesting)",
              "14": "+1",
              "15": "+1",
              "16": "+1",
              "17": "+1",
              "18": "+1",
              "19": "+2 (incl 1 for nesting)",
              "2": "+1",
              "20": "+1",
              "21": "+1",
              "22": "+1",
              "23": "+1",
              "24": "+1",
              "25": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+1",
              "5": "+2 (incl 1 for nesting)",
              "6": "+1",
              "7": "+3 (incl 2 for nesting)",
              "8": "+1",
              "9": "+3 (incl 2 for nesting)"
            }
          }
        },
        {
          "ruleId": "S3903",
          "level": "warning",
          "message": "Move 'ProblemDetailsConstants' into a named namespace.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 398,
                  "startColumn": 23,
                  "endLine": 398,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 9,
                  "endLine": 22,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 19,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 9,
                  "endLine": 21,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 9,
                  "endLine": 22,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 23,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 9,
                  "endLine": 24,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Users' 5 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 23,
                  "endLine": 15,
                  "endColumn": 30
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 53,
                  "startColumn": 41,
                  "endLine": 53,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 41,
                  "endLine": 75,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 24,
                  "endLine": 113,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 23,
                  "endLine": 128,
                  "endColumn": 30
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'GameSessions' 5 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 23,
                  "endLine": 34,
                  "endColumn": 37
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 82,
                  "startColumn": 24,
                  "endLine": 82,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 24,
                  "endLine": 87,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 24,
                  "endLine": 92,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 23,
                  "endLine": 122,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'INTEGER' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 62,
                  "endLine": 40,
                  "endColumn": 71
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 41,
                  "startColumn": 60,
                  "endLine": 41,
                  "endColumn": 69
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 65,
                  "endLine": 44,
                  "endColumn": 74
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 58,
                  "endLine": 67,
                  "endColumn": 67
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'RefreshTokens' 5 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 23,
                  "endLine": 59,
                  "endColumn": 38
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 24,
                  "endLine": 97,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 24,
                  "endLine": 102,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 24,
                  "endLine": 108,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Migrations/20250720085728_InitialCreate.cs",
                "region": {
                  "startLine": 125,
                  "startColumn": 23,
                  "endLine": 125,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Healthy' 6 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/HealthController.cs",
                "region": {
                  "startLine": 33,
                  "startColumn": 22,
                  "endLine": 33,
                  "endColumn": 31
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/HealthController.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 29,
                  "endLine": 50,
                  "endColumn": 38
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/HealthController.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 35,
                  "endLine": 59,
                  "endColumn": 44
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/HealthController.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 22,
                  "endLine": 72,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/HealthController.cs",
                "region": {
                  "startLine": 81,
                  "startColumn": 22,
                  "endLine": 81,
                  "endColumn": 31
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/HealthController.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 33,
                  "endLine": 94,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null,
              "3": null,
              "4": null
            }
          }
        },
        {
          "ruleId": "S1192",
          "level": "warning",
          "message": "Define a constant instead of using this literal 'Validation failed' 4 times.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/Exceptions/ValidationException.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 76,
                  "endLine": 19,
                  "endColumn": 95
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/Exceptions/ValidationException.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 69,
                  "endLine": 29,
                  "endColumn": 88
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/Exceptions/ValidationException.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 72,
                  "endLine": 39,
                  "endColumn": 91
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/Exceptions/ValidationException.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 74,
                  "endLine": 49,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null,
              "1": null,
              "2": null
            }
          }
        },
        {
          "ruleId": "S1075",
          "level": "warning",
          "message": "Refactor your code not to use hardcoded absolute paths or URIs.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/ProblemTypes.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 35,
                  "endLine": 15,
                  "endColumn": 75
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/LeaderboardController.cs",
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/LeaderboardController.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 44,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/LeaderboardController.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 9,
                  "endLine": 92,
                  "endColumn": 62
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/LeaderboardController.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 9,
                  "endLine": 134,
                  "endColumn": 97
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/LeaderboardController.cs",
                "region": {
                  "startLine": 117,
                  "startColumn": 9,
                  "endLine": 118,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 13,
                  "endLine": 73,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 134,
                  "startColumn": 9,
                  "endLine": 134,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6664",
          "level": "warning",
          "message": "Reduce the number of Information logging calls within this code block from 4 to the 2 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 9,
                  "endLine": 45,
                  "endColumn": 79
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 77
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "endLine": 58,
                  "endColumn": 107
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 78
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Reduce the number of Information logging calls within this code block from 4 to the 2 allowed.",
              "1": "Reduce the number of Information logging calls within this code block from 4 to the 2 allowed.",
              "2": "Reduce the number of Information logging calls within this code block from 4 to the 2 allowed."
            }
          }
        },
        {
          "ruleId": "S6964",
          "level": "warning",
          "message": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/GameStats/GameSessionRequest.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 44,
                  "startColumn": 9,
                  "endLine": 45,
                  "endColumn": 79
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 108
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/GameStatsController.cs",
                "region": {
                  "startLine": 58,
                  "startColumn": 9,
                  "endLine": 58,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/AuthController.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 9,
                  "endLine": 61,
                  "endColumn": 53
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/AuthController.cs",
                "region": {
                  "startLine": 86,
                  "startColumn": 9,
                  "endLine": 86,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Controllers/AuthController.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 9,
                  "endLine": 101,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S5122",
          "level": "warning",
          "message": "Make sure this permissive CORS policy is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 13,
                  "endLine": 256,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'CalculateBestStreak' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 17,
                  "endLine": 279,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 281,
                  "startColumn": 14,
                  "endLine": 281,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await MigrateAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 9,
                  "endLine": 298,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await EnsureCreatedAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 303,
                  "startColumn": 9,
                  "endLine": 303,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6966",
          "level": "warning",
          "message": "Await RunAsync instead.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Program.cs",
                "region": {
                  "startLine": 395,
                  "startColumn": 1,
                  "endLine": 395,
                  "endColumn": 10
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'CalculateTotalScore' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 17,
                  "endLine": 306,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6608",
          "level": "warning",
          "message": "Indexing at 0 should be used instead of the \"Enumerable\" extension method \"First\"",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 33,
                  "endLine": 254,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 249,
                  "startColumn": 14,
                  "endLine": 249,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetFromDateForPeriod' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 23,
                  "endLine": 319,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GenerateCacheKey' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 20,
                  "endLine": 336,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CalculateBestStreak' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 279,
                  "startColumn": 17,
                  "endLine": 279,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'CalculateTotalScore' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 306,
                  "startColumn": 17,
                  "endLine": 306,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetFromDateForPeriod' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 319,
                  "startColumn": 23,
                  "endLine": 319,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GenerateCacheKey' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/LeaderboardService.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 20,
                  "endLine": 336,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S7039",
          "level": "warning",
          "message": "Content Security Policies should be restrictive to mitigate the risk of content injection attacks.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/SecurityHeadersMiddleware.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 56,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/SecurityHeadersMiddleware.cs",
                "region": {
                  "startLine": 70,
                  "startColumn": 9,
                  "endLine": 70,
                  "endColumn": 86
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 29,
                  "endLine": 144,
                  "endColumn": 89
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 92,
                  "endLine": 144,
                  "endColumn": 140
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1854",
          "level": "note",
          "message": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check to avoid double lookup",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 27,
                  "endLine": 145,
                  "endColumn": 85
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 88,
                  "endLine": 145,
                  "endColumn": 134
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "endLine": 32,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 119
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 17,
                  "endLine": 37,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 13,
                  "endLine": 90,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 91,
                  "startColumn": 17,
                  "endLine": 91,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 95,
                  "startColumn": 17,
                  "endLine": 95,
                  "endColumn": 93
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 99,
                  "startColumn": 17,
                  "endLine": 99,
                  "endColumn": 84
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 107,
                  "startColumn": 17,
                  "endLine": 107,
                  "endColumn": 77
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/Rfc9457ErrorHandlingMiddleware.cs",
                "region": {
                  "startLine": 111,
                  "startColumn": 17,
                  "endLine": 111,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs",
                "region": {
                  "startLine": 89,
                  "startColumn": 9,
                  "endLine": 97,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 13,
                  "endLine": 101,
                  "endColumn": 100
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs",
                "region": {
                  "startLine": 109,
                  "startColumn": 9,
                  "endLine": 117,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs",
                "region": {
                  "startLine": 128,
                  "startColumn": 17,
                  "endLine": 128,
                  "endColumn": 110
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 27,
                  "endLine": 172,
                  "endColumn": 72
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RequestLoggingMiddleware.cs",
                "region": {
                  "startLine": 182,
                  "startColumn": 9,
                  "endLine": 190,
                  "endColumn": 36
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified using the \"Where\" LINQ method",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/ProblemTypes.cs",
                "region": {
                  "startLine": 75,
                  "startColumn": 29,
                  "endLine": 75,
                  "endColumn": 54
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/ProblemTypes.cs",
                "region": {
                  "startLine": 77,
                  "startColumn": 17,
                  "endLine": 77,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 14,
                  "endLine": 103,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/ConcurrencyUtilities.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 24,
                  "endLine": 30,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/ConcurrencyUtilities.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 24,
                  "endLine": 36,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RateLimitingMiddleware.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 39,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified using the \"Where\" LINQ method",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 33,
                  "endLine": 94,
                  "endColumn": 50
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 96,
                  "startColumn": 17,
                  "endLine": 96,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S3267",
          "level": "warning",
          "message": "Loops should be simplified using the \"Where\" LINQ method",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 108,
                  "startColumn": 33,
                  "endLine": 108,
                  "endColumn": 44
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/InputValidationMiddleware.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 17,
                  "endLine": 110,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": null
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/UpdateProfileRequest.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 13,
                  "endLine": 20,
                  "endColumn": 15
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/UpdateProfileRequest.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/UpdateProfileRequest.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 13,
                  "endLine": 31,
                  "endColumn": 15
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/UpdateProfileRequest.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 29,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/ChangePasswordRequest.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 13,
                  "endLine": 22,
                  "endColumn": 15
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/ChangePasswordRequest.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 20,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/ChangePasswordRequest.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 18,
                  "endLine": 22,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/ChangePasswordRequest.cs",
                "region": {
                  "startLine": 22,
                  "startColumn": 18,
                  "endLine": 22,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'GetClientIdentifier' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RateLimitingMiddleware.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 20,
                  "endLine": 51,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "warning",
          "message": "Make 'IsAuthEndpoint' a static method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RateLimitingMiddleware.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 18,
                  "endLine": 62,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RegisterRequest.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 15
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RegisterRequest.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 9,
                  "endLine": 25,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "Merge this if statement with its nested one."
            }
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RegisterRequest.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 18,
                  "endLine": 27,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1847",
          "level": "note",
          "message": "Use 'string.Contains(char)' instead of 'string.Contains(string)' when searching for a single character",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RegisterRequest.cs",
                "region": {
                  "startLine": 36,
                  "startColumn": 60,
                  "endLine": 36,
                  "endColumn": 63
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Models/DTOs/Auth/RegisterRequest.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 18,
                  "endLine": 27,
                  "endColumn": 80
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 17,
                  "endLine": 80,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 49,
                  "startColumn": 13,
                  "endLine": 49,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 168,
                  "startColumn": 14,
                  "endLine": 168,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 49,
                  "endLine": 163,
                  "endColumn": 91
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToLowerInvariant"
            }
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 119,
                  "startColumn": 13,
                  "endLine": 119,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 126,
                  "startColumn": 13,
                  "endLine": 126,
                  "endColumn": 129
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 9,
                  "endLine": 138,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'GetClientIdentifier' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RateLimitingMiddleware.cs",
                "region": {
                  "startLine": 51,
                  "startColumn": 20,
                  "endLine": 51,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IsAuthEndpoint' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Middleware/RateLimitingMiddleware.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 18,
                  "endLine": 62,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 13,
                  "endLine": 110,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 183,
                  "startColumn": 29,
                  "endLine": 183,
                  "endColumn": 58
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 9,
                  "endLine": 185,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 39,
                  "endLine": 185,
                  "endColumn": 41
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 9,
                  "endLine": 192,
                  "endColumn": 11
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 204,
                  "startColumn": 17,
                  "endLine": 204,
                  "endColumn": 24
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 21,
                  "endLine": 207,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 78,
                  "endLine": 207,
                  "endColumn": 80
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 217,
                  "startColumn": 21,
                  "endLine": 217,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 229,
                  "startColumn": 25,
                  "endLine": 229,
                  "endColumn": 26
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 17,
                  "endLine": 247,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 256,
                  "startColumn": 17,
                  "endLine": 256,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 263,
                  "startColumn": 13,
                  "endLine": 263,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+2 (incl 1 for nesting)",
              "2": "+1",
              "3": "+2 (incl 1 for nesting)",
              "4": "+3 (incl 2 for nesting)",
              "5": "+1",
              "6": "+3 (incl 2 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+2 (incl 1 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 173,
                  "startColumn": 21,
                  "endLine": 173,
                  "endColumn": 130
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 186,
                  "startColumn": 17,
                  "endLine": 186,
                  "endColumn": 111
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 218,
                  "startColumn": 13,
                  "endLine": 218,
                  "endColumn": 112
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 17,
                  "endLine": 247,
                  "endColumn": 96
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 14,
                  "endLine": 297,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 288,
                  "startColumn": 39,
                  "endLine": 288,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToLowerInvariant"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 234,
                  "startColumn": 22,
                  "endLine": 234,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 211,
                  "startColumn": 25,
                  "endLine": 211,
                  "endColumn": 107
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 253,
                  "startColumn": 21,
                  "endLine": 254,
                  "endColumn": 52
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 185,
                  "startColumn": 43,
                  "endLine": 185,
                  "endColumn": 66
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 247,
                  "startColumn": 21,
                  "endLine": 247,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 261,
                  "startColumn": 24,
                  "endLine": 261,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/GameStatsService.cs",
                "region": {
                  "startLine": 325,
                  "startColumn": 14,
                  "endLine": 325,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        },
        {
          "ruleId": "CA1862",
          "level": "note",
          "message": "Prefer using 'string.Equals(string, StringComparison)' to perform a case-insensitive comparison, but keep in mind that this might cause subtle changes in behavior, so make sure to conduct thorough testing after applying the suggestion, or if culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 272,
                  "startColumn": 39,
                  "endLine": 272,
                  "endColumn": 74
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "LeftOffendingMethod": null,
              "RightOffendingMethod": "ToLowerInvariant"
            }
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 290,
                  "startColumn": 13,
                  "endLine": 290,
                  "endColumn": 81
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6444",
          "level": "warning",
          "message": "Pass a timeout to limit the execution time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 30,
                  "endLine": 351,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "SYSLIB1045",
          "level": "note",
          "message": "Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 351,
                  "startColumn": 30,
                  "endLine": 351,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 329,
                  "startColumn": 17,
                  "endLine": 329,
                  "endColumn": 125
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1873",
          "level": "note",
          "message": "Evaluation of this argument may be expensive and unnecessary if logging is disabled",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 13,
                  "endLine": 337,
                  "endColumn": 95
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1860",
          "level": "note",
          "message": "Prefer comparing 'Count' to 0 rather than using 'Any()', both for clarity and for performance",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///usr/src/backend/GeoQuizApi/Services/AuthService.cs",
                "region": {
                  "startLine": 313,
                  "startColumn": 13,
                  "endLine": 313,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "DiagnosticPropertyKey": "Count"
            }
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1847": {
          "id": "CA1847",
          "shortDescription": "Use char literal for a single character lookup",
          "fullDescription": "'string.Contains(char)' is available as a better performing overload for single char lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1847",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1854": {
          "id": "CA1854",
          "shortDescription": "Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method",
          "fullDescription": "Prefer a 'TryGetValue' call over a Dictionary indexer access guarded by a 'ContainsKey' check. 'ContainsKey' and the indexer both would lookup the key under the hood, so using 'TryGetValue' removes the extra lookup.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1854",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1860": {
          "id": "CA1860",
          "shortDescription": "Avoid using 'Enumerable.Any()' extension method",
          "fullDescription": "Prefer using 'IsEmpty', 'Count' or 'Length' properties whichever available, rather than calling 'Enumerable.Any()'. The intent is clearer and it is more performant than using 'Enumerable.Any()' extension method.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1860",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1862": {
          "id": "CA1862",
          "shortDescription": "Use the 'StringComparison' method overloads to perform case-insensitive string comparisons",
          "fullDescription": "Avoid calling 'ToLower', 'ToUpper', 'ToLowerInvariant' and 'ToUpperInvariant' to perform case-insensitive string comparisons, as in 'string.ToLower() == string.ToLower()', because they lead to an allocation. Instead, use 'string.Equals(string, StringComparison)' to perform case-insensitive comparisons. Switching to using an overload that takes a 'StringComparison' might cause subtle changes in behavior, so it's important to conduct thorough testing after applying the suggestion. Additionally, if a culturally sensitive comparison is not required, consider using 'StringComparison.OrdinalIgnoreCase'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1862",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CA1873": {
          "id": "CA1873",
          "shortDescription": "Avoid potentially expensive logging",
          "fullDescription": "In many situations, logging is disabled or set to a log level that results in an unnecessary evaluation for this argument.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1873",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8602": {
          "id": "CS8602",
          "shortDescription": "Dereference of a possibly null reference.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8602)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider adding the 'required' modifier or declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1075": {
          "id": "S1075",
          "shortDescription": "URIs should not be hardcoded",
          "fullDescription": "Hard-coding a URI makes it difficult to test a program for a variety of reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1075",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1192": {
          "id": "S1192",
          "shortDescription": "String literals should not be duplicated",
          "fullDescription": "Duplicated string literals make the process of refactoring complex and error-prone, as any change would need to be propagated on all occurrences.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1192",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3267": {
          "id": "S3267",
          "shortDescription": "Loops should be simplified with \"LINQ\" expressions",
          "fullDescription": "Using explicit loops for filtering, selecting, or aggregating elements can make code more verbose and harder to read. LINQ expressions provide a more concise and expressive way to perform these operations, improving code clarity and maintainability.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3267",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3903": {
          "id": "S3903",
          "shortDescription": "Types should be defined in named namespaces",
          "fullDescription": "Types are declared in namespaces in order to prevent name collisions and as a way to organize them into the object hierarchy. Types that are defined outside any named namespace are in a global namespace that cannot be referenced in code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3903",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S5122": {
          "id": "S5122",
          "shortDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive",
          "fullDescription": "Having a permissive Cross-Origin Resource Sharing policy is security-sensitive. It has led in the past to the following vulnerabilities:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-5122",
          "properties": {
            "category": "Minor Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6444": {
          "id": "S6444",
          "shortDescription": "Not specifying a timeout for regular expressions is security-sensitive",
          "fullDescription": "Not specifying a timeout for regular expressions can lead to a Denial-of-Service attack. Pass a timeout when using System.Text.RegularExpressions to process untrusted input because a malicious user might craft a value for which the evaluation lasts excessively long.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6444",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6608": {
          "id": "S6608",
          "shortDescription": "Prefer indexing instead of \"Enumerable\" methods on types implementing \"IList\"",
          "fullDescription": "Indexes in C# provide direct access to an element at a specific position within an array or collection. When compared to Enumerable methods, indexing can be more efficient for certain scenarios, such as iterating over a large collection, due to avoiding the overhead of checking the underlying collection type before accessing it.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6608",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6664": {
          "id": "S6664",
          "shortDescription": "The code block contains too many logging calls",
          "fullDescription": "A code block should not contain too many logging statements of a specific level.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6664",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6964": {
          "id": "S6964",
          "shortDescription": "Value type property used as input in a controller action should be nullable, required or annotated with the JsonRequiredAttribute to avoid under-posting.",
          "fullDescription": "\"Under-posting\" refers to a situation where a client sends less data than expected to the server during an HTTP request, for example when the client omits some properties from the request body that the server expects to receive.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6964",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6966": {
          "id": "S6966",
          "shortDescription": "Awaitable method should be used",
          "fullDescription": "In an async method, any blocking operations should be avoided.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6966",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S7039": {
          "id": "S7039",
          "shortDescription": "Content Security Policies should be restrictive",
          "fullDescription": "The Content Security Policy (CSP) is a computer security standard that serves as an additional layer of protection against various types of attacks, including Cross-Site Scripting (XSS) and clickjacking. It provides a set of standard procedures for loading resources by user agents, which can help to mitigate the risk of content injection vulnerabilities.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-7039",
          "properties": {
            "category": "Major Vulnerability",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "SYSLIB1045": {
          "id": "SYSLIB1045",
          "shortDescription": "Convert to 'GeneratedRegexAttribute'.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/syslib-diagnostics/syslib1045",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}